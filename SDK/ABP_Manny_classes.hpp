#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Manny

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_Manny_structs.hpp"
#include "ControlRig_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Manny.ABP_Manny_C
// 0x0C20 (0x0F70 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UABP_Manny_C : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Manny::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                    // 0x0358(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03B8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x03E0(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0448(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0468(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x04A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x04C8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0580(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x06B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x06D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0700(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0728(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0750(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0778(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0840(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0868(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x08A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08C8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0908(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0928(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0968(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0988(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x09B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x09D0(0x00B8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0A88(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0AD0(0x0458)()
	bool                                          __CustomProperty_ShouldDoIKTrace_385011E94C94F6DE70691192D3E0622C; // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x7];                                      // 0x0F29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Character;                                         // 0x0F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            MovementComponent;                                 // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0F40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GroundSpeed;                                       // 0x0F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldMove;                                        // 0x0F60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFalling;                                         // 0x0F61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Manny(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Manny_AnimGraphNode_TransitionResult_305F37BB4A5AD886760B8E99A5C561E1();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Manny_C">();
	}
	static class UABP_Manny_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Manny_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UABP_Manny_C) == 0x000010, "Wrong alignment on UABP_Manny_C");
static_assert(sizeof(UABP_Manny_C) == 0x000F70, "Wrong size on UABP_Manny_C");
static_assert(offsetof(UABP_Manny_C, UberGraphFrame) == 0x000350, "Member 'UABP_Manny_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_Manny_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UABP_Manny_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Manny_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Manny_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_7) == 0x000390, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_6) == 0x0003B8, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_BlendSpacePlayer) == 0x0003E0, "Member 'UABP_Manny_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult_5) == 0x000448, "Member 'UABP_Manny_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_SequencePlayer_3) == 0x000468, "Member 'UABP_Manny_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult_4) == 0x0004A8, "Member 'UABP_Manny_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateMachine_1) == 0x0004C8, "Member 'UABP_Manny_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_SaveCachedPose) == 0x000580, "Member 'UABP_Manny_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_5) == 0x000688, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_4) == 0x0006B0, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_3) == 0x0006D8, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_2) == 0x000700, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult_1) == 0x000728, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_TransitionResult) == 0x000750, "Member 'UABP_Manny_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_ApplyAdditive) == 0x000778, "Member 'UABP_Manny_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_UseCachedPose_1) == 0x000840, "Member 'UABP_Manny_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_SequencePlayer_2) == 0x000868, "Member 'UABP_Manny_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult_3) == 0x0008A8, "Member 'UABP_Manny_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_SequencePlayer_1) == 0x0008C8, "Member 'UABP_Manny_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult_2) == 0x000908, "Member 'UABP_Manny_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_SequencePlayer) == 0x000928, "Member 'UABP_Manny_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult_1) == 0x000968, "Member 'UABP_Manny_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_UseCachedPose) == 0x000988, "Member 'UABP_Manny_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateResult) == 0x0009B0, "Member 'UABP_Manny_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_StateMachine) == 0x0009D0, "Member 'UABP_Manny_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_Slot) == 0x000A88, "Member 'UABP_Manny_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, AnimGraphNode_ControlRig) == 0x000AD0, "Member 'UABP_Manny_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, __CustomProperty_ShouldDoIKTrace_385011E94C94F6DE70691192D3E0622C) == 0x000F28, "Member 'UABP_Manny_C::__CustomProperty_ShouldDoIKTrace_385011E94C94F6DE70691192D3E0622C' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, Character) == 0x000F30, "Member 'UABP_Manny_C::Character' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, MovementComponent) == 0x000F38, "Member 'UABP_Manny_C::MovementComponent' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, Velocity) == 0x000F40, "Member 'UABP_Manny_C::Velocity' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, GroundSpeed) == 0x000F58, "Member 'UABP_Manny_C::GroundSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, ShouldMove) == 0x000F60, "Member 'UABP_Manny_C::ShouldMove' has a wrong offset!");
static_assert(offsetof(UABP_Manny_C, IsFalling) == 0x000F61, "Member 'UABP_Manny_C::IsFalling' has a wrong offset!");

}

