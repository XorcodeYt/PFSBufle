#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Mannequin_BasicFootIK

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PBIK_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_Mannequin_BasicFootIK.RigVMMemory_Work
// 0x05D8 (0x0600 - 0x0028)
class URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x00C0)(Edit, EditConst, NonTransactional)
	struct FVector                                FootTrace_FootTrace_SphereTraceByTraceChannel_HitLocation; // 0x00F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorAdd_Result;          // 0x0108(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             FootTrace_FootTrace_GetTransform_Transform;        // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              FootTrace_FootTrace_GetTransform_CachedIndex;      // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	float                                         FootTrace_FootTrace_MathFloatAdd_Result;           // 0x0190(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_FootTrace_MathFloatAdd_A;                // 0x0194(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace_FootTrace_GetTransform_1_Transform;      // 0x01A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              FootTrace_FootTrace_GetTransform_1_CachedIndex;    // 0x0200(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                FootTrace_FootTrace_MathVectorAdd_A__IO;           // 0x0210(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorSub_Result;          // 0x0228(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorSub_A__IO;           // 0x0240(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         FootTrace_FootTrace_SphereTraceByTraceChannel_bHit : 1; // 0x0258(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace_FootTrace_SphereTraceByTraceChannel_HitNormal; // 0x0260(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitLocation; // 0x0278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1_FootTrace_1_MathVectorAdd_Result;      // 0x0290(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace_1_FootTrace_1_GetTransform_Transform;    // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              FootTrace_1_FootTrace_1_GetTransform_CachedIndex;  // 0x0310(0x0010)(Edit, EditConst, NonTransactional)
	float                                         FootTrace_1_FootTrace_1_MathFloatAdd_Result;       // 0x0320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_1_FootTrace_1_MathFloatAdd_A;            // 0x0324(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace_1_FootTrace_1_GetTransform_1_Transform;  // 0x0330(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              FootTrace_1_FootTrace_1_GetTransform_1_CachedIndex; // 0x0390(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                FootTrace_1_FootTrace_1_MathVectorAdd_A__IO;       // 0x03A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1_FootTrace_1_MathVectorSub_Result;      // 0x03B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1_FootTrace_1_MathVectorSub_A__IO;       // 0x03D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_bHit : 1; // 0x03E8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitNormal; // 0x03F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaInterp_Result;                                // 0x0408(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaInterp_Value;                                 // 0x040C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputScaleBiasClamp>           AlphaInterp_ScaleBiasClamp;                        // 0x0410(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AlphaInterp_1_Result;                              // 0x0420(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaInterp_1_Value;                               // 0x0424(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputScaleBiasClamp>           AlphaInterp_1_ScaleBiasClamp;                      // 0x0428(0x0010)(Edit, EditConst, NonTransactional)
	double                                        If_Result;                                         // 0x0438(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         MathFloatLess_Result : 1;                          // 0x0440(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MathFloatLess_A;                                   // 0x0444(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatLess_B;                                   // 0x0448(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        If_True;                                           // 0x0450(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        If_False;                                          // 0x0458(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_ItemToModify__IO;              // 0x0460(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_WorkData;                     // 0x0470(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_ItemToModify__IO;            // 0x0480(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_WorkData;                   // 0x0490(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_1_ItemToModify__IO;          // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_1_WorkData;                 // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             GetTransform_Transform;                            // 0x04C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_CachedIndex;                          // 0x0520(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             GetTransform_1_Transform;                          // 0x0530(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_CachedIndex;                        // 0x0590(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FPBIKEffector>                  PBIK_Effectors__IO;                                // 0x05A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<int32>>                         PBIK_EffectorSolverIndices;                        // 0x05B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<int32>>                         PBIK_BoneSettingToSolverBoneIndex;                 // 0x05C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<int32>>                         PBIK_SolverBoneToElementIndex;                     // 0x05D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FPBIKSolver>                    PBIK_Solver;                                       // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<uint8>                                 PBIK_bNeedsInit;                                   // 0x05F0(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Work">();
	}
	static class URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Work>();
	}
};
static_assert(alignof(URigVMMemory_Work) == 0x000010, "Wrong alignment on URigVMMemory_Work");
static_assert(sizeof(URigVMMemory_Work) == 0x000600, "Wrong size on URigVMMemory_Work");
static_assert(offsetof(URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_SphereTraceByTraceChannel_HitLocation) == 0x0000F0, "Member 'URigVMMemory_Work::FootTrace_FootTrace_SphereTraceByTraceChannel_HitLocation' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathVectorAdd_Result) == 0x000108, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_GetTransform_Transform) == 0x000120, "Member 'URigVMMemory_Work::FootTrace_FootTrace_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_GetTransform_CachedIndex) == 0x000180, "Member 'URigVMMemory_Work::FootTrace_FootTrace_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathFloatAdd_Result) == 0x000190, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathFloatAdd_A) == 0x000194, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathFloatAdd_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_GetTransform_1_Transform) == 0x0001A0, "Member 'URigVMMemory_Work::FootTrace_FootTrace_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_GetTransform_1_CachedIndex) == 0x000200, "Member 'URigVMMemory_Work::FootTrace_FootTrace_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathVectorAdd_A__IO) == 0x000210, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathVectorAdd_A__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathVectorSub_Result) == 0x000228, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathVectorSub_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_MathVectorSub_A__IO) == 0x000240, "Member 'URigVMMemory_Work::FootTrace_FootTrace_MathVectorSub_A__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_FootTrace_SphereTraceByTraceChannel_HitNormal) == 0x000260, "Member 'URigVMMemory_Work::FootTrace_FootTrace_SphereTraceByTraceChannel_HitNormal' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitLocation) == 0x000278, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitLocation' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathVectorAdd_Result) == 0x000290, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_GetTransform_Transform) == 0x0002B0, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_GetTransform_CachedIndex) == 0x000310, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathFloatAdd_Result) == 0x000320, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathFloatAdd_A) == 0x000324, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathFloatAdd_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_GetTransform_1_Transform) == 0x000330, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_GetTransform_1_CachedIndex) == 0x000390, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathVectorAdd_A__IO) == 0x0003A0, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathVectorAdd_A__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathVectorSub_Result) == 0x0003B8, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathVectorSub_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_MathVectorSub_A__IO) == 0x0003D0, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_MathVectorSub_A__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitNormal) == 0x0003F0, "Member 'URigVMMemory_Work::FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_HitNormal' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_Result) == 0x000408, "Member 'URigVMMemory_Work::AlphaInterp_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_Value) == 0x00040C, "Member 'URigVMMemory_Work::AlphaInterp_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_ScaleBiasClamp) == 0x000410, "Member 'URigVMMemory_Work::AlphaInterp_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_1_Result) == 0x000420, "Member 'URigVMMemory_Work::AlphaInterp_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_1_Value) == 0x000424, "Member 'URigVMMemory_Work::AlphaInterp_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, AlphaInterp_1_ScaleBiasClamp) == 0x000428, "Member 'URigVMMemory_Work::AlphaInterp_1_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, If_Result) == 0x000438, "Member 'URigVMMemory_Work::If_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, MathFloatLess_A) == 0x000444, "Member 'URigVMMemory_Work::MathFloatLess_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, MathFloatLess_B) == 0x000448, "Member 'URigVMMemory_Work::MathFloatLess_B' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, If_True) == 0x000450, "Member 'URigVMMemory_Work::If_True' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, If_False) == 0x000458, "Member 'URigVMMemory_Work::If_False' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_ItemToModify__IO) == 0x000460, "Member 'URigVMMemory_Work::ModifyTransforms_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_WorkData) == 0x000470, "Member 'URigVMMemory_Work::ModifyTransforms_WorkData' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_1_ItemToModify__IO) == 0x000480, "Member 'URigVMMemory_Work::ModifyTransforms_1_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_1_WorkData) == 0x000490, "Member 'URigVMMemory_Work::ModifyTransforms_1_WorkData' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_1_1_ItemToModify__IO) == 0x0004A0, "Member 'URigVMMemory_Work::ModifyTransforms_1_1_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, ModifyTransforms_1_1_WorkData) == 0x0004B0, "Member 'URigVMMemory_Work::ModifyTransforms_1_1_WorkData' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, GetTransform_Transform) == 0x0004C0, "Member 'URigVMMemory_Work::GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, GetTransform_CachedIndex) == 0x000520, "Member 'URigVMMemory_Work::GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, GetTransform_1_Transform) == 0x000530, "Member 'URigVMMemory_Work::GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, GetTransform_1_CachedIndex) == 0x000590, "Member 'URigVMMemory_Work::GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_Effectors__IO) == 0x0005A0, "Member 'URigVMMemory_Work::PBIK_Effectors__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_EffectorSolverIndices) == 0x0005B0, "Member 'URigVMMemory_Work::PBIK_EffectorSolverIndices' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_BoneSettingToSolverBoneIndex) == 0x0005C0, "Member 'URigVMMemory_Work::PBIK_BoneSettingToSolverBoneIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_SolverBoneToElementIndex) == 0x0005D0, "Member 'URigVMMemory_Work::PBIK_SolverBoneToElementIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_Solver) == 0x0005E0, "Member 'URigVMMemory_Work::PBIK_Solver' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, PBIK_bNeedsInit) == 0x0005F0, "Member 'URigVMMemory_Work::PBIK_bNeedsInit' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Mannequin_BasicFootIK.RigVMMemory_Literal
// 0x0168 (0x0190 - 0x0028)
class URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FVector                                LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const; // 0x0028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorAdd_A__Const;        // 0x0040(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         FootTrace_FootTrace_GetTransform_Item__Const;      // 0x0058(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         FootTrace_FootTrace_GetTransform_Space__Const;     // 0x0064(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         FootTrace_FootTrace_GetTransform_bInitial__Const : 1; // 0x0065(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace_FootTrace_MathFloatAdd_B__Const;         // 0x0068(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         FootTrace_FootTrace_GetTransform_1_Item__Const;    // 0x006C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorAdd_B__Const;        // 0x0078(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const : 1; // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	ERigUnitVisualDebugPointMode                  FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const; // 0x0091(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const; // 0x0094(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const; // 0x00A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const; // 0x00A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Space__Const; // 0x00AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_FootTrace_MathVectorSub_B__Const;        // 0x00B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const; // 0x00D0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               FootTrace_FootTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x00D1(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace_FootTrace_SphereTraceByTraceChannel_Radius__Const; // 0x00D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const; // 0x00D8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         FootTrace_1_FootTrace_1_GetTransform_Item__Const;  // 0x00DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const; // 0x00E8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const; // 0x00E9(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_TraceChannel__Const; // 0x00EA(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_Mode__Const; // 0x00EB(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VariableNode_9_Value__Const;                       // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaInterp_Bias__Const;                           // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FInputRange                            AlphaInterp_InRange__Const;                        // 0x00FC(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         AlphaInterp_InterpSpeedIncreasing__Const;          // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_ItemToModify__Const;           // 0x0108(0x0010)(Edit, EditConst, NonTransactional)
	EControlRigModifyBoneMode                     ModifyTransforms_Mode__Const;                      // 0x0118(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_ItemToModify__Const;         // 0x0120(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_1_ItemToModify__Const;       // 0x0130(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   PBIK_Root__Const;                                  // 0x0140(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPBIKEffector>                  PBIK_Effectors__Const;                             // 0x0148(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FPBIKBoneSetting>               PBIK_BoneSettings__Const;                          // 0x0158(0x0010)(Edit, EditConst, NonTransactional)
	TArray<class FName>                           PBIK_ExcludedBones__Const;                         // 0x0168(0x0010)(Edit, EditConst, NonTransactional)
	struct FPBIKSolverSettings                    PBIK_Settings__Const;                              // 0x0178(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FPBIKDebug                             PBIK_Debug__Const;                                 // 0x0188(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Literal">();
	}
	static class URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Literal>();
	}
};
static_assert(alignof(URigVMMemory_Literal) == 0x000008, "Wrong alignment on URigVMMemory_Literal");
static_assert(sizeof(URigVMMemory_Literal) == 0x000190, "Wrong size on URigVMMemory_Literal");
static_assert(offsetof(URigVMMemory_Literal, LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const) == 0x000028, "Member 'URigVMMemory_Literal::LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_MathVectorAdd_A__Const) == 0x000040, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_MathVectorAdd_A__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_GetTransform_Item__Const) == 0x000058, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_GetTransform_Space__Const) == 0x000064, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_GetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_MathFloatAdd_B__Const) == 0x000068, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_MathFloatAdd_B__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_GetTransform_1_Item__Const) == 0x00006C, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_MathVectorAdd_B__Const) == 0x000078, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const) == 0x000091, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const) == 0x000094, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const) == 0x0000A4, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const) == 0x0000A8, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Space__Const) == 0x0000AC, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Space__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_MathVectorSub_B__Const) == 0x0000B8, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_MathVectorSub_B__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const) == 0x0000D0, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_SphereTraceByTraceChannel_TraceChannel__Const) == 0x0000D1, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_SphereTraceByTraceChannel_TraceChannel__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_SphereTraceByTraceChannel_Radius__Const) == 0x0000D4, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_SphereTraceByTraceChannel_Radius__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const) == 0x0000D8, "Member 'URigVMMemory_Literal::FootTrace_FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_1_FootTrace_1_GetTransform_Item__Const) == 0x0000DC, "Member 'URigVMMemory_Literal::FootTrace_1_FootTrace_1_GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const) == 0x0000E8, "Member 'URigVMMemory_Literal::FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const) == 0x0000E9, "Member 'URigVMMemory_Literal::FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_TraceChannel__Const) == 0x0000EA, "Member 'URigVMMemory_Literal::FootTrace_1_FootTrace_1_SphereTraceByTraceChannel_TraceChannel__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_Mode__Const) == 0x0000EB, "Member 'URigVMMemory_Literal::FootTrace_1_FootTrace_1_RigUnit_VisualDebugVectorItemSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, VariableNode_9_Value__Const) == 0x0000F0, "Member 'URigVMMemory_Literal::VariableNode_9_Value__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, AlphaInterp_Bias__Const) == 0x0000F8, "Member 'URigVMMemory_Literal::AlphaInterp_Bias__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, AlphaInterp_InRange__Const) == 0x0000FC, "Member 'URigVMMemory_Literal::AlphaInterp_InRange__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, AlphaInterp_InterpSpeedIncreasing__Const) == 0x000104, "Member 'URigVMMemory_Literal::AlphaInterp_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, ModifyTransforms_ItemToModify__Const) == 0x000108, "Member 'URigVMMemory_Literal::ModifyTransforms_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, ModifyTransforms_Mode__Const) == 0x000118, "Member 'URigVMMemory_Literal::ModifyTransforms_Mode__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, ModifyTransforms_1_ItemToModify__Const) == 0x000120, "Member 'URigVMMemory_Literal::ModifyTransforms_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, ModifyTransforms_1_1_ItemToModify__Const) == 0x000130, "Member 'URigVMMemory_Literal::ModifyTransforms_1_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_Root__Const) == 0x000140, "Member 'URigVMMemory_Literal::PBIK_Root__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_Effectors__Const) == 0x000148, "Member 'URigVMMemory_Literal::PBIK_Effectors__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_BoneSettings__Const) == 0x000158, "Member 'URigVMMemory_Literal::PBIK_BoneSettings__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_ExcludedBones__Const) == 0x000168, "Member 'URigVMMemory_Literal::PBIK_ExcludedBones__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_Settings__Const) == 0x000178, "Member 'URigVMMemory_Literal::PBIK_Settings__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, PBIK_Debug__Const) == 0x000188, "Member 'URigVMMemory_Literal::PBIK_Debug__Const' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CR_Mannequin_BasicFootIK.CR_Mannequin_BasicFootIK_C
// 0x0030 (0x04C0 - 0x0490)
class UCR_Mannequin_BasicFootIK_C final : public UControlRig
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ZOffset_L_Target;                                  // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset_R_Target;                                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset_L;                                         // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset_R;                                         // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset_Pelvis;                                    // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDoIKTrace;                                   // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Mannequin_BasicFootIK_C">();
	}
	static class UCR_Mannequin_BasicFootIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Mannequin_BasicFootIK_C>();
	}
};
static_assert(alignof(UCR_Mannequin_BasicFootIK_C) == 0x000010, "Wrong alignment on UCR_Mannequin_BasicFootIK_C");
static_assert(sizeof(UCR_Mannequin_BasicFootIK_C) == 0x0004C0, "Wrong size on UCR_Mannequin_BasicFootIK_C");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ZOffset_L_Target) == 0x000490, "Member 'UCR_Mannequin_BasicFootIK_C::ZOffset_L_Target' has a wrong offset!");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ZOffset_R_Target) == 0x000498, "Member 'UCR_Mannequin_BasicFootIK_C::ZOffset_R_Target' has a wrong offset!");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ZOffset_L) == 0x0004A0, "Member 'UCR_Mannequin_BasicFootIK_C::ZOffset_L' has a wrong offset!");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ZOffset_R) == 0x0004A8, "Member 'UCR_Mannequin_BasicFootIK_C::ZOffset_R' has a wrong offset!");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ZOffset_Pelvis) == 0x0004B0, "Member 'UCR_Mannequin_BasicFootIK_C::ZOffset_Pelvis' has a wrong offset!");
static_assert(offsetof(UCR_Mannequin_BasicFootIK_C, ShouldDoIKTrace) == 0x0004B8, "Member 'UCR_Mannequin_BasicFootIK_C::ShouldDoIKTrace' has a wrong offset!");

}

