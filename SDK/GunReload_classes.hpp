#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GunReload

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GunReload.GunReload_C
// 0x0028 (0x02B8 - 0x0290)
class UGunReload_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCircle_Bar_C*                          Circle_Bar;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Done;                                              // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time;                                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Reload_time;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_GunReload(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GunReload_C">();
	}
	static class UGunReload_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGunReload_C>();
	}
};
static_assert(alignof(UGunReload_C) == 0x000008, "Wrong alignment on UGunReload_C");
static_assert(sizeof(UGunReload_C) == 0x0002B8, "Wrong size on UGunReload_C");
static_assert(offsetof(UGunReload_C, UberGraphFrame) == 0x000290, "Member 'UGunReload_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGunReload_C, Circle_Bar) == 0x000298, "Member 'UGunReload_C::Circle_Bar' has a wrong offset!");
static_assert(offsetof(UGunReload_C, Done) == 0x0002A0, "Member 'UGunReload_C::Done' has a wrong offset!");
static_assert(offsetof(UGunReload_C, Time) == 0x0002A8, "Member 'UGunReload_C::Time' has a wrong offset!");
static_assert(offsetof(UGunReload_C, Reload_time) == 0x0002B0, "Member 'UGunReload_C::Reload_time' has a wrong offset!");

}

