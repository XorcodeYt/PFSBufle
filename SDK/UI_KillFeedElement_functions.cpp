#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_KillFeedElement

#include "Basic.hpp"

#include "UI_KillFeedElement_classes.hpp"
#include "UI_KillFeedElement_parameters.hpp"


namespace SDK
{

// Function UI_KillFeedElement.UI_KillFeedElement_C.OpenAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 AnimationLength                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_KillFeedElement_C::OpenAnimation(double* AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KillFeedElement_C", "OpenAnimation");

	Params::UI_KillFeedElement_C_OpenAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimationLength != nullptr)
		*AnimationLength = Parms.AnimationLength;
}


// Function UI_KillFeedElement.UI_KillFeedElement_C.Init
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      KillerName_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FSlateColor&               KillerNameColor                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      VictimName_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FSlateColor&               VictimNameColor                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSlateColor&               IconColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_KillFeedElement_C::Init(const class FText& KillerName_0, const struct FSlateColor& KillerNameColor, const class FText& VictimName_0, const struct FSlateColor& VictimNameColor, class UTexture2D* Icon, const struct FSlateColor& IconColor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KillFeedElement_C", "Init");

	Params::UI_KillFeedElement_C_Init Parms{};

	Parms.KillerName_0 = std::move(KillerName_0);
	Parms.KillerNameColor = std::move(KillerNameColor);
	Parms.VictimName_0 = std::move(VictimName_0);
	Parms.VictimNameColor = std::move(VictimNameColor);
	Parms.Icon = Icon;
	Parms.IconColor_0 = std::move(IconColor_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_KillFeedElement.UI_KillFeedElement_C.ExecuteUbergraph_UI_KillFeedElement
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_KillFeedElement_C::ExecuteUbergraph_UI_KillFeedElement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KillFeedElement_C", "ExecuteUbergraph_UI_KillFeedElement");

	Params::UI_KillFeedElement_C_ExecuteUbergraph_UI_KillFeedElement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_KillFeedElement.UI_KillFeedElement_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_KillFeedElement_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KillFeedElement_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_KillFeedElement.UI_KillFeedElement_C.CloseAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 AnimationLength                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_KillFeedElement_C::CloseAnimation(double* AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KillFeedElement_C", "CloseAnimation");

	Params::UI_KillFeedElement_C_CloseAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimationLength != nullptr)
		*AnimationLength = Parms.AnimationLength;
}

}

