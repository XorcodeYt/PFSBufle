#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RocketFreemanAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RocketFreemanAnimBP.RocketFreemanAnimBP_C.ExecuteUbergraph_RocketFreemanAnimBP
// 0x0130 (0x0130 - 0x0000)
struct RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARocketeerFunny_C*                      K2Node_DynamicCast_AsRocketeer_Funny;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast;           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP) == 0x000010, "Wrong alignment on RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP");
static_assert(sizeof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP) == 0x000130, "Wrong size on RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, EntryPoint) == 0x000000, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, K2Node_DynamicCast_AsRocketeer_Funny) == 0x000010, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::K2Node_DynamicCast_AsRocketeer_Funny' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Roll_1) == 0x0000F8, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Pitch_1) == 0x0000FC, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_BreakRotator_Yaw_1) == 0x000100, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, K2Node_Event_DeltaTimeX) == 0x000104, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_MakeRotator_ReturnValue_1) == 0x000108, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x000120, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP, CallFunc_MakeRotator_Roll_NarrowingCast) == 0x000128, "Member 'RocketFreemanAnimBP_C_ExecuteUbergraph_RocketFreemanAnimBP::CallFunc_MakeRotator_Roll_NarrowingCast' has a wrong offset!");

// Function RocketFreemanAnimBP.RocketFreemanAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct RocketFreemanAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketFreemanAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on RocketFreemanAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(RocketFreemanAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on RocketFreemanAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(RocketFreemanAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'RocketFreemanAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function RocketFreemanAnimBP.RocketFreemanAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct RocketFreemanAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(RocketFreemanAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on RocketFreemanAnimBP_C_AnimGraph");
static_assert(sizeof(RocketFreemanAnimBP_C_AnimGraph) == 0x000010, "Wrong size on RocketFreemanAnimBP_C_AnimGraph");
static_assert(offsetof(RocketFreemanAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'RocketFreemanAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

