#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChangingMapWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ChangingMapWidget.ChangingMapWidget_C.GetText_2
// 0x0020 (0x0020 - 0x0000)
struct ChangingMapWidget_C_GetText_2 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChangingMapWidget_C_GetText_2) == 0x000008, "Wrong alignment on ChangingMapWidget_C_GetText_2");
static_assert(sizeof(ChangingMapWidget_C_GetText_2) == 0x000020, "Wrong size on ChangingMapWidget_C_GetText_2");
static_assert(offsetof(ChangingMapWidget_C_GetText_2, ReturnValue) == 0x000000, "Member 'ChangingMapWidget_C_GetText_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetText_2, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'ChangingMapWidget_C_GetText_2::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function ChangingMapWidget.ChangingMapWidget_C.GetText_1
// 0x0040 (0x0040 - 0x0000)
struct ChangingMapWidget_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(ChangingMapWidget_C_GetText_1) == 0x000008, "Wrong alignment on ChangingMapWidget_C_GetText_1");
static_assert(sizeof(ChangingMapWidget_C_GetText_1) == 0x000040, "Wrong size on ChangingMapWidget_C_GetText_1");
static_assert(offsetof(ChangingMapWidget_C_GetText_1, ReturnValue) == 0x000000, "Member 'ChangingMapWidget_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetText_1, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'ChangingMapWidget_C_GetText_1::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetText_1, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'ChangingMapWidget_C_GetText_1::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ChangingMapWidget.ChangingMapWidget_C.GetText_0
// 0x0030 (0x0030 - 0x0000)
struct ChangingMapWidget_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(ChangingMapWidget_C_GetText_0) == 0x000008, "Wrong alignment on ChangingMapWidget_C_GetText_0");
static_assert(sizeof(ChangingMapWidget_C_GetText_0) == 0x000030, "Wrong size on ChangingMapWidget_C_GetText_0");
static_assert(offsetof(ChangingMapWidget_C_GetText_0, ReturnValue) == 0x000000, "Member 'ChangingMapWidget_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetText_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'ChangingMapWidget_C_GetText_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function ChangingMapWidget.ChangingMapWidget_C.GetBrush_0
// 0x0280 (0x0280 - 0x0000)
struct ChangingMapWidget_C_GetBrush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D0(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x01A0(0x00D0)()
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChangingMapWidget_C_GetBrush_0) == 0x000010, "Wrong alignment on ChangingMapWidget_C_GetBrush_0");
static_assert(sizeof(ChangingMapWidget_C_GetBrush_0) == 0x000280, "Wrong size on ChangingMapWidget_C_GetBrush_0");
static_assert(offsetof(ChangingMapWidget_C_GetBrush_0, ReturnValue) == 0x000000, "Member 'ChangingMapWidget_C_GetBrush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetBrush_0, K2Node_MakeStruct_SlateBrush) == 0x0000D0, "Member 'ChangingMapWidget_C_GetBrush_0::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetBrush_0, K2Node_MakeStruct_SlateBrush_1) == 0x0001A0, "Member 'ChangingMapWidget_C_GetBrush_0::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_GetBrush_0, K2Node_SwitchString_CmpSuccess) == 0x000270, "Member 'ChangingMapWidget_C_GetBrush_0::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function ChangingMapWidget.ChangingMapWidget_C.ExecuteUbergraph_ChangingMapWidget
// 0x001C (0x001C - 0x0000)
struct ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget) == 0x000004, "Wrong alignment on ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget");
static_assert(sizeof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget) == 0x00001C, "Wrong size on ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, EntryPoint) == 0x000000, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, Temp_int_Variable) == 0x000008, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, Temp_int_Variable_1) == 0x000014, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'ChangingMapWidget_C_ExecuteUbergraph_ChangingMapWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

}

