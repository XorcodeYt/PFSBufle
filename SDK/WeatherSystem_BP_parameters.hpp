#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeatherSystem_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WeatherSystem_BP.WeatherSystem_BP_C.ExecuteUbergraph_WeatherSystem_BP
// 0x0280 (0x0280 - 0x0000)
struct WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_WideningCast; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP) == 0x000008, "Wrong alignment on WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP");
static_assert(sizeof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP) == 0x000280, "Wrong size on WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, EntryPoint) == 0x000000, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, Temp_object_Variable) == 0x000050, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000060, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000090, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_LineTraceSingle_ReturnValue) == 0x000190, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_bBlockingHit) == 0x000191, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_bInitialOverlap) == 0x000192, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_Location) == 0x0001A0, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B8, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_Normal) == 0x0001D0, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_PhysMat) == 0x000200, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_HitActor) == 0x000208, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_HitComponent) == 0x000210, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_HitBoneName) == 0x000218, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_BoneName) == 0x000220, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_BreakHitResult_TraceEnd) == 0x000250, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000268, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP, CallFunc_Conv_DoubleToString_InDouble_WideningCast) == 0x000278, "Member 'WeatherSystem_BP_C_ExecuteUbergraph_WeatherSystem_BP::CallFunc_Conv_DoubleToString_InDouble_WideningCast' has a wrong offset!");

}

