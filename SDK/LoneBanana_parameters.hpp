#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoneBanana

#include "Basic.hpp"


namespace SDK::Params
{

// Function LoneBanana.LoneBanana_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LoneBanana_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoneBanana_C_ReceiveTick) == 0x000004, "Wrong alignment on LoneBanana_C_ReceiveTick");
static_assert(sizeof(LoneBanana_C_ReceiveTick) == 0x000004, "Wrong size on LoneBanana_C_ReceiveTick");
static_assert(offsetof(LoneBanana_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LoneBanana_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LoneBanana.LoneBanana_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct LoneBanana_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoneBanana_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on LoneBanana_C_ReceiveActorBeginOverlap");
static_assert(sizeof(LoneBanana_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on LoneBanana_C_ReceiveActorBeginOverlap");
static_assert(offsetof(LoneBanana_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'LoneBanana_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function LoneBanana.LoneBanana_C.ExecuteUbergraph_LoneBanana
// 0x0038 (0x0038 - 0x0000)
struct LoneBanana_C_ExecuteUbergraph_LoneBanana final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoneBanana_C_ExecuteUbergraph_LoneBanana) == 0x000008, "Wrong alignment on LoneBanana_C_ExecuteUbergraph_LoneBanana");
static_assert(sizeof(LoneBanana_C_ExecuteUbergraph_LoneBanana) == 0x000038, "Wrong size on LoneBanana_C_ExecuteUbergraph_LoneBanana");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, EntryPoint) == 0x000000, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::EntryPoint' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_Event_OtherActor) == 0x000008, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000018, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_DynamicCast_AsTrain_Gus_Player_1) == 0x000028, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_DynamicCast_AsTrain_Gus_Player_1' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoneBanana_C_ExecuteUbergraph_LoneBanana, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'LoneBanana_C_ExecuteUbergraph_LoneBanana::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

