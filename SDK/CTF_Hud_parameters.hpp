#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CTF_Hud

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CTF_Hud.CTF_Hud_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct CTF_Hud_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTF_Hud_C_Tick) == 0x000008, "Wrong alignment on CTF_Hud_C_Tick");
static_assert(sizeof(CTF_Hud_C_Tick) == 0x000048, "Wrong size on CTF_Hud_C_Tick");
static_assert(offsetof(CTF_Hud_C_Tick, MyGeometry) == 0x000000, "Member 'CTF_Hud_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Tick, InDeltaTime) == 0x000040, "Member 'CTF_Hud_C_Tick::InDeltaTime' has a wrong offset!");

// Function CTF_Hud.CTF_Hud_C.GetText_0
// 0x0060 (0x0060 - 0x0000)
struct CTF_Hud_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(CTF_Hud_C_GetText_0) == 0x000008, "Wrong alignment on CTF_Hud_C_GetText_0");
static_assert(sizeof(CTF_Hud_C_GetText_0) == 0x000060, "Wrong size on CTF_Hud_C_GetText_0");
static_assert(offsetof(CTF_Hud_C_GetText_0, ReturnValue) == 0x000000, "Member 'CTF_Hud_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_GetText_0, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'CTF_Hud_C_GetText_0::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_GetText_0, CallFunc_GetDisplayName_ReturnValue_1) == 0x000028, "Member 'CTF_Hud_C_GetText_0::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_GetText_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'CTF_Hud_C_GetText_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_GetText_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'CTF_Hud_C_GetText_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function CTF_Hud.CTF_Hud_C.Get Red Score
// 0x0048 (0x0048 - 0x0000)
struct CTF_Hud_C_Get_Red_Score final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(CTF_Hud_C_Get_Red_Score) == 0x000008, "Wrong alignment on CTF_Hud_C_Get_Red_Score");
static_assert(sizeof(CTF_Hud_C_Get_Red_Score) == 0x000048, "Wrong size on CTF_Hud_C_Get_Red_Score");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, ReturnValue) == 0x000000, "Member 'CTF_Hud_C_Get_Red_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'CTF_Hud_C_Get_Red_Score::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000020, "Member 'CTF_Hud_C_Get_Red_Score::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CTF_Hud_C_Get_Red_Score::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'CTF_Hud_C_Get_Red_Score::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Red_Score, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'CTF_Hud_C_Get_Red_Score::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function CTF_Hud.CTF_Hud_C.Get Blue Score
// 0x0048 (0x0048 - 0x0000)
struct CTF_Hud_C_Get_Blue_Score final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBP_C*                         K2Node_DynamicCast_AsGame_State_BP;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(CTF_Hud_C_Get_Blue_Score) == 0x000008, "Wrong alignment on CTF_Hud_C_Get_Blue_Score");
static_assert(sizeof(CTF_Hud_C_Get_Blue_Score) == 0x000048, "Wrong size on CTF_Hud_C_Get_Blue_Score");
static_assert(offsetof(CTF_Hud_C_Get_Blue_Score, ReturnValue) == 0x000000, "Member 'CTF_Hud_C_Get_Blue_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Blue_Score, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'CTF_Hud_C_Get_Blue_Score::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Blue_Score, K2Node_DynamicCast_AsGame_State_BP) == 0x000020, "Member 'CTF_Hud_C_Get_Blue_Score::K2Node_DynamicCast_AsGame_State_BP' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Blue_Score, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CTF_Hud_C_Get_Blue_Score::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_Get_Blue_Score, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'CTF_Hud_C_Get_Blue_Score::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function CTF_Hud.CTF_Hud_C.ExecuteUbergraph_CTF_Hud
// 0x00B0 (0x00B0 - 0x0000)
struct CTF_Hud_C_ExecuteUbergraph_CTF_Hud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Red_score_Widget;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARed_Base_C*>                    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0080(0x0010)(ReferenceParm)
	class ARed_Base_C*                            CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABlue_Base_C*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0098(0x0010)(ReferenceParm)
	class ABlue_Base_C*                           CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud) == 0x000008, "Wrong alignment on CTF_Hud_C_ExecuteUbergraph_CTF_Hud");
static_assert(sizeof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud) == 0x0000B0, "Wrong size on CTF_Hud_C_ExecuteUbergraph_CTF_Hud");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, EntryPoint) == 0x000000, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::EntryPoint' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_Event_MyGeometry) == 0x000008, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_Event_InDeltaTime) == 0x000048, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_GetGameMode_ReturnValue) == 0x000050, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode) == 0x000058, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_GetGameMode_ReturnValue_1) == 0x000068, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1) == 0x000070, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, K2Node_CustomEvent_Red_score_Widget) == 0x00007C, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::K2Node_CustomEvent_Red_score_Widget' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_GetAllActorsOfClass_OutActors) == 0x000080, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_Array_Get_Item) == 0x000090, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000098, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(CTF_Hud_C_ExecuteUbergraph_CTF_Hud, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'CTF_Hud_C_ExecuteUbergraph_CTF_Hud::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function CTF_Hud.CTF_Hud_C.Add the score red
// 0x0004 (0x0004 - 0x0000)
struct CTF_Hud_C_Add_the_score_red final
{
public:
	int32                                         Red_score_Widget_0;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTF_Hud_C_Add_the_score_red) == 0x000004, "Wrong alignment on CTF_Hud_C_Add_the_score_red");
static_assert(sizeof(CTF_Hud_C_Add_the_score_red) == 0x000004, "Wrong size on CTF_Hud_C_Add_the_score_red");
static_assert(offsetof(CTF_Hud_C_Add_the_score_red, Red_score_Widget_0) == 0x000000, "Member 'CTF_Hud_C_Add_the_score_red::Red_score_Widget_0' has a wrong offset!");

}

