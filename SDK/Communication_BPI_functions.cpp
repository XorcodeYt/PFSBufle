#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Communication_BPI

#include "Basic.hpp"

#include "Communication_BPI_classes.hpp"
#include "Communication_BPI_parameters.hpp"


namespace SDK
{

// Function Communication_BPI.Communication_BPI_C.On_Vanished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class ACharacter*                       Real                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ICommunication_BPI_C::On_Vanished(const struct FTransform& Transform, class ACharacter* Real)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Communication_BPI_C", "On_Vanished");

	Params::Communication_BPI_C_On_Vanished Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Real = Real;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Communication_BPI.Communication_BPI_C.On_Bannana
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class APlayerController*                NewParam1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ICommunication_BPI_C::On_Bannana(const struct FRotator& NewParam, class APlayerController* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Communication_BPI_C", "On_Bannana");

	Params::Communication_BPI_C_On_Bannana Parms{};

	Parms.NewParam = std::move(NewParam);
	Parms.NewParam1 = NewParam1;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

