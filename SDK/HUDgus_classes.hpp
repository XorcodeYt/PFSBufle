#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDgus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUDgus.HUDgus_C
// 0x00B8 (0x0348 - 0x0290)
class UHUDgus_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Bannana_Enbiggen;                                  // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 bannana;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlunderBomb;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HealthBar;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKillConfirmContainer_C*                KillConfirmContainer;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LoadCannonballText;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      Charref;                                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              HitmarkerDis;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Bronana;                                           // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Play_The_Bannana;                                  // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Hide_the_crosshair;                                // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Gigasaurus;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hud_;                                              // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           Player;                                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void Play_Bannana();
	class FText Kills();
	ESlateVisibility Hud_Visibility();
	void Hide_it();
	float HealthBar_Percentage();
	ESlateVisibility GetVisibility_2();
	ESlateVisibility GetVisibility_1();
	ESlateVisibility GetVisibility_0();
	class FText GetText_1();
	void GetText_0();
	void Get_kills(class FText* Result);
	void ExecuteUbergraph_HUDgus(int32 EntryPoint);
	void Construct();
	class FText Blunderbomb_Getter();
	class FText Bananna();
	void Add_Kill_to_box_HUD(const class FText& Killed_player, int32 Team, class APlayerState* Victim_Player_State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUDgus_C">();
	}
	static class UHUDgus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDgus_C>();
	}
};
static_assert(alignof(UHUDgus_C) == 0x000008, "Wrong alignment on UHUDgus_C");
static_assert(sizeof(UHUDgus_C) == 0x000348, "Wrong size on UHUDgus_C");
static_assert(offsetof(UHUDgus_C, UberGraphFrame) == 0x000290, "Member 'UHUDgus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Bannana_Enbiggen) == 0x000298, "Member 'UHUDgus_C::Bannana_Enbiggen' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, bannana) == 0x0002A0, "Member 'UHUDgus_C::bannana' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, BlunderBomb) == 0x0002A8, "Member 'UHUDgus_C::BlunderBomb' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, HealthBar) == 0x0002B0, "Member 'UHUDgus_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Image_0) == 0x0002B8, "Member 'UHUDgus_C::Image_0' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Image_1) == 0x0002C0, "Member 'UHUDgus_C::Image_1' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Image_2) == 0x0002C8, "Member 'UHUDgus_C::Image_2' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, KillConfirmContainer) == 0x0002D0, "Member 'UHUDgus_C::KillConfirmContainer' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, LoadCannonballText) == 0x0002D8, "Member 'UHUDgus_C::LoadCannonballText' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, TextBlock) == 0x0002E0, "Member 'UHUDgus_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, TextBlock_0) == 0x0002E8, "Member 'UHUDgus_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, TextBlock_1) == 0x0002F0, "Member 'UHUDgus_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Charref) == 0x0002F8, "Member 'UHUDgus_C::Charref' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, HitmarkerDis) == 0x000300, "Member 'UHUDgus_C::HitmarkerDis' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Bronana) == 0x000310, "Member 'UHUDgus_C::Bronana' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Play_The_Bannana) == 0x000318, "Member 'UHUDgus_C::Play_The_Bannana' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Hide_the_crosshair) == 0x000328, "Member 'UHUDgus_C::Hide_the_crosshair' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Gigasaurus) == 0x000338, "Member 'UHUDgus_C::Gigasaurus' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Hud_) == 0x000339, "Member 'UHUDgus_C::Hud_' has a wrong offset!");
static_assert(offsetof(UHUDgus_C, Player) == 0x000340, "Member 'UHUDgus_C::Player' has a wrong offset!");

}

