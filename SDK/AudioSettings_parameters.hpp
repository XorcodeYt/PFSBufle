#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AudioSettings.AudioSettings_C.Update Widget
// 0x0010 (0x0010 - 0x0000)
struct AudioSettings_C_Update_Widget final
{
public:
	double                                        Audio_Master;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Update_Widget) == 0x000008, "Wrong alignment on AudioSettings_C_Update_Widget");
static_assert(sizeof(AudioSettings_C_Update_Widget) == 0x000010, "Wrong size on AudioSettings_C_Update_Widget");
static_assert(offsetof(AudioSettings_C_Update_Widget, Audio_Master) == 0x000000, "Member 'AudioSettings_C_Update_Widget::Audio_Master' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Update_Widget, CallFunc_SetValue_InValue_NarrowingCast) == 0x000008, "Member 'AudioSettings_C_Update_Widget::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Update Music Slider
// 0x0010 (0x0010 - 0x0000)
struct AudioSettings_C_Update_Music_Slider final
{
public:
	double                                        Audio_Master;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Music_Audio_Var_NarrowingCast;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Update_Music_Slider) == 0x000008, "Wrong alignment on AudioSettings_C_Update_Music_Slider");
static_assert(sizeof(AudioSettings_C_Update_Music_Slider) == 0x000010, "Wrong size on AudioSettings_C_Update_Music_Slider");
static_assert(offsetof(AudioSettings_C_Update_Music_Slider, Audio_Master) == 0x000000, "Member 'AudioSettings_C_Update_Music_Slider::Audio_Master' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Update_Music_Slider, CallFunc_SetValue_InValue_NarrowingCast) == 0x000008, "Member 'AudioSettings_C_Update_Music_Slider::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Update_Music_Slider, K2Node_VariableSet_Music_Audio_Var_NarrowingCast) == 0x00000C, "Member 'AudioSettings_C_Update_Music_Slider::K2Node_VariableSet_Music_Audio_Var_NarrowingCast' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Update Enviromnt slider
// 0x0010 (0x0010 - 0x0000)
struct AudioSettings_C_Update_Enviromnt_slider final
{
public:
	double                                        Audio_Master;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Update_Enviromnt_slider) == 0x000008, "Wrong alignment on AudioSettings_C_Update_Enviromnt_slider");
static_assert(sizeof(AudioSettings_C_Update_Enviromnt_slider) == 0x000010, "Wrong size on AudioSettings_C_Update_Enviromnt_slider");
static_assert(offsetof(AudioSettings_C_Update_Enviromnt_slider, Audio_Master) == 0x000000, "Member 'AudioSettings_C_Update_Enviromnt_slider::Audio_Master' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Update_Enviromnt_slider, CallFunc_SetValue_InValue_NarrowingCast) == 0x000008, "Member 'AudioSettings_C_Update_Enviromnt_slider::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.SensSliderPlacement
// 0x0008 (0x0008 - 0x0000)
struct AudioSettings_C_SensSliderPlacement final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_NarrowingCast;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_SensSliderPlacement) == 0x000004, "Wrong alignment on AudioSettings_C_SensSliderPlacement");
static_assert(sizeof(AudioSettings_C_SensSliderPlacement) == 0x000008, "Wrong size on AudioSettings_C_SensSliderPlacement");
static_assert(offsetof(AudioSettings_C_SensSliderPlacement, ReturnValue) == 0x000000, "Member 'AudioSettings_C_SensSliderPlacement::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_SensSliderPlacement, K2Node_FunctionResult_ReturnValue_NarrowingCast) == 0x000004, "Member 'AudioSettings_C_SensSliderPlacement::K2Node_FunctionResult_ReturnValue_NarrowingCast' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Save game
// 0x0038 (0x0038 - 0x0000)
struct AudioSettings_C_Save_game final
{
public:
	double                                        Master_Audio_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnviromentAudio;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Music_Audio;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         K2Node_DynamicCast_AsSave_Options;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveOptions_C*                         CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Save_game) == 0x000008, "Wrong alignment on AudioSettings_C_Save_game");
static_assert(sizeof(AudioSettings_C_Save_game) == 0x000038, "Wrong size on AudioSettings_C_Save_game");
static_assert(offsetof(AudioSettings_C_Save_game, Master_Audio_0) == 0x000000, "Member 'AudioSettings_C_Save_game::Master_Audio_0' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, EnviromentAudio) == 0x000008, "Member 'AudioSettings_C_Save_game::EnviromentAudio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, Music_Audio) == 0x000010, "Member 'AudioSettings_C_Save_game::Music_Audio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, K2Node_DynamicCast_AsSave_Options) == 0x000018, "Member 'AudioSettings_C_Save_game::K2Node_DynamicCast_AsSave_Options' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AudioSettings_C_Save_game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000028, "Member 'AudioSettings_C_Save_game::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Save_game, CallFunc_SaveGameToSlot_ReturnValue) == 0x000030, "Member 'AudioSettings_C_Save_game::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Load game
// 0x0038 (0x0038 - 0x0000)
struct AudioSettings_C_Load_game final
{
public:
	double                                        Master_Audio_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnviromentAudio;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MusicAudio;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         K2Node_DynamicCast_AsSave_Options;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Load_game) == 0x000008, "Wrong alignment on AudioSettings_C_Load_game");
static_assert(sizeof(AudioSettings_C_Load_game) == 0x000038, "Wrong size on AudioSettings_C_Load_game");
static_assert(offsetof(AudioSettings_C_Load_game, Master_Audio_0) == 0x000000, "Member 'AudioSettings_C_Load_game::Master_Audio_0' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, EnviromentAudio) == 0x000008, "Member 'AudioSettings_C_Load_game::EnviromentAudio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, MusicAudio) == 0x000010, "Member 'AudioSettings_C_Load_game::MusicAudio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, K2Node_DynamicCast_AsSave_Options) == 0x000018, "Member 'AudioSettings_C_Load_game::K2Node_DynamicCast_AsSave_Options' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AudioSettings_C_Load_game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'AudioSettings_C_Load_game::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Load_game, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000030, "Member 'AudioSettings_C_Load_game::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.GetText_2
// 0x0090 (0x0090 - 0x0000)
struct AudioSettings_C_GetText_2 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(AudioSettings_C_GetText_2) == 0x000008, "Wrong alignment on AudioSettings_C_GetText_2");
static_assert(sizeof(AudioSettings_C_GetText_2) == 0x000090, "Wrong size on AudioSettings_C_GetText_2");
static_assert(offsetof(AudioSettings_C_GetText_2, ReturnValue) == 0x000000, "Member 'AudioSettings_C_GetText_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_2, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AudioSettings_C_GetText_2::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_2, K2Node_MakeArray_Array) == 0x000068, "Member 'AudioSettings_C_GetText_2::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_2, CallFunc_Format_ReturnValue) == 0x000078, "Member 'AudioSettings_C_GetText_2::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.GetText_1
// 0x0090 (0x0090 - 0x0000)
struct AudioSettings_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(AudioSettings_C_GetText_1) == 0x000008, "Wrong alignment on AudioSettings_C_GetText_1");
static_assert(sizeof(AudioSettings_C_GetText_1) == 0x000090, "Wrong size on AudioSettings_C_GetText_1");
static_assert(offsetof(AudioSettings_C_GetText_1, ReturnValue) == 0x000000, "Member 'AudioSettings_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_1, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AudioSettings_C_GetText_1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_1, K2Node_MakeArray_Array) == 0x000068, "Member 'AudioSettings_C_GetText_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_1, CallFunc_Format_ReturnValue) == 0x000078, "Member 'AudioSettings_C_GetText_1::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.GetText_0
// 0x00A0 (0x00A0 - 0x0000)
struct AudioSettings_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(AudioSettings_C_GetText_0) == 0x000008, "Wrong alignment on AudioSettings_C_GetText_0");
static_assert(sizeof(AudioSettings_C_GetText_0) == 0x0000A0, "Wrong size on AudioSettings_C_GetText_0");
static_assert(offsetof(AudioSettings_C_GetText_0, ReturnValue) == 0x000000, "Member 'AudioSettings_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'AudioSettings_C_GetText_0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_0, CallFunc_Round64_ReturnValue) == 0x000020, "Member 'AudioSettings_C_GetText_0::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AudioSettings_C_GetText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_0, K2Node_MakeArray_Array) == 0x000078, "Member 'AudioSettings_C_GetText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_GetText_0, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AudioSettings_C_GetText_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Get_TextBlock_1_Text_0
// 0x00A8 (0x00A8 - 0x0000)
struct AudioSettings_C_Get_TextBlock_1_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Get_TextBlock_1_Text_0) == 0x000008, "Wrong alignment on AudioSettings_C_Get_TextBlock_1_Text_0");
static_assert(sizeof(AudioSettings_C_Get_TextBlock_1_Text_0) == 0x0000A8, "Wrong size on AudioSettings_C_Get_TextBlock_1_Text_0");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, ReturnValue) == 0x000000, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, CallFunc_Round64_ReturnValue) == 0x000020, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, K2Node_MakeArray_Array) == 0x000078, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Get_TextBlock_1_Text_0, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0000A0, "Member 'AudioSettings_C_Get_TextBlock_1_Text_0::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Get_SniperSensSlider_Value_0
// 0x0004 (0x0004 - 0x0000)
struct AudioSettings_C_Get_SniperSensSlider_Value_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_Get_SniperSensSlider_Value_0) == 0x000004, "Wrong alignment on AudioSettings_C_Get_SniperSensSlider_Value_0");
static_assert(sizeof(AudioSettings_C_Get_SniperSensSlider_Value_0) == 0x000004, "Wrong size on AudioSettings_C_Get_SniperSensSlider_Value_0");
static_assert(offsetof(AudioSettings_C_Get_SniperSensSlider_Value_0, ReturnValue) == 0x000000, "Member 'AudioSettings_C_Get_SniperSensSlider_Value_0::ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.ExecuteUbergraph_AudioSettings
// 0x0068 (0x0068 - 0x0000)
struct AudioSettings_C_ExecuteUbergraph_AudioSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Load_game_Master_Audio;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_EnviromentAudio;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_MusicAudio;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Master_Audio_WideningCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_EnviromentAudioVar_WideningCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast_1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Save_game_Music_Audio_WideningCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Save_game_Music_Audio_WideningCast_1;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Save_game_Music_Audio_WideningCast_2;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_ExecuteUbergraph_AudioSettings) == 0x000008, "Wrong alignment on AudioSettings_C_ExecuteUbergraph_AudioSettings");
static_assert(sizeof(AudioSettings_C_ExecuteUbergraph_AudioSettings) == 0x000068, "Wrong size on AudioSettings_C_ExecuteUbergraph_AudioSettings");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, EntryPoint) == 0x000000, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Load_game_Master_Audio) == 0x000008, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Load_game_Master_Audio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Load_game_EnviromentAudio) == 0x000010, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Load_game_EnviromentAudio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Load_game_MusicAudio) == 0x000018, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Load_game_MusicAudio' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, K2Node_ComponentBoundEvent_Value_2) == 0x000020, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, K2Node_ComponentBoundEvent_Value_1) == 0x000024, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, K2Node_ComponentBoundEvent_Value) == 0x000028, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast) == 0x00002C, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast_1) == 0x000030, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_SetSoundMixClassOverride_Volume_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_SetValue_InValue_NarrowingCast) == 0x000034, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, K2Node_VariableSet_Master_Audio_WideningCast) == 0x000038, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::K2Node_VariableSet_Master_Audio_WideningCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, K2Node_VariableSet_EnviromentAudioVar_WideningCast) == 0x000040, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::K2Node_VariableSet_EnviromentAudioVar_WideningCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_SetValue_InValue_NarrowingCast_1) == 0x000048, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_SetValue_InValue_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Save_game_Music_Audio_WideningCast) == 0x000050, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Save_game_Music_Audio_WideningCast' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Save_game_Music_Audio_WideningCast_1) == 0x000058, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Save_game_Music_Audio_WideningCast_1' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_ExecuteUbergraph_AudioSettings, CallFunc_Save_game_Music_Audio_WideningCast_2) == 0x000060, "Member 'AudioSettings_C_ExecuteUbergraph_AudioSettings::CallFunc_Save_game_Music_Audio_WideningCast_2' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.Enviroment Audio
// 0x00A0 (0x00A0 - 0x0000)
struct AudioSettings_C_Enviroment_Audio final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(AudioSettings_C_Enviroment_Audio) == 0x000008, "Wrong alignment on AudioSettings_C_Enviroment_Audio");
static_assert(sizeof(AudioSettings_C_Enviroment_Audio) == 0x0000A0, "Wrong size on AudioSettings_C_Enviroment_Audio");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, ReturnValue) == 0x000000, "Member 'AudioSettings_C_Enviroment_Audio::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'AudioSettings_C_Enviroment_Audio::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, CallFunc_Round64_ReturnValue) == 0x000020, "Member 'AudioSettings_C_Enviroment_Audio::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AudioSettings_C_Enviroment_Audio::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, K2Node_MakeArray_Array) == 0x000078, "Member 'AudioSettings_C_Enviroment_Audio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioSettings_C_Enviroment_Audio, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AudioSettings_C_Enviroment_Audio::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'AudioSettings_C_BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'AudioSettings_C_BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function AudioSettings.AudioSettings_C.BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'AudioSettings_C_BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

}

