#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerControllerBP

#include "Basic.hpp"

#include "PlayerControllerBP_classes.hpp"
#include "PlayerControllerBP_parameters.hpp"


namespace SDK
{

// Function PlayerControllerBP.PlayerControllerBP_C.Win Widget Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Winning_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Win_Widget_Server(class FName Winning_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Win Widget Server");

	Params::PlayerControllerBP_C_Win_Widget_Server Parms{};

	Parms.Winning_Player = Winning_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Win Widget Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Winning_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Win_Widget_Client(class FName Winning_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Win Widget Client");

	Params::PlayerControllerBP_C_Win_Widget_Client Parms{};

	Parms.Winning_Player = Winning_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.who hostin server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Host_Name_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerBP_C::who_hostin_server(const class FString& Host_Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "who hostin server");

	Params::PlayerControllerBP_C_who_hostin_server Parms{};

	Parms.Host_Name_0 = std::move(Host_Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.who hostin
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Host_Name_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerBP_C::who_hostin(const class FString& Host_Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "who hostin");

	Params::PlayerControllerBP_C_who_hostin Parms{};

	Parms.Host_Name_0 = std::move(Host_Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Weather System
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Weather_System()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Weather System");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Updating Items
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Updating_Items()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Updating Items");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update TDM Scoreboard Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_TDM_Scoreboard_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update TDM Scoreboard Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update TDM Scoreboard Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_TDM_Scoreboard_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update TDM Scoreboard Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update Player Count Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_Player_Count_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update Player Count Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update Player Count Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_Player_Count_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update Player Count Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update KoTC Sever
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Update_KoTC_Sever(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update KoTC Sever");

	Params::PlayerControllerBP_C_Update_KoTC_Sever Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update KoTC Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Update_KoTC_Client(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update KoTC Client");

	Params::PlayerControllerBP_C_Update_KoTC_Client Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update Kickfart Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Initiator                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerBP_C::Update_Kickfart_Server(const class FString& Name_0, bool Kick_, const class FText& Text, const class FText& Initiator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update Kickfart Server");

	Params::PlayerControllerBP_C_Update_Kickfart_Server Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.Initiator = std::move(Initiator);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update FFA Scoreboard Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_FFA_Scoreboard_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update FFA Scoreboard Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Update FFA Scoreboard Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Update_FFA_Scoreboard_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Update FFA Scoreboard Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.The Spire Start Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::The_Spire_Start_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "The Spire Start Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.The Spire Start Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::The_Spire_Start_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "The Spire Start Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Tell Player State what i am
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Tell_Player_State_what_i_am(class APawn* Pawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Tell Player State what i am");

	Params::PlayerControllerBP_C_Tell_Player_State_what_i_am Parms{};

	Parms.Pawn_0 = Pawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Tell game to give a team
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Tell_game_to_give_a_team(class APlayerController* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Tell game to give a team");

	Params::PlayerControllerBP_C_Tell_game_to_give_a_team Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Start doing
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Start_doing(class APawn* Pawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Start doing");

	Params::PlayerControllerBP_C_Start_doing Parms{};

	Parms.Pawn_0 = Pawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Sound Bo Bound Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sound_Number                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Sound_Bo_Bound_Client(int32 Sound_Number, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Sound Bo Bound Client");

	Params::PlayerControllerBP_C_Sound_Bo_Bound_Client Parms{};

	Parms.Sound_Number = Sound_Number;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Sound Bo Bound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sound_Number                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Sound_Bo_Bound(int32 Sound_Number, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Sound Bo Bound");

	Params::PlayerControllerBP_C_Sound_Bo_Bound Parms{};

	Parms.Sound_Number = Sound_Number;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Set Player Controller for Gus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Set_Player_Controller_for_Gus(class APawn* Pawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Set Player Controller for Gus");

	Params::PlayerControllerBP_C_Set_Player_Controller_for_Gus Parms{};

	Parms.Pawn_0 = Pawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Set Gamemode Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             GameMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Set_Gamemode_Client(class FName GameMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Set Gamemode Client");

	Params::PlayerControllerBP_C_Set_Gamemode_Client Parms{};

	Parms.GameMode_0 = GameMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Server hitmarker
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Display_Damage_Number__0                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Server_hitmarker(class APlayerController* OwningPlayer, const struct FVector& Spawn_Transform_Location, double Damage, bool Display_Damage_Number__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Server hitmarker");

	Params::PlayerControllerBP_C_Server_hitmarker Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Damage = Damage;
	Parms.Display_Damage_Number__0 = Display_Damage_Number__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Return vote info server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Counter_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ongoing_vote__0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Return_vote_info_server(int32 Counter_0, bool Ongoing_vote__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Return vote info server");

	Params::PlayerControllerBP_C_Return_vote_info_server Parms{};

	Parms.Counter_0 = Counter_0;
	Parms.Ongoing_vote__0 = Ongoing_vote__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Return vote info
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Counter_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ongoing_vote__0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Return_vote_info(int32 Counter_0, bool Ongoing_vote__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Return vote info");

	Params::PlayerControllerBP_C_Return_vote_info Parms{};

	Parms.Counter_0 = Counter_0;
	Parms.Ongoing_vote__0 = Ongoing_vote__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Reset Gamemode Widget Do once
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Reset_Gamemode_Widget_Do_once()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Reset Gamemode Widget Do once");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Remove Weather
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Remove_Weather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Remove Weather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Remove Menu
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Remove_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Remove Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "ReceivePossess");

	Params::PlayerControllerBP_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerControllerBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Posses dead spectate
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Posses_dead_spectate(class AController* Target, class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Posses dead spectate");

	Params::PlayerControllerBP_C_Posses_dead_spectate Parms{};

	Parms.Target = Target;
	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Outgoing Message
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Outgoing_Message(const class FText& Message, class APlayerState* Player_State, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Outgoing Message");

	Params::PlayerControllerBP_C_Outgoing_Message Parms{};

	Parms.Message = std::move(Message);
	Parms.Player_State = Player_State;
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Open Team Switcher
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Open_Team_Switcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Open Team Switcher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Open Game Menu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_Cosmetics_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Open_Weapons_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Open_Game_Menu(bool Open_Cosmetics_0, bool Open_Weapons_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Open Game Menu");

	Params::PlayerControllerBP_C_Open_Game_Menu Parms{};

	Parms.Open_Cosmetics_0 = Open_Cosmetics_0;
	Parms.Open_Weapons_0 = Open_Weapons_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.On_Vanished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class ACharacter*                       Real                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::On_Vanished(const struct FTransform& Transform, class ACharacter* Real)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "On_Vanished");

	Params::PlayerControllerBP_C_On_Vanished Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Real = Real;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.On_Bannana
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class APlayerController*                NewParam1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::On_Bannana(const struct FRotator& NewParam, class APlayerController* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "On_Bannana");

	Params::PlayerControllerBP_C_On_Bannana Parms{};

	Parms.NewParam = std::move(NewParam);
	Parms.NewParam1 = NewParam1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Loss Widget Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Winning_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Loss_Widget_Server(class FName Winning_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Loss Widget Server");

	Params::PlayerControllerBP_C_Loss_Widget_Server Parms{};

	Parms.Winning_Player = Winning_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Loss Widget Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Winning_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Loss_Widget_Client(class FName Winning_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Loss Widget Client");

	Params::PlayerControllerBP_C_Loss_Widget_Client Parms{};

	Parms.Winning_Player = Winning_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Load Settings
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Load_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Load Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Kill Confirm Widget
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Victim_Player_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Kill_Confirm_Widget(const class FText& Killed_player, int32 Team_0, class APlayerState* Victim_Player_State, class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Kill Confirm Widget");

	Params::PlayerControllerBP_C_Kill_Confirm_Widget Parms{};

	Parms.Killed_player = std::move(Killed_player);
	Parms.Team_0 = Team_0;
	Parms.Victim_Player_State = Victim_Player_State;
	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Kickfart Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Initiator                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerBP_C::Kickfart_Client(const class FString& Name_0, bool Kick_, const class FText& Text, const class FText& Initiator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Kickfart Client");

	Params::PlayerControllerBP_C_Kickfart_Client Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.Initiator = std::move(Initiator);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_V_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_V_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_V_K2Node_InputKeyEvent_1");

	Params::PlayerControllerBP_C_InpActEvt_V_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_Tab_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_Tab_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_Tab_K2Node_InputKeyEvent_4");

	Params::PlayerControllerBP_C_InpActEvt_Tab_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_Tab_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_Tab_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_Tab_K2Node_InputKeyEvent_3");

	Params::PlayerControllerBP_C_InpActEvt_Tab_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_LeftShift_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_LeftShift_K2Node_InputKeyEvent_2");

	Params::PlayerControllerBP_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_LeftAlt_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_LeftAlt_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_LeftAlt_K2Node_InputKeyEvent_5");

	Params::PlayerControllerBP_C_InpActEvt_LeftAlt_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_F8_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_F8_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_F8_K2Node_InputKeyEvent_0");

	Params::PlayerControllerBP_C_InpActEvt_F8_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.InpActEvt_Escape_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerBP_C::InpActEvt_Escape_K2Node_InputKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "InpActEvt_Escape_K2Node_InputKeyEvent_6");

	Params::PlayerControllerBP_C_InpActEvt_Escape_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Initiate Random Sounds
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Initiate_Random_Sounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Initiate Random Sounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.I voted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::I_voted(bool TheirVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "I voted");

	Params::PlayerControllerBP_C_I_voted Parms{};

	Parms.TheirVote = TheirVote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Get game mode
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Get_game_mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Get game mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.GameMode Widgets
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::GameMode_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "GameMode Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Fart for me
// (Net, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Fart_for_me(const struct FRotator& NewRotation, class AController* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Fart for me");

	Params::PlayerControllerBP_C_Fart_for_me Parms{};

	Parms.NewRotation = std::move(NewRotation);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.ExecuteUbergraph_PlayerControllerBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::ExecuteUbergraph_PlayerControllerBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "ExecuteUbergraph_PlayerControllerBP");

	Params::PlayerControllerBP_C_ExecuteUbergraph_PlayerControllerBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Damage Number Doer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Damage_Number_Doer(const struct FVector& Spawn_Transform_Location, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Damage Number Doer");

	Params::PlayerControllerBP_C_Damage_Number_Doer Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Curcuitfar
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewRotation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void APlayerControllerBP_C::Curcuitfar(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Curcuitfar");

	Params::PlayerControllerBP_C_Curcuitfar Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Create Text Box
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Owner_Player_State                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Create_Text_Box(class APlayerState* Owner_Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Create Text Box");

	Params::PlayerControllerBP_C_Create_Text_Box Parms{};

	Parms.Owner_Player_State = Owner_Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Create countdown Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    GameMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has_authority                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Create_countdown_Client(const class FString& GameMode_0, const class FString& Map, bool Has_authority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Create countdown Client");

	Params::PlayerControllerBP_C_Create_countdown_Client Parms{};

	Parms.GameMode_0 = std::move(GameMode_0);
	Parms.Map = std::move(Map);
	Parms.Has_authority = Has_authority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Create Countdown
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    GameMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has_authority                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Create_Countdown(const class FString& GameMode_0, const class FString& Map, bool Has_authority, class AController* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Create Countdown");

	Params::PlayerControllerBP_C_Create_Countdown Parms{};

	Parms.GameMode_0 = std::move(GameMode_0);
	Parms.Map = std::move(Map);
	Parms.Has_authority = Has_authority;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Close Menu Gracefully
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerBP_C::Close_Menu_Gracefully()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Close Menu Gracefully");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Chat Message
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Chat_Message(class APlayerState* Player_0, const class FText& Text, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Chat Message");

	Params::PlayerControllerBP_C_Chat_Message Parms{};

	Parms.Player_0 = Player_0;
	Parms.Text = std::move(Text);
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Change Skin
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Skin_Number_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Change_Skin(int32 Skin_Number_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Change Skin");

	Params::PlayerControllerBP_C_Change_Skin Parms{};

	Parms.Skin_Number_0 = Skin_Number_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Cannon Skibidi
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Cannon_Skibidi(class AActor* DamagedActor, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Cannon Skibidi");

	Params::PlayerControllerBP_C_Cannon_Skibidi Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Ask gamemode for fart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerBP_C::Ask_gamemode_for_fart(const class FString& PlayerName, bool Kick_, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Ask gamemode for fart");

	Params::PlayerControllerBP_C_Ask_gamemode_for_fart Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Ask for vote info
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameMenu_C*                      MenuRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerBP_C::Ask_for_vote_info(class UGameMenu_C* MenuRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Ask for vote info");

	Params::PlayerControllerBP_C_Ask_for_vote_info Parms{};

	Parms.MenuRef = MenuRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Add Kill To Box Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerBP_C::Add_Kill_To_Box_Server(class APlayerState* Victim, const class FText& Killed_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Add Kill To Box Server");

	Params::PlayerControllerBP_C_Add_Kill_To_Box_Server Parms{};

	Parms.Victim = Victim;
	Parms.Killed_player = std::move(Killed_player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerBP.PlayerControllerBP_C.Add Kill To Box Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerBP_C::Add_Kill_To_Box_Client(class APlayerState* Victim, const class FText& Killed_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerBP_C", "Add Kill To Box Client");

	Params::PlayerControllerBP_C_Add_Kill_To_Box_Client Parms{};

	Parms.Victim = Victim;
	Parms.Killed_player = std::move(Killed_player);

	UObject::ProcessEvent(Func, &Parms);
}

}

