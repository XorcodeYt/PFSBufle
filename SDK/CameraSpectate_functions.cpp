#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraSpectate

#include "Basic.hpp"

#include "CameraSpectate_classes.hpp"
#include "CameraSpectate_parameters.hpp"


namespace SDK
{

// Function CameraSpectate.CameraSpectate_C.VoteUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::VoteUpdate(int32 Ay, int32 Ny)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "VoteUpdate");

	Params::CameraSpectate_C_VoteUpdate Parms{};

	Parms.Ay = Ay;
	Parms.Ny = Ny;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.UpdateKickFart
// (Public, BlueprintCallable, BlueprintEvent)

void ACameraSpectate_C::UpdateKickFart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "UpdateKickFart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraSpectate.CameraSpectate_C.Spawn The Widgets
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::Spawn_The_Widgets(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Spawn The Widgets");

	Params::CameraSpectate_C_Spawn_The_Widgets Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.SomeoneVoted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PersonWhoVoted                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::SomeoneVoted(const class FText& PersonWhoVoted, bool TheirVote, class APlayerStateBP_C* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "SomeoneVoted");

	Params::CameraSpectate_C_SomeoneVoted Parms{};

	Parms.PersonWhoVoted = std::move(PersonWhoVoted);
	Parms.TheirVote = TheirVote;
	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "ReceiveTick");

	Params::CameraSpectate_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACameraSpectate_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraSpectate.CameraSpectate_C.LogOn'ed
// (Public, BlueprintCallable, BlueprintEvent)

void ACameraSpectate_C::LogOn_ed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "LogOn'ed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraSpectate.CameraSpectate_C.Kickfart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      ThoseWhoKnow                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ACameraSpectate_C::Kickfart(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Kickfart");

	Params::CameraSpectate_C_Kickfart Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.ThoseWhoKnow = std::move(ThoseWhoKnow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.Just Possesed Pawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::Just_Possesed_Pawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Just Possesed Pawn");

	Params::CameraSpectate_C_Just_Possesed_Pawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.Spawn Gus The Spire Docks
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   My_team                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::Spawn_Gus_The_Spire_Docks(class AController* Target, int32 My_team, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Spawn Gus The Spire Docks");

	Params::CameraSpectate_C_Spawn_Gus_The_Spire_Docks Parms{};

	Parms.Target = Target;
	Parms.My_team = My_team;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.Spawn Gus TDMer Island
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   My_team                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::Spawn_Gus_TDMer_Island(class AController* Target, int32 My_team, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Spawn Gus TDMer Island");

	Params::CameraSpectate_C_Spawn_Gus_TDMer_Island Parms{};

	Parms.Target = Target;
	Parms.My_team = My_team;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_V_K2Node_InputKeyEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_V_K2Node_InputKeyEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_V_K2Node_InputKeyEvent_8");

	Params::CameraSpectate_C_InpActEvt_V_K2Node_InputKeyEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_6");

	Params::CameraSpectate_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_R_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_R_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_R_K2Node_InputKeyEvent_0");

	Params::CameraSpectate_C_InpActEvt_R_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2");

	Params::CameraSpectate_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");

	Params::CameraSpectate_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7");

	Params::CameraSpectate_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_H_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_H_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_H_K2Node_InputKeyEvent_3");

	Params::CameraSpectate_C_InpActEvt_H_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_G_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_G_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_G_K2Node_InputKeyEvent_4");

	Params::CameraSpectate_C_InpActEvt_G_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.InpActEvt_F_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraSpectate_C::InpActEvt_F_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "InpActEvt_F_K2Node_InputKeyEvent_5");

	Params::CameraSpectate_C_InpActEvt_F_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.ExecuteUbergraph_CameraSpectate
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::ExecuteUbergraph_CameraSpectate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "ExecuteUbergraph_CameraSpectate");

	Params::CameraSpectate_C_ExecuteUbergraph_CameraSpectate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraSpectate.CameraSpectate_C.Create The menu widget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraSpectate_C::Create_The_menu_widget(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraSpectate_C", "Create The menu widget");

	Params::CameraSpectate_C_Create_The_menu_widget Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}

}

