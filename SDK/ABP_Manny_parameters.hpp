#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Manny

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Manny.ABP_Manny_C.ExecuteUbergraph_ABP_Manny
// 0x0078 (0x0078 - 0x0000)
struct ABP_Manny_C_ExecuteUbergraph_ABP_Manny final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny) == 0x000008, "Wrong alignment on ABP_Manny_C_ExecuteUbergraph_ABP_Manny");
static_assert(sizeof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny) == 0x000078, "Wrong size on ABP_Manny_C_ExecuteUbergraph_ABP_Manny");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, EntryPoint) == 0x000000, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_VSizeXY_ReturnValue) == 0x000028, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000038, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000050, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_IsFalling_ReturnValue) == 0x000051, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_BreakVector_X) == 0x000058, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_BreakVector_Y) == 0x000060, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_BreakVector_Z) == 0x000068, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Manny_C_ExecuteUbergraph_ABP_Manny, CallFunc_BooleanAND_ReturnValue_1) == 0x000071, "Member 'ABP_Manny_C_ExecuteUbergraph_ABP_Manny::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ABP_Manny.ABP_Manny_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Manny_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Manny_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Manny_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Manny_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Manny_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Manny_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Manny_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Manny.ABP_Manny_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Manny_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Manny_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Manny_C_AnimGraph");
static_assert(sizeof(ABP_Manny_C_AnimGraph) == 0x000010, "Wrong size on ABP_Manny_C_AnimGraph");
static_assert(offsetof(ABP_Manny_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Manny_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

