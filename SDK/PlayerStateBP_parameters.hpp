#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStateBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PlayerStateBP.PlayerStateBP_C.VoteUpdate
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_VoteUpdate final
{
public:
	int32                                         Ay_0;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ny_0;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_VoteUpdate) == 0x000004, "Wrong alignment on PlayerStateBP_C_VoteUpdate");
static_assert(sizeof(PlayerStateBP_C_VoteUpdate) == 0x000008, "Wrong size on PlayerStateBP_C_VoteUpdate");
static_assert(offsetof(PlayerStateBP_C_VoteUpdate, Ay_0) == 0x000000, "Member 'PlayerStateBP_C_VoteUpdate::Ay_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_VoteUpdate, Ny_0) == 0x000004, "Member 'PlayerStateBP_C_VoteUpdate::Ny_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Vote Update Server
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Vote_Update_Server final
{
public:
	int32                                         Ay_0;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ny_0;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Vote_Update_Server) == 0x000004, "Wrong alignment on PlayerStateBP_C_Vote_Update_Server");
static_assert(sizeof(PlayerStateBP_C_Vote_Update_Server) == 0x000008, "Wrong size on PlayerStateBP_C_Vote_Update_Server");
static_assert(offsetof(PlayerStateBP_C_Vote_Update_Server, Ay_0) == 0x000000, "Member 'PlayerStateBP_C_Vote_Update_Server::Ay_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Vote_Update_Server, Ny_0) == 0x000004, "Member 'PlayerStateBP_C_Vote_Update_Server::Ny_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Vote Update Client
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Vote_Update_Client final
{
public:
	int32                                         Ay_0;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ny_0;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Vote_Update_Client) == 0x000004, "Wrong alignment on PlayerStateBP_C_Vote_Update_Client");
static_assert(sizeof(PlayerStateBP_C_Vote_Update_Client) == 0x000008, "Wrong size on PlayerStateBP_C_Vote_Update_Client");
static_assert(offsetof(PlayerStateBP_C_Vote_Update_Client, Ay_0) == 0x000000, "Member 'PlayerStateBP_C_Vote_Update_Client::Ay_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Vote_Update_Client, Ny_0) == 0x000004, "Member 'PlayerStateBP_C_Vote_Update_Client::Ny_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Tell us fella
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Tell_us_fella final
{
public:
	class ATrainGusPlayer_C*                      Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Tell_us_fella) == 0x000008, "Wrong alignment on PlayerStateBP_C_Tell_us_fella");
static_assert(sizeof(PlayerStateBP_C_Tell_us_fella) == 0x000008, "Wrong size on PlayerStateBP_C_Tell_us_fella");
static_assert(offsetof(PlayerStateBP_C_Tell_us_fella, Pawn) == 0x000000, "Member 'PlayerStateBP_C_Tell_us_fella::Pawn' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Sound Bo Bound Client
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_Sound_Bo_Bound_Client final
{
public:
	int32                                         Sound_Number;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Spawner;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Sound_Bo_Bound_Client) == 0x000008, "Wrong alignment on PlayerStateBP_C_Sound_Bo_Bound_Client");
static_assert(sizeof(PlayerStateBP_C_Sound_Bo_Bound_Client) == 0x000010, "Wrong size on PlayerStateBP_C_Sound_Bo_Bound_Client");
static_assert(offsetof(PlayerStateBP_C_Sound_Bo_Bound_Client, Sound_Number) == 0x000000, "Member 'PlayerStateBP_C_Sound_Bo_Bound_Client::Sound_Number' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Sound_Bo_Bound_Client, Spawner) == 0x000008, "Member 'PlayerStateBP_C_Sound_Bo_Bound_Client::Spawner' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Sound Bo Bound
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_Sound_Bo_Bound final
{
public:
	int32                                         Sound_Number;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Spawner;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Sound_Bo_Bound) == 0x000008, "Wrong alignment on PlayerStateBP_C_Sound_Bo_Bound");
static_assert(sizeof(PlayerStateBP_C_Sound_Bo_Bound) == 0x000010, "Wrong size on PlayerStateBP_C_Sound_Bo_Bound");
static_assert(offsetof(PlayerStateBP_C_Sound_Bo_Bound, Sound_Number) == 0x000000, "Member 'PlayerStateBP_C_Sound_Bo_Bound::Sound_Number' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Sound_Bo_Bound, Spawner) == 0x000008, "Member 'PlayerStateBP_C_Sound_Bo_Bound::Spawner' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.SomeoneVoted
// 0x0028 (0x0028 - 0x0000)
struct PlayerStateBP_C_SomeoneVoted final
{
public:
	class FText                                   PersonWhoVoted;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          TheirVote;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       Player_State;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_SomeoneVoted) == 0x000008, "Wrong alignment on PlayerStateBP_C_SomeoneVoted");
static_assert(sizeof(PlayerStateBP_C_SomeoneVoted) == 0x000028, "Wrong size on PlayerStateBP_C_SomeoneVoted");
static_assert(offsetof(PlayerStateBP_C_SomeoneVoted, PersonWhoVoted) == 0x000000, "Member 'PlayerStateBP_C_SomeoneVoted::PersonWhoVoted' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_SomeoneVoted, TheirVote) == 0x000018, "Member 'PlayerStateBP_C_SomeoneVoted::TheirVote' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_SomeoneVoted, Player_State) == 0x000020, "Member 'PlayerStateBP_C_SomeoneVoted::Player_State' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Server Change Dom
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_Server_Change_Dom final
{
public:
	class APlayerState*                           Killer_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Me;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Server_Change_Dom) == 0x000008, "Wrong alignment on PlayerStateBP_C_Server_Change_Dom");
static_assert(sizeof(PlayerStateBP_C_Server_Change_Dom) == 0x000010, "Wrong size on PlayerStateBP_C_Server_Change_Dom");
static_assert(offsetof(PlayerStateBP_C_Server_Change_Dom, Killer_0) == 0x000000, "Member 'PlayerStateBP_C_Server_Change_Dom::Killer_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Server_Change_Dom, Me) == 0x000008, "Member 'PlayerStateBP_C_Server_Change_Dom::Me' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Return the vote info server
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Return_the_vote_info_server final
{
public:
	int32                                         Counter_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ongoing_vote_;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Return_the_vote_info_server) == 0x000004, "Wrong alignment on PlayerStateBP_C_Return_the_vote_info_server");
static_assert(sizeof(PlayerStateBP_C_Return_the_vote_info_server) == 0x000008, "Wrong size on PlayerStateBP_C_Return_the_vote_info_server");
static_assert(offsetof(PlayerStateBP_C_Return_the_vote_info_server, Counter_0) == 0x000000, "Member 'PlayerStateBP_C_Return_the_vote_info_server::Counter_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Return_the_vote_info_server, Ongoing_vote_) == 0x000004, "Member 'PlayerStateBP_C_Return_the_vote_info_server::Ongoing_vote_' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Return the vote info
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Return_the_vote_info final
{
public:
	int32                                         Counter_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ongoing_vote_;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Return_the_vote_info) == 0x000004, "Wrong alignment on PlayerStateBP_C_Return_the_vote_info");
static_assert(sizeof(PlayerStateBP_C_Return_the_vote_info) == 0x000008, "Wrong size on PlayerStateBP_C_Return_the_vote_info");
static_assert(offsetof(PlayerStateBP_C_Return_the_vote_info, Counter_0) == 0x000000, "Member 'PlayerStateBP_C_Return_the_vote_info::Counter_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Return_the_vote_info, Ongoing_vote_) == 0x000004, "Member 'PlayerStateBP_C_Return_the_vote_info::Ongoing_vote_' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerStateBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerStateBP_C_ReceiveTick");
static_assert(sizeof(PlayerStateBP_C_ReceiveTick) == 0x000004, "Wrong size on PlayerStateBP_C_ReceiveTick");
static_assert(offsetof(PlayerStateBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerStateBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Player Logged on
// 0x0028 (0x0028 - 0x0000)
struct PlayerStateBP_C_Player_Logged_on final
{
public:
	int32                                         Title_Number_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HatNumber_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Skin_Number_0;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon_1_0;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon_2_0;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Pant;                                              // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Player_Logged_on) == 0x000008, "Wrong alignment on PlayerStateBP_C_Player_Logged_on");
static_assert(sizeof(PlayerStateBP_C_Player_Logged_on) == 0x000028, "Wrong size on PlayerStateBP_C_Player_Logged_on");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, Title_Number_0) == 0x000000, "Member 'PlayerStateBP_C_Player_Logged_on::Title_Number_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, HatNumber_0) == 0x000004, "Member 'PlayerStateBP_C_Player_Logged_on::HatNumber_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, Skin_Number_0) == 0x000008, "Member 'PlayerStateBP_C_Player_Logged_on::Skin_Number_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, Weapon_1_0) == 0x00000C, "Member 'PlayerStateBP_C_Player_Logged_on::Weapon_1_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, Weapon_2_0) == 0x000010, "Member 'PlayerStateBP_C_Player_Logged_on::Weapon_2_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Player_Logged_on, Pant) == 0x000018, "Member 'PlayerStateBP_C_Player_Logged_on::Pant' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_B7F14CEF49C198C07A8662A19BE661C1
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1");
static_assert(sizeof(PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1) == 0x000010, "Wrong size on PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_6DA32DB04B670646094AF1826A1C9B45
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45");
static_assert(sizeof(PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45) == 0x000010, "Wrong size on PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_3809042940C9A278288688A21E93631C
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C");
static_assert(sizeof(PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C) == 0x000010, "Wrong size on PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_364A0E194677C706731295BCC6A3C1C7
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7");
static_assert(sizeof(PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7) == 0x000010, "Wrong size on PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnFailure_B7F14CEF49C198C07A8662A19BE661C1
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1");
static_assert(sizeof(PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1) == 0x000010, "Wrong size on PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1");
static_assert(offsetof(PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnFailure_6DA32DB04B670646094AF1826A1C9B45
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45");
static_assert(sizeof(PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45) == 0x000010, "Wrong size on PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45");
static_assert(offsetof(PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnFailure_3809042940C9A278288688A21E93631C
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C");
static_assert(sizeof(PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C) == 0x000010, "Wrong size on PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C");
static_assert(offsetof(PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.OnFailure_364A0E194677C706731295BCC6A3C1C7
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7 final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7) == 0x000004, "Wrong alignment on PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7");
static_assert(sizeof(PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7) == 0x000010, "Wrong size on PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7");
static_assert(offsetof(PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7, WrittenAchievementName) == 0x000000, "Member 'PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7, WrittenProgress) == 0x000008, "Member 'PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7::WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7, WrittenUserTag) == 0x00000C, "Member 'PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7::WrittenUserTag' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Message To Send
// 0x0030 (0x0030 - 0x0000)
struct PlayerStateBP_C_Message_To_Send final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Param_Name_0;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Message_To_Send) == 0x000008, "Wrong alignment on PlayerStateBP_C_Message_To_Send");
static_assert(sizeof(PlayerStateBP_C_Message_To_Send) == 0x000030, "Wrong size on PlayerStateBP_C_Message_To_Send");
static_assert(offsetof(PlayerStateBP_C_Message_To_Send, Player) == 0x000000, "Member 'PlayerStateBP_C_Message_To_Send::Player' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Message_To_Send, Text) == 0x000008, "Member 'PlayerStateBP_C_Message_To_Send::Text' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Message_To_Send, Param_Name_0) == 0x000020, "Member 'PlayerStateBP_C_Message_To_Send::Param_Name_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Locateinator
// 0x0018 (0x0018 - 0x0000)
struct PlayerStateBP_C_Locateinator final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Locateinator) == 0x000008, "Wrong alignment on PlayerStateBP_C_Locateinator");
static_assert(sizeof(PlayerStateBP_C_Locateinator) == 0x000018, "Wrong size on PlayerStateBP_C_Locateinator");
static_assert(offsetof(PlayerStateBP_C_Locateinator, Spawn_Transform_Location) == 0x000000, "Member 'PlayerStateBP_C_Locateinator::Spawn_Transform_Location' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Kickfart server
// 0x0048 (0x0048 - 0x0000)
struct PlayerStateBP_C_Kickfart_server final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Kick_;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ThoseWhoKnow;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Kickfart_server) == 0x000008, "Wrong alignment on PlayerStateBP_C_Kickfart_server");
static_assert(sizeof(PlayerStateBP_C_Kickfart_server) == 0x000048, "Wrong size on PlayerStateBP_C_Kickfart_server");
static_assert(offsetof(PlayerStateBP_C_Kickfart_server, PlayerName) == 0x000000, "Member 'PlayerStateBP_C_Kickfart_server::PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart_server, Kick_) == 0x000010, "Member 'PlayerStateBP_C_Kickfart_server::Kick_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart_server, Text) == 0x000018, "Member 'PlayerStateBP_C_Kickfart_server::Text' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart_server, ThoseWhoKnow) == 0x000030, "Member 'PlayerStateBP_C_Kickfart_server::ThoseWhoKnow' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Kickfart brian
// 0x0030 (0x0030 - 0x0000)
struct PlayerStateBP_C_Kickfart_brian final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Kick_;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Kickfart_brian) == 0x000008, "Wrong alignment on PlayerStateBP_C_Kickfart_brian");
static_assert(sizeof(PlayerStateBP_C_Kickfart_brian) == 0x000030, "Wrong size on PlayerStateBP_C_Kickfart_brian");
static_assert(offsetof(PlayerStateBP_C_Kickfart_brian, PlayerName) == 0x000000, "Member 'PlayerStateBP_C_Kickfart_brian::PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart_brian, Kick_) == 0x000010, "Member 'PlayerStateBP_C_Kickfart_brian::Kick_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart_brian, Text) == 0x000018, "Member 'PlayerStateBP_C_Kickfart_brian::Text' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Kickfart
// 0x0048 (0x0048 - 0x0000)
struct PlayerStateBP_C_Kickfart final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Kick_;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ThoseWhoKnow;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Kickfart) == 0x000008, "Wrong alignment on PlayerStateBP_C_Kickfart");
static_assert(sizeof(PlayerStateBP_C_Kickfart) == 0x000048, "Wrong size on PlayerStateBP_C_Kickfart");
static_assert(offsetof(PlayerStateBP_C_Kickfart, PlayerName) == 0x000000, "Member 'PlayerStateBP_C_Kickfart::PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart, Kick_) == 0x000010, "Member 'PlayerStateBP_C_Kickfart::Kick_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart, Text) == 0x000018, "Member 'PlayerStateBP_C_Kickfart::Text' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Kickfart, ThoseWhoKnow) == 0x000030, "Member 'PlayerStateBP_C_Kickfart::ThoseWhoKnow' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Just Possesed Pawn
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Just_Possesed_Pawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Just_Possesed_Pawn) == 0x000008, "Wrong alignment on PlayerStateBP_C_Just_Possesed_Pawn");
static_assert(sizeof(PlayerStateBP_C_Just_Possesed_Pawn) == 0x000008, "Wrong size on PlayerStateBP_C_Just_Possesed_Pawn");
static_assert(offsetof(PlayerStateBP_C_Just_Possesed_Pawn, Pawn) == 0x000000, "Member 'PlayerStateBP_C_Just_Possesed_Pawn::Pawn' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.I voted Server
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_I_voted_Server final
{
public:
	bool                                          TheirVote;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_I_voted_Server) == 0x000008, "Wrong alignment on PlayerStateBP_C_I_voted_Server");
static_assert(sizeof(PlayerStateBP_C_I_voted_Server) == 0x000010, "Wrong size on PlayerStateBP_C_I_voted_Server");
static_assert(offsetof(PlayerStateBP_C_I_voted_Server, TheirVote) == 0x000000, "Member 'PlayerStateBP_C_I_voted_Server::TheirVote' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_I_voted_Server, Player_State) == 0x000008, "Member 'PlayerStateBP_C_I_voted_Server::Player_State' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.I voted
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_I_voted final
{
public:
	class APlayerStateBP_C*                       Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TheirVote;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_I_voted) == 0x000008, "Wrong alignment on PlayerStateBP_C_I_voted");
static_assert(sizeof(PlayerStateBP_C_I_voted) == 0x000010, "Wrong size on PlayerStateBP_C_I_voted");
static_assert(offsetof(PlayerStateBP_C_I_voted, Player_State) == 0x000000, "Member 'PlayerStateBP_C_I_voted::Player_State' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_I_voted, TheirVote) == 0x000008, "Member 'PlayerStateBP_C_I_voted::TheirVote' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.I just Perished Someone Player State
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_I_just_Perished_Someone_Player_State final
{
public:
	class APlayerState*                           Victim_Player_State;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_I_just_Perished_Someone_Player_State) == 0x000008, "Wrong alignment on PlayerStateBP_C_I_just_Perished_Someone_Player_State");
static_assert(sizeof(PlayerStateBP_C_I_just_Perished_Someone_Player_State) == 0x000008, "Wrong size on PlayerStateBP_C_I_just_Perished_Someone_Player_State");
static_assert(offsetof(PlayerStateBP_C_I_just_Perished_Someone_Player_State, Victim_Player_State) == 0x000000, "Member 'PlayerStateBP_C_I_just_Perished_Someone_Player_State::Victim_Player_State' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Give Killer Kill Confirm
// 0x0030 (0x0030 - 0x0000)
struct PlayerStateBP_C_Give_Killer_Kill_Confirm final
{
public:
	class APlayerState*                           Victim_Player_State;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      OwningPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team_0;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Killed_player;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Give_Killer_Kill_Confirm) == 0x000008, "Wrong alignment on PlayerStateBP_C_Give_Killer_Kill_Confirm");
static_assert(sizeof(PlayerStateBP_C_Give_Killer_Kill_Confirm) == 0x000030, "Wrong size on PlayerStateBP_C_Give_Killer_Kill_Confirm");
static_assert(offsetof(PlayerStateBP_C_Give_Killer_Kill_Confirm, Victim_Player_State) == 0x000000, "Member 'PlayerStateBP_C_Give_Killer_Kill_Confirm::Victim_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Give_Killer_Kill_Confirm, OwningPlayer) == 0x000008, "Member 'PlayerStateBP_C_Give_Killer_Kill_Confirm::OwningPlayer' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Give_Killer_Kill_Confirm, Team_0) == 0x000010, "Member 'PlayerStateBP_C_Give_Killer_Kill_Confirm::Team_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Give_Killer_Kill_Confirm, Killed_player) == 0x000018, "Member 'PlayerStateBP_C_Give_Killer_Kill_Confirm::Killed_player' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Get totum
// 0x0018 (0x0018 - 0x0000)
struct PlayerStateBP_C_Get_totum final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Get_totum) == 0x000008, "Wrong alignment on PlayerStateBP_C_Get_totum");
static_assert(sizeof(PlayerStateBP_C_Get_totum) == 0x000018, "Wrong size on PlayerStateBP_C_Get_totum");
static_assert(offsetof(PlayerStateBP_C_Get_totum, Spawn_Transform_Location) == 0x000000, "Member 'PlayerStateBP_C_Get_totum::Spawn_Transform_Location' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.ExecuteUbergraph_PlayerStateBP
// 0x0AC0 (0x0AC0 - 0x0000)
struct PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_CustomEvent_Pawn;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_5;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_5;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_5;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate; // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_4;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_4;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_4;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_3;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_3;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_3;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_2;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_2;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_2;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_5; // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKillConfirm_C*                         CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_1;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_1;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_8; // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_9; // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PlayerName;                           // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Kick_;                                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x01C0(0x0018)()
	class FText                                   K2Node_Event_ThoseWhoKnow;                         // 0x01D8(0x0018)()
	class FText                                   K2Node_Event_PersonWhoVoted;                       // 0x01F0(0x0018)()
	bool                                          K2Node_Event_TheirVote;                            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_Event_Player_State;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Team_1;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Victim_1;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_Damage_Type;                    // 0x0228(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Killed_player_2;                // 0x0230(0x0018)()
	class APlayerState*                           K2Node_CustomEvent_Killer_1;                       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Hat;                            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HatNumber_1;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam;                       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Sound_Number_1;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Spawner_1;                      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Sound_Number;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Spawner;                        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode;    // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP;         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Skin_Number_1;                  // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1;  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_2;  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_1;       // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x03BC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x5];                                      // 0x03E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Dommed;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class APlayerState*                     K2Node_CustomEvent_Dommed_by;                      // 0x0440(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP_1;            // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP_2;            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_3;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USavePlayerData_C*                      K2Node_DynamicCast_AsSave_Player_Data;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Killer;                         // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Me_1;                           // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP_3;            // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue_1;             // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class APlayerState*                     K2Node_CustomEvent_Me;                             // 0x04B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6[0x2];                                      // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USavePlayerData_C*                      CallFunc_CreateSaveGameObject_ReturnValue;         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USavePlayerData_C*                      K2Node_DynamicCast_AsSave_Player_Data_1;           // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x04E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USavePlayerData_C*                      K2Node_DynamicCast_AsSave_Player_Data_2;           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Player;                         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text_2;                         // 0x0520(0x0018)()
	class FString                                 K2Node_CustomEvent_Name;                           // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_2;       // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_562[0x2];                                      // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue;     // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_1;           // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_6;       // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_6;              // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_6;               // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_13; // 0x05A8(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue_1;          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue_1;   // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2[0x6];                                      // 0x05D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue_2;          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue_2;   // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Victim_Player_State_1;          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP_4;            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_2;              // 0x0618(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0628(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Title_Number;                   // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HatNumber;                      // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Skin_Number;                    // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Weapon_1;                       // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Weapon_2;                       // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Pant;                           // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue_3;          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue_3;   // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_7;       // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_7;              // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_7;               // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x3];                                      // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_4;                         // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Victim_Player_State;            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_OwningPlayer;                   // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Team;                           // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Killed_player_1;                // 0x06F0(0x0018)()
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_3;       // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_14; // 0x0714(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_PlayerName;                 // 0x0730(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0748(0x0018)()
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_4;       // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  K2Node_CustomEvent_Target;                         // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Victim;                         // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Killed_player;                  // 0x0780(0x0018)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PantType;                       // 0x07A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName_1;                   // 0x07B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Kick__1;                        // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x07D0(0x0018)()
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_5;       // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayer_Info_BPI_C>    K2Node_DynamicCast_AsPlayer_Info_BPI;              // 0x0800(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x0818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Kick_;                          // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0830(0x0018)()
	class FText                                   K2Node_CustomEvent_ThoseWhoKnow;                   // 0x0848(0x0018)()
	class APlayerStateBP_C*                       K2Node_CustomEvent_Player_State_3;                 // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TheirVote_1;                    // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TheirVote;                      // 0x0869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86A[0x6];                                      // 0x086A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_CustomEvent_Player_State_2;                 // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayer_Info_BPI_C>    K2Node_DynamicCast_AsPlayer_Info_BPI_1;            // 0x0880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x3];                                      // 0x0891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Ay;                                   // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Ny;                                   // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBP_C*                       K2Node_DynamicCast_AsPlayer_State_BP_5;            // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_3;              // 0x08B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x08C0(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_6;       // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Ay_1;                           // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ny_1;                           // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ay;                             // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ny;                             // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Player_State_1;                 // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Player_State;                   // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Counter_1;                      // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Ongoing_vote__1;                // 0x091C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_3;  // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Counter;                        // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Ongoing_vote_;                  // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x7];                                      // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_12;       // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_7;       // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_951[0x7];                                      // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_5;                         // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x3];                                      // 0x0961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_2;           // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveItems_C*                           K2Node_DynamicCast_AsSave_Items;                   // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location_1;     // 0x0988(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B8[0x8];                                      // 0x09B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x09C0(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APowerUpItemDrop_BP_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player_1;           // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A49[0x7];                                      // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACannon_C*                              K2Node_DynamicCast_AsCannon;                       // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0A59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0A5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A5B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0A5C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_5;                // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThirdPersonGameMode_C*              K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_4;  // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_6;                         // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9C[0x4];                                      // 0x0A9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_13;       // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP_8;       // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP) == 0x000010, "Wrong alignment on PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP");
static_assert(sizeof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP) == 0x000AC0, "Wrong size on PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, EntryPoint) == 0x000000, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Pawn) == 0x000008, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_5) == 0x000010, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_5) == 0x000018, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_5) == 0x00001C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_4) == 0x000030, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_4) == 0x000038, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_4) == 0x00003C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable) == 0x000050, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_real_Variable) == 0x000054, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_name_Variable) == 0x000058, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_3) == 0x000080, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_3) == 0x000088, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_3) == 0x00008C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_4) == 0x000090, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_2) == 0x0000A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_2) == 0x0000A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_2) == 0x0000AC, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable_1) == 0x0000C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_real_Variable_1) == 0x0000C4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_name_Variable_1) == 0x0000C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_1) == 0x0000F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_1) == 0x000100, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_1) == 0x000104, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_8) == 0x000108, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName) == 0x000118, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress) == 0x000120, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag) == 0x000124, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_9) == 0x000128, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable_2) == 0x000138, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_real_Variable_2) == 0x00013C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_name_Variable_2) == 0x000140, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_IntToString_ReturnValue) == 0x000148, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000158, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000174, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable) == 0x000178, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_10) == 0x00017C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_1) == 0x00018C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_2) == 0x000190, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000194, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_2) == 0x000198, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Pawn) == 0x0001A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_PlayerName) == 0x0001A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Kick_) == 0x0001B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Kick_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Text) == 0x0001C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_ThoseWhoKnow) == 0x0001D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_ThoseWhoKnow' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_PersonWhoVoted) == 0x0001F0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_PersonWhoVoted' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_TheirVote) == 0x000208, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_TheirVote' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Player_State) == 0x000210, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Team_1) == 0x000218, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Victim_1) == 0x000220, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Victim_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Damage_Type) == 0x000228, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Damage_Type' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Killed_player_2) == 0x000230, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Killed_player_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Killer_1) == 0x000248, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Killer_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetObjectClass_ReturnValue) == 0x000250, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue) == 0x000258, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000260, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP) == 0x000268, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess) == 0x000270, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerName_ReturnValue) == 0x000278, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000288, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000289, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_3) == 0x00028C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_4) == 0x000290, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Hat) == 0x000294, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Hat' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_3) == 0x000298, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_5) == 0x00029C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_HatNumber_1) == 0x0002A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_HatNumber_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_NewParam) == 0x0002A4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_11) == 0x0002A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Sound_Number_1) == 0x0002B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Sound_Number_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Spawner_1) == 0x0002C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Spawner_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Sound_Number) == 0x0002C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Sound_Number' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Spawner) == 0x0002D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Spawner' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x0002D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_SwitchInteger_CmpSuccess) == 0x0002E1, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetDisplayName_ReturnValue) == 0x0002E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0002F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_4) == 0x000300, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_3) == 0x000304, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_6) == 0x000308, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_4) == 0x00030C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameState_ReturnValue) == 0x000310, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue) == 0x000318, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode) == 0x000320, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_2) == 0x000328, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item) == 0x000330, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_1) == 0x000338, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue) == 0x000340, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP) == 0x000348, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_3) == 0x000350, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Skin_Number_1) == 0x000354, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Skin_Number_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_5) == 0x000358, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue_1) == 0x000360, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1) == 0x000368, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_4) == 0x000370, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_2) == 0x000378, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_5) == 0x000380, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue) == 0x000381, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_7) == 0x000384, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameState_ReturnValue_1) == 0x000388, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_1) == 0x000390, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_1) == 0x000398, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_2) == 0x0003A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_1) == 0x0003B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_6) == 0x0003B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_12) == 0x0003BC, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_2) == 0x0003CC, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_RemoveItem_ReturnValue) == 0x0003D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Add_ReturnValue) == 0x0003D4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerState_ReturnValue) == 0x0003D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0003E1, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0003E2, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerName_ReturnValue_1) == 0x0003E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Concat_StrStr_ReturnValue) == 0x0003F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000408, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000418, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_8) == 0x00041C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_5) == 0x000420, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_2) == 0x000428, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000430, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Dommed) == 0x000438, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Dommed' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Dommed_by) == 0x000440, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Dommed_by' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP_1) == 0x000448, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_7) == 0x000450, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP_2) == 0x000458, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_8) == 0x000460, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_3) == 0x000468, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Add_ReturnValue_1) == 0x000470, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000474, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_3) == 0x000478, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_2) == 0x00047C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsSave_Player_Data) == 0x000480, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsSave_Player_Data' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_9) == 0x000488, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Killer) == 0x000490, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Me_1) == 0x000498, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Me_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP_3) == 0x0004A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_10) == 0x0004A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerState_ReturnValue_1) == 0x0004B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Me) == 0x0004B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Me' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_4) == 0x0004C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0004C4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004C5, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Add_ReturnValue_2) == 0x0004C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0004D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsSave_Player_Data_1) == 0x0004D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsSave_Player_Data_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_11) == 0x0004E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_SaveGameToSlot_ReturnValue) == 0x0004E1, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0004E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0004F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_name_Variable_3) == 0x000500, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsSave_Player_Data_2) == 0x000508, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsSave_Player_Data_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_12) == 0x000510, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Player) == 0x000518, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Text_2) == 0x000520, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Text_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Name) == 0x000538, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_3) == 0x000548, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_9) == 0x000550, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_2) == 0x000558, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_13) == 0x000560, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_HasAuthority_ReturnValue) == 0x000561, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_real_Variable_3) == 0x000564, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable_3) == 0x000568, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_4) == 0x000570, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_CacheAchievements_ReturnValue) == 0x000578, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_CacheAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_WriteAchievementProgress_ReturnValue) == 0x000580, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_WriteAchievementProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue) == 0x000588, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_1) == 0x000589, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_LoadGameFromSlot_ReturnValue_1) == 0x000590, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_LoadGameFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_6) == 0x000598, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_6) == 0x0005A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_6) == 0x0005A4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_13) == 0x0005A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_5) == 0x0005B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_CacheAchievements_ReturnValue_1) == 0x0005C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_CacheAchievements_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_WriteAchievementProgress_ReturnValue_1) == 0x0005C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_WriteAchievementProgress_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_2) == 0x0005D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_3) == 0x0005D1, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_6) == 0x0005D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_CacheAchievements_ReturnValue_2) == 0x0005E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_CacheAchievements_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_WriteAchievementProgress_ReturnValue_2) == 0x0005E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_WriteAchievementProgress_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_4) == 0x0005F0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_5) == 0x0005F1, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Victim_Player_State_1) == 0x0005F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Victim_Player_State_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_10) == 0x000600, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP_4) == 0x000608, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_14) == 0x000610, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable_4) == 0x000614, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerName_ReturnValue_2) == 0x000618, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_StringToText_ReturnValue) == 0x000628, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000640, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_7) == 0x000650, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Title_Number) == 0x000658, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Title_Number' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_HatNumber) == 0x00065C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_HatNumber' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Skin_Number) == 0x000660, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Skin_Number' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Weapon_1) == 0x000664, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Weapon_2) == 0x000668, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Weapon_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Pant) == 0x000670, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Pant' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_CacheAchievements_ReturnValue_3) == 0x000680, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_CacheAchievements_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_6) == 0x000688, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_WriteAchievementProgress_ReturnValue_3) == 0x000690, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_WriteAchievementProgress_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenAchievementName_7) == 0x000698, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenAchievementName_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenProgress_7) == 0x0006A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenProgress_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_WrittenUserTag_7) == 0x0006A4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_WrittenUserTag_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_IsValid_ReturnValue_7) == 0x0006A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Loop_Counter_Variable_6) == 0x0006AC, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_4) == 0x0006B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_IntInt_ReturnValue_11) == 0x0006B4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Array_Index_Variable_6) == 0x0006B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_4) == 0x0006C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetDisplayName_ReturnValue_1) == 0x0006C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Victim_Player_State) == 0x0006D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Victim_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_OwningPlayer) == 0x0006E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_OwningPlayer' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Team) == 0x0006E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Killed_player_1) == 0x0006F0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Killed_player_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_3) == 0x000708, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_15) == 0x000710, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_14) == 0x000714, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_8) == 0x000728, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerName_PlayerName) == 0x000730, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerName_PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_9) == 0x000740, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000748, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_4) == 0x000760, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_16) == 0x000768, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Target) == 0x000770, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Victim) == 0x000778, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Victim' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Killed_player) == 0x000780, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Killed_player' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_DeltaSeconds) == 0x000798, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, Temp_int_Variable_5) == 0x00079C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_PantType) == 0x0007A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_PantType' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_10) == 0x0007B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_PlayerName_1) == 0x0007B8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_PlayerName_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Kick__1) == 0x0007C8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Kick__1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Text_1) == 0x0007D0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_5) == 0x0007E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_17) == 0x0007F0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue_2) == 0x0007F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Info_BPI) == 0x000800, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Info_BPI' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_18) == 0x000810, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_PlayerName) == 0x000818, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Kick_) == 0x000828, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Kick_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Text) == 0x000830, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_ThoseWhoKnow) == 0x000848, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_ThoseWhoKnow' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Player_State_3) == 0x000860, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Player_State_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_TheirVote_1) == 0x000868, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_TheirVote_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_TheirVote) == 0x000869, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_TheirVote' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Player_State_2) == 0x000870, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Player_State_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue_3) == 0x000878, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Info_BPI_1) == 0x000880, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Info_BPI_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_19) == 0x000890, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Ay) == 0x000894, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Ay' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_Event_Ny) == 0x000898, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_Event_Ny' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_State_BP_5) == 0x0008A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_State_BP_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_20) == 0x0008A8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerName_ReturnValue_3) == 0x0008B0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0008C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_11) == 0x0008D8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_6) == 0x0008E0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_21) == 0x0008E8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ay_1) == 0x0008EC, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ay_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ny_1) == 0x0008F0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ny_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ay) == 0x0008F4, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ay' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ny) == 0x0008F8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ny' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Player_State_1) == 0x000900, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Player_State_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Player_State) == 0x000908, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue_4) == 0x000910, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Counter_1) == 0x000918, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Counter_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ongoing_vote__1) == 0x00091C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ongoing_vote__1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_3) == 0x000920, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_22) == 0x000928, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Counter) == 0x00092C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Counter' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Ongoing_vote_) == 0x000930, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Ongoing_vote_' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameState_ReturnValue_2) == 0x000938, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_12) == 0x000940, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_7) == 0x000948, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_7' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_23) == 0x000950, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_5) == 0x000958, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_HasAuthority_ReturnValue_1) == 0x000960, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_5) == 0x000964, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_5) == 0x000968, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_LoadGameFromSlot_ReturnValue_2) == 0x000970, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_LoadGameFromSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsSave_Items) == 0x000978, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsSave_Items' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_24) == 0x000980, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Spawn_Transform_Location_1) == 0x000988, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Spawn_Transform_Location_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CustomEvent_Spawn_Transform_Location) == 0x0009A0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_MakeTransform_ReturnValue) == 0x0009C0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000A20, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000A28, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000A30, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPawn_ReturnValue) == 0x000A38, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsTrain_Gus_Player_1) == 0x000A40, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsTrain_Gus_Player_1' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_25) == 0x000A48, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsCannon) == 0x000A50, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsCannon' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_26) == 0x000A58, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000A59, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000A5A, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_BooleanOR_ReturnValue) == 0x000A5B, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_CreateDelegate_OutputDelegate_15) == 0x000A5C, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameMode_ReturnValue_5) == 0x000A70, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameMode_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetGameState_ReturnValue_3) == 0x000A78, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_4) == 0x000A80, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsBP_Third_Person_Game_Mode_4' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_27) == 0x000A88, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Get_Item_6) == 0x000A90, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Array_Length_ReturnValue_6) == 0x000A98, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_GetPlayerController_ReturnValue_13) == 0x000AA0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_GetPlayerController_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, CallFunc_Less_IntInt_ReturnValue_6) == 0x000AA8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_AsPlayer_Controller_BP_8) == 0x000AB0, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_AsPlayer_Controller_BP_8' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP, K2Node_DynamicCast_bSuccess_28) == 0x000AB8, "Member 'PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Dommin
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_Dommin final
{
public:
	class APlayerState*                           Dommed;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class APlayerState*                     Dommed_by;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Dommin) == 0x000008, "Wrong alignment on PlayerStateBP_C_Dommin");
static_assert(sizeof(PlayerStateBP_C_Dommin) == 0x000010, "Wrong size on PlayerStateBP_C_Dommin");
static_assert(offsetof(PlayerStateBP_C_Dommin, Dommed) == 0x000000, "Member 'PlayerStateBP_C_Dommin::Dommed' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Dommin, Dommed_by) == 0x000008, "Member 'PlayerStateBP_C_Dommin::Dommed_by' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Client Change Dom
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Client_Change_Dom final
{
public:
	const class APlayerState*                     Me;                                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Client_Change_Dom) == 0x000008, "Wrong alignment on PlayerStateBP_C_Client_Change_Dom");
static_assert(sizeof(PlayerStateBP_C_Client_Change_Dom) == 0x000008, "Wrong size on PlayerStateBP_C_Client_Change_Dom");
static_assert(offsetof(PlayerStateBP_C_Client_Change_Dom, Me) == 0x000000, "Member 'PlayerStateBP_C_Client_Change_Dom::Me' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Change Title
// 0x0004 (0x0004 - 0x0000)
struct PlayerStateBP_C_Change_Title final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Change_Title) == 0x000004, "Wrong alignment on PlayerStateBP_C_Change_Title");
static_assert(sizeof(PlayerStateBP_C_Change_Title) == 0x000004, "Wrong size on PlayerStateBP_C_Change_Title");
static_assert(offsetof(PlayerStateBP_C_Change_Title, NewParam) == 0x000000, "Member 'PlayerStateBP_C_Change_Title::NewParam' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Change Skin
// 0x0004 (0x0004 - 0x0000)
struct PlayerStateBP_C_Change_Skin final
{
public:
	int32                                         Skin_Number_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Change_Skin) == 0x000004, "Wrong alignment on PlayerStateBP_C_Change_Skin");
static_assert(sizeof(PlayerStateBP_C_Change_Skin) == 0x000004, "Wrong size on PlayerStateBP_C_Change_Skin");
static_assert(offsetof(PlayerStateBP_C_Change_Skin, Skin_Number_0) == 0x000000, "Member 'PlayerStateBP_C_Change_Skin::Skin_Number_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Change Pant
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateBP_C_Change_Pant final
{
public:
	class FString                                 PantType;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Change_Pant) == 0x000008, "Wrong alignment on PlayerStateBP_C_Change_Pant");
static_assert(sizeof(PlayerStateBP_C_Change_Pant) == 0x000010, "Wrong size on PlayerStateBP_C_Change_Pant");
static_assert(offsetof(PlayerStateBP_C_Change_Pant, PantType) == 0x000000, "Member 'PlayerStateBP_C_Change_Pant::PantType' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Change Hat Multicast
// 0x0004 (0x0004 - 0x0000)
struct PlayerStateBP_C_Change_Hat_Multicast final
{
public:
	int32                                         HatNumber_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Change_Hat_Multicast) == 0x000004, "Wrong alignment on PlayerStateBP_C_Change_Hat_Multicast");
static_assert(sizeof(PlayerStateBP_C_Change_Hat_Multicast) == 0x000004, "Wrong size on PlayerStateBP_C_Change_Hat_Multicast");
static_assert(offsetof(PlayerStateBP_C_Change_Hat_Multicast, HatNumber_0) == 0x000000, "Member 'PlayerStateBP_C_Change_Hat_Multicast::HatNumber_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Change Hat
// 0x0004 (0x0004 - 0x0000)
struct PlayerStateBP_C_Change_Hat final
{
public:
	int32                                         Hat;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Change_Hat) == 0x000004, "Wrong alignment on PlayerStateBP_C_Change_Hat");
static_assert(sizeof(PlayerStateBP_C_Change_Hat) == 0x000004, "Wrong size on PlayerStateBP_C_Change_Hat");
static_assert(offsetof(PlayerStateBP_C_Change_Hat, Hat) == 0x000000, "Member 'PlayerStateBP_C_Change_Hat::Hat' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Ask for vote info server
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Ask_for_vote_info_server final
{
public:
	class APlayerState*                           Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Ask_for_vote_info_server) == 0x000008, "Wrong alignment on PlayerStateBP_C_Ask_for_vote_info_server");
static_assert(sizeof(PlayerStateBP_C_Ask_for_vote_info_server) == 0x000008, "Wrong size on PlayerStateBP_C_Ask_for_vote_info_server");
static_assert(offsetof(PlayerStateBP_C_Ask_for_vote_info_server, Player_State) == 0x000000, "Member 'PlayerStateBP_C_Ask_for_vote_info_server::Player_State' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Ask for vote info
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Ask_for_vote_info final
{
public:
	class APlayerState*                           Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Ask_for_vote_info) == 0x000008, "Wrong alignment on PlayerStateBP_C_Ask_for_vote_info");
static_assert(sizeof(PlayerStateBP_C_Ask_for_vote_info) == 0x000008, "Wrong size on PlayerStateBP_C_Ask_for_vote_info");
static_assert(offsetof(PlayerStateBP_C_Ask_for_vote_info, Player_State) == 0x000000, "Member 'PlayerStateBP_C_Ask_for_vote_info::Player_State' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Add Kill
// 0x0030 (0x0030 - 0x0000)
struct PlayerStateBP_C_Add_Kill final
{
public:
	int32                                         Team_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      Damage_Type;                                       // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Killed_player;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Add_Kill) == 0x000008, "Wrong alignment on PlayerStateBP_C_Add_Kill");
static_assert(sizeof(PlayerStateBP_C_Add_Kill) == 0x000030, "Wrong size on PlayerStateBP_C_Add_Kill");
static_assert(offsetof(PlayerStateBP_C_Add_Kill, Team_0) == 0x000000, "Member 'PlayerStateBP_C_Add_Kill::Team_0' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Add_Kill, Victim) == 0x000008, "Member 'PlayerStateBP_C_Add_Kill::Victim' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Add_Kill, Damage_Type) == 0x000010, "Member 'PlayerStateBP_C_Add_Kill::Damage_Type' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Add_Kill, Killed_player) == 0x000018, "Member 'PlayerStateBP_C_Add_Kill::Killed_player' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Add Death
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateBP_C_Add_Death final
{
public:
	class APlayerState*                           Killer_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateBP_C_Add_Death) == 0x000008, "Wrong alignment on PlayerStateBP_C_Add_Death");
static_assert(sizeof(PlayerStateBP_C_Add_Death) == 0x000008, "Wrong size on PlayerStateBP_C_Add_Death");
static_assert(offsetof(PlayerStateBP_C_Add_Death, Killer_0) == 0x000000, "Member 'PlayerStateBP_C_Add_Death::Killer_0' has a wrong offset!");

// Function PlayerStateBP.PlayerStateBP_C.Add Chungus to fart
// 0x0028 (0x0028 - 0x0000)
struct PlayerStateBP_C_Add_Chungus_to_fart final
{
public:
	class APlayerControllerBP_C*                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Killed_player;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerStateBP_C_Add_Chungus_to_fart) == 0x000008, "Wrong alignment on PlayerStateBP_C_Add_Chungus_to_fart");
static_assert(sizeof(PlayerStateBP_C_Add_Chungus_to_fart) == 0x000028, "Wrong size on PlayerStateBP_C_Add_Chungus_to_fart");
static_assert(offsetof(PlayerStateBP_C_Add_Chungus_to_fart, Target) == 0x000000, "Member 'PlayerStateBP_C_Add_Chungus_to_fart::Target' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Add_Chungus_to_fart, Victim) == 0x000008, "Member 'PlayerStateBP_C_Add_Chungus_to_fart::Victim' has a wrong offset!");
static_assert(offsetof(PlayerStateBP_C_Add_Chungus_to_fart, Killed_player) == 0x000010, "Member 'PlayerStateBP_C_Add_Chungus_to_fart::Killed_player' has a wrong offset!");

}

