#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuGusAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MenuGusAnimBP.MenuGusAnimBP_C
// 0x0330 (0x0680 - 0x0350)
class UMenuGusAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03D8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0418(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0438(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0478(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0498(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0550(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0630(0x0040)()
	bool                                          Two_handed_anim_;                                  // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Holding_weapon_right_now_;                         // 0x0671(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flintlock_Equipped;                                // 0x0672(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EOR_Equipped;                                      // 0x0673(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blunderbuss_Equipped;                              // 0x0674(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MenuGusAnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuGusAnimBP_C">();
	}
	static class UMenuGusAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuGusAnimBP_C>();
	}
};
static_assert(alignof(UMenuGusAnimBP_C) == 0x000010, "Wrong alignment on UMenuGusAnimBP_C");
static_assert(sizeof(UMenuGusAnimBP_C) == 0x000680, "Wrong size on UMenuGusAnimBP_C");
static_assert(offsetof(UMenuGusAnimBP_C, UberGraphFrame) == 0x000350, "Member 'UMenuGusAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UMenuGusAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UMenuGusAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_Root) == 0x000368, "Member 'UMenuGusAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000388, "Member 'UMenuGusAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_TransitionResult) == 0x0003B0, "Member 'UMenuGusAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0003D8, "Member 'UMenuGusAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_StateResult_1) == 0x000418, "Member 'UMenuGusAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000438, "Member 'UMenuGusAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_StateResult) == 0x000478, "Member 'UMenuGusAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_StateMachine) == 0x000498, "Member 'UMenuGusAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000550, "Member 'UMenuGusAnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000630, "Member 'UMenuGusAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, Two_handed_anim_) == 0x000670, "Member 'UMenuGusAnimBP_C::Two_handed_anim_' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, Holding_weapon_right_now_) == 0x000671, "Member 'UMenuGusAnimBP_C::Holding_weapon_right_now_' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, Flintlock_Equipped) == 0x000672, "Member 'UMenuGusAnimBP_C::Flintlock_Equipped' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, EOR_Equipped) == 0x000673, "Member 'UMenuGusAnimBP_C::EOR_Equipped' has a wrong offset!");
static_assert(offsetof(UMenuGusAnimBP_C, Blunderbuss_Equipped) == 0x000674, "Member 'UMenuGusAnimBP_C::Blunderbuss_Equipped' has a wrong offset!");

}

