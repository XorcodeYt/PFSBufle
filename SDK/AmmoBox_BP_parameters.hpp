#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmmoBox_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AmmoBox_BP.AmmoBox_BP_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct AmmoBox_BP_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoBox_BP_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on AmmoBox_BP_C_ReceiveAnyDamage");
static_assert(sizeof(AmmoBox_BP_C_ReceiveAnyDamage) == 0x000020, "Wrong size on AmmoBox_BP_C_ReceiveAnyDamage");
static_assert(offsetof(AmmoBox_BP_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'AmmoBox_BP_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'AmmoBox_BP_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'AmmoBox_BP_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'AmmoBox_BP_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function AmmoBox_BP.AmmoBox_BP_C.On Interact
// 0x0010 (0x0010 - 0x0000)
struct AmmoBox_BP_C_On_Interact final
{
public:
	class ATrainGusPlayer_C*                      User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inside_;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoBox_BP_C_On_Interact) == 0x000008, "Wrong alignment on AmmoBox_BP_C_On_Interact");
static_assert(sizeof(AmmoBox_BP_C_On_Interact) == 0x000010, "Wrong size on AmmoBox_BP_C_On_Interact");
static_assert(offsetof(AmmoBox_BP_C_On_Interact, User) == 0x000000, "Member 'AmmoBox_BP_C_On_Interact::User' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_On_Interact, Inside_) == 0x000008, "Member 'AmmoBox_BP_C_On_Interact::Inside_' has a wrong offset!");

// Function AmmoBox_BP.AmmoBox_BP_C.ExecuteUbergraph_AmmoBox_BP
// 0x0050 (0x0050 - 0x0000)
struct AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_Event_User;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Inside_;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP) == 0x000008, "Wrong alignment on AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP");
static_assert(sizeof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP) == 0x000050, "Wrong size on AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, EntryPoint) == 0x000000, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_User) == 0x000008, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_User' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_Inside_) == 0x000010, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_Inside_' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, CallFunc_VLerp_ReturnValue) == 0x000018, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_Damage) == 0x000030, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_DamageType) == 0x000038, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_InstigatedBy) == 0x000040, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP, K2Node_Event_DamageCauser) == 0x000048, "Member 'AmmoBox_BP_C_ExecuteUbergraph_AmmoBox_BP::K2Node_Event_DamageCauser' has a wrong offset!");

}

