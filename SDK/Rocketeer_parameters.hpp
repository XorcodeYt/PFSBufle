#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Rocketeer

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Rocketeer.Rocketeer_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct Rocketeer_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_UserConstructionScript) == 0x000001, "Wrong alignment on Rocketeer_C_UserConstructionScript");
static_assert(sizeof(Rocketeer_C_UserConstructionScript) == 0x000001, "Wrong size on Rocketeer_C_UserConstructionScript");
static_assert(offsetof(Rocketeer_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'Rocketeer_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.Stop sprint
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C_Stop_sprint final
{
public:
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_Stop_sprint) == 0x000004, "Wrong alignment on Rocketeer_C_Stop_sprint");
static_assert(sizeof(Rocketeer_C_Stop_sprint) == 0x000004, "Wrong size on Rocketeer_C_Stop_sprint");
static_assert(offsetof(Rocketeer_C_Stop_sprint, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x000000, "Member 'Rocketeer_C_Stop_sprint::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.Start sprint
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C_Start_sprint final
{
public:
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_Start_sprint) == 0x000004, "Wrong alignment on Rocketeer_C_Start_sprint");
static_assert(sizeof(Rocketeer_C_Start_sprint) == 0x000004, "Wrong size on Rocketeer_C_Start_sprint");
static_assert(offsetof(Rocketeer_C_Start_sprint, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x000000, "Member 'Rocketeer_C_Start_sprint::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_ReceiveTick) == 0x000004, "Wrong alignment on Rocketeer_C_ReceiveTick");
static_assert(sizeof(Rocketeer_C_ReceiveTick) == 0x000004, "Wrong size on Rocketeer_C_ReceiveTick");
static_assert(offsetof(Rocketeer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Rocketeer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Rocketeer_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Rocketeer_C_ReceiveAnyDamage");
static_assert(sizeof(Rocketeer_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Rocketeer_C_ReceiveAnyDamage");
static_assert(offsetof(Rocketeer_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Rocketeer_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Rocketeer_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Rocketeer_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Rocketeer_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct Rocketeer_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Rocketeer_C_OnLanded) == 0x000008, "Wrong alignment on Rocketeer_C_OnLanded");
static_assert(sizeof(Rocketeer_C_OnLanded) == 0x0000E8, "Wrong size on Rocketeer_C_OnLanded");
static_assert(offsetof(Rocketeer_C_OnLanded, Hit) == 0x000000, "Member 'Rocketeer_C_OnLanded::Hit' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpTchEvt_K2Node_InputTouchEvent_0
// 0x0020 (0x0020 - 0x0000)
struct Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0 final
{
public:
	ETouchIndex                                   FingerIndex_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0) == 0x000008, "Wrong alignment on Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0");
static_assert(sizeof(Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0) == 0x000020, "Wrong size on Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0");
static_assert(offsetof(Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0, FingerIndex_0) == 0x000000, "Member 'Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0::FingerIndex_0' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0, Location) == 0x000008, "Member 'Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0::Location' has a wrong offset!");

// Function Rocketeer.Rocketeer_C. Left Mouse_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2");
static_assert(sizeof(Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2");
static_assert(offsetof(Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function Rocketeer.Rocketeer_C. Left_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C__Left_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C__Left_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on Rocketeer_C__Left_K2Node_InputAxisEvent_1");
static_assert(sizeof(Rocketeer_C__Left_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on Rocketeer_C__Left_K2Node_InputAxisEvent_1");
static_assert(offsetof(Rocketeer_C__Left_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'Rocketeer_C__Left_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function Rocketeer.Rocketeer_C. Backward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C__Backward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C__Backward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on Rocketeer_C__Backward_K2Node_InputAxisEvent_0");
static_assert(sizeof(Rocketeer_C__Backward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on Rocketeer_C__Backward_K2Node_InputAxisEvent_0");
static_assert(offsetof(Rocketeer_C__Backward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'Rocketeer_C__Backward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function Rocketeer.Rocketeer_C. Down Mouse_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3");
static_assert(sizeof(Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3");
static_assert(offsetof(Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_Sprint_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1");
static_assert(sizeof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1");
static_assert(offsetof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_Sprint_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0");
static_assert(sizeof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0");
static_assert(offsetof(Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_P_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0");
static_assert(sizeof(Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0");
static_assert(offsetof(Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(sizeof(Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(offsetof(Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.InpActEvt_F7_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2");
static_assert(sizeof(Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2");
static_assert(offsetof(Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.ExecuteUbergraph_Rocketeer
// 0x0690 (0x0690 - 0x0000)
struct Rocketeer_C_ExecuteUbergraph_Rocketeer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0060(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0180(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1; // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDgus_C*                              CallFunc_Create_ReturnValue;                       // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0250(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0390(0x0018)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x03E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0400(0x0018)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex;                // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location;                   // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0468(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsMenuNew_C*                      CallFunc_Create_ReturnValue_1;                     // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0500(0x0060)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_575[0x3];                                      // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595[0xB];                                      // 0x0595(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x05A0(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default_2;                           // 0x0600(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlintlock_Projectile_Client_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_WideningCast;                // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rocketeer_C_ExecuteUbergraph_Rocketeer) == 0x000010, "Wrong alignment on Rocketeer_C_ExecuteUbergraph_Rocketeer");
static_assert(sizeof(Rocketeer_C_ExecuteUbergraph_Rocketeer) == 0x000690, "Wrong size on Rocketeer_C_ExecuteUbergraph_Rocketeer");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, EntryPoint) == 0x000000, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Variable) == 0x000004, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputKeyEvent_Key) == 0x000008, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputKeyEvent_Key_2) == 0x000020, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Montage_Play_ReturnValue) == 0x000058, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_Hit) == 0x000060, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000160, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_struct_Variable) == 0x000168, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputActionEvent_Key) == 0x000180, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000198, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1) == 0x000199, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_int_Variable) == 0x00019C, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0001A8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Create_ReturnValue) == 0x0001C0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_CustomEvent_Rotation_1) == 0x0001C8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetRightVector_ReturnValue) == 0x0001E0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_CustomEvent_Rotation) == 0x0001F8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_BreakRotator_Roll) == 0x000210, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_BreakRotator_Pitch) == 0x000214, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_BreakRotator_Yaw) == 0x000218, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000220, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_MakeRotator_ReturnValue) == 0x000238, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000250, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetForwardVector_ReturnValue) == 0x000338, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetActorRightVector_ReturnValue) == 0x000350, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000368, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Montage_Play_ReturnValue_1) == 0x000370, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Has_Been_Initd_Variable) == 0x000374, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_IsClosed_Variable) == 0x000375, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetActorForwardVector_ReturnValue) == 0x000378, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputActionEvent_Key_1) == 0x000390, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0003A8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003C0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0003D8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Montage_Play_ReturnValue_2) == 0x0003E0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_Damage) == 0x0003E4, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_DamageType) == 0x0003E8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_InstigatedBy) == 0x0003F0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_DamageCauser) == 0x0003F8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputKeyEvent_Key_1) == 0x000400, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Array_Get_Item) == 0x000418, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_ActorHasTag_ReturnValue) == 0x000420, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputTouchEvent_FingerIndex) == 0x000421, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputTouchEvent_FingerIndex' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputTouchEvent_Location) == 0x000428, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputTouchEvent_Location' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000440, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000448, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000460, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputActionEvent_Key_2) == 0x000468, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000480, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Variable_1) == 0x000498, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_GetPlayerController_ReturnValue) == 0x0004A0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Select_Default) == 0x0004A8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Create_ReturnValue_1) == 0x0004C0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0004C8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Add_VectorVector_ReturnValue) == 0x0004E0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Has_Been_Initd_Variable_1) == 0x0004F8, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_MakeTransform_ReturnValue) == 0x000500, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Has_Been_Initd_Variable_2) == 0x000560, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputAxisEvent_AxisValue_3) == 0x000564, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputAxisEvent_AxisValue_2) == 0x000568, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputAxisEvent_AxisValue_1) == 0x00056C, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_InputAxisEvent_AxisValue) == 0x000570, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_Variable_2) == 0x000574, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Select_Default_1) == 0x000578, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Event_DeltaSeconds) == 0x000590, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_IsClosed_Variable_1) == 0x000594, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_struct_Variable_1) == 0x0005A0, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, K2Node_Select_Default_2) == 0x000600, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000660, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000668, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, Temp_bool_IsClosed_Variable_2) == 0x000670, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_MakeVector_Z_WideningCast) == 0x000678, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_MakeVector_Z_WideningCast' has a wrong offset!");
static_assert(offsetof(Rocketeer_C_ExecuteUbergraph_Rocketeer, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x000680, "Member 'Rocketeer_C_ExecuteUbergraph_Rocketeer::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.Correct pitch multicast
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_Correct_pitch_multicast final
{
public:
	struct FRotator                               Rotation_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rocketeer_C_Correct_pitch_multicast) == 0x000008, "Wrong alignment on Rocketeer_C_Correct_pitch_multicast");
static_assert(sizeof(Rocketeer_C_Correct_pitch_multicast) == 0x000018, "Wrong size on Rocketeer_C_Correct_pitch_multicast");
static_assert(offsetof(Rocketeer_C_Correct_pitch_multicast, Rotation_0) == 0x000000, "Member 'Rocketeer_C_Correct_pitch_multicast::Rotation_0' has a wrong offset!");

// Function Rocketeer.Rocketeer_C.Correct pitch
// 0x0018 (0x0018 - 0x0000)
struct Rocketeer_C_Correct_pitch final
{
public:
	struct FRotator                               Rotation_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rocketeer_C_Correct_pitch) == 0x000008, "Wrong alignment on Rocketeer_C_Correct_pitch");
static_assert(sizeof(Rocketeer_C_Correct_pitch) == 0x000018, "Wrong size on Rocketeer_C_Correct_pitch");
static_assert(offsetof(Rocketeer_C_Correct_pitch, Rotation_0) == 0x000000, "Member 'Rocketeer_C_Correct_pitch::Rotation_0' has a wrong offset!");

}

