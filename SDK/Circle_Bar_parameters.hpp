#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Circle_Bar

#include "Basic.hpp"


namespace SDK::Params
{

// Function Circle_Bar.Circle_Bar_C.Set percent
// 0x0020 (0x0020 - 0x0000)
struct Circle_Bar_C_Set_percent final
{
public:
	double                                        Percent_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_NarrowingCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Circle_Bar_C_Set_percent) == 0x000008, "Wrong alignment on Circle_Bar_C_Set_percent");
static_assert(sizeof(Circle_Bar_C_Set_percent) == 0x000020, "Wrong size on Circle_Bar_C_Set_percent");
static_assert(offsetof(Circle_Bar_C_Set_percent, Percent_0) == 0x000000, "Member 'Circle_Bar_C_Set_percent::Percent_0' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_Set_percent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Circle_Bar_C_Set_percent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_Set_percent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'Circle_Bar_C_Set_percent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_Set_percent, CallFunc_SetScalarParameterValue_Value_NarrowingCast) == 0x000018, "Member 'Circle_Bar_C_Set_percent::CallFunc_SetScalarParameterValue_Value_NarrowingCast' has a wrong offset!");

// Function Circle_Bar.Circle_Bar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Circle_Bar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Circle_Bar_C_PreConstruct) == 0x000001, "Wrong alignment on Circle_Bar_C_PreConstruct");
static_assert(sizeof(Circle_Bar_C_PreConstruct) == 0x000001, "Wrong size on Circle_Bar_C_PreConstruct");
static_assert(offsetof(Circle_Bar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Circle_Bar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Circle_Bar.Circle_Bar_C.ExecuteUbergraph_Circle_Bar
// 0x0030 (0x0030 - 0x0000)
struct Circle_Bar_C_ExecuteUbergraph_Circle_Bar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACannon_C*                              K2Node_DynamicCast_AsCannon;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar) == 0x000008, "Wrong alignment on Circle_Bar_C_ExecuteUbergraph_Circle_Bar");
static_assert(sizeof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar) == 0x000030, "Wrong size on Circle_Bar_C_ExecuteUbergraph_Circle_Bar");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, EntryPoint) == 0x000000, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, K2Node_DynamicCast_AsCannon) == 0x000010, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::K2Node_DynamicCast_AsCannon' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000020, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Circle_Bar_C_ExecuteUbergraph_Circle_Bar, K2Node_Event_IsDesignTime) == 0x000029, "Member 'Circle_Bar_C_ExecuteUbergraph_Circle_Bar::K2Node_Event_IsDesignTime' has a wrong offset!");

}

