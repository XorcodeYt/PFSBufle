#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OptionsMenuNew.OptionsMenuNew_C
// 0x0128 (0x03B8 - 0x0290)
class UOptionsMenuNew_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ApplyButton;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_0;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              DamageNumbers;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                FovSlider;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        HitmarkerSize;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        HitmarkerType;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertXCheck;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertYCheck;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MainSensSlider;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                PistolBussSensSlider;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                SniperSensSlider;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_127;                                     // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              TextChatTickBox;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              TextChatTickBox_1;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      Char_REF;                                          // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BFOV;                                              // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sens2;                                             // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARocketeer_C*                           Char_REF_0;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         SaverSubClass;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Game_save1;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USaveGame*                              SaveOptions;                                       // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Load_Settings;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Sens;                                              // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sniper_Sens;                                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kill_Confirmed_Widget;                             // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Hitmarker_Size;                                    // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Hitmarker_Type;                                    // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Lumin;                                             // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Blunder_Pistol_Sens;                               // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertX;                                           // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertY;                                           // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageNumberBool;                                  // 0x03B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Text_Chat;                                         // 0x03B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Checked;                                        // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_Aiming_FOV_;                                // 0x03B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSens(float InValue);
	void Update_Widget(double Field_Of_Vision);
	class FText SniperSensSliderValue();
	void Sniper_Sens_Updateinator(float InValue);
	void SetCheckbox();
	class FText SensSliderValue();
	float SensSliderPlacement();
	void Save_Hitmarker_Settings();
	void Save_game(double Field_Of_Vision, double Mouse_sens, double Snipersens, double BlunderPistolSens, bool Kill_Confirmed_Widget_0, const class FString& Hitmarker_Size_0, const class FString& Hitmarker_Type_0, bool Lumin_0, bool InvertX_0, bool InvertY_0, bool DamageNumbers_0, bool Text_Chat_0, bool Remove_Aiming_FOV__0);
	class FText PistolBussSensSliderValue();
	void Pistol_Buss_Updateinator(float InValue);
	void Load_game(double* Field_Of_Vision, double* Mouse_sens, double* Sniper_Sens_0, double* BlunderPistolSens, bool* Kill_Confirmed_Widget_0, bool* Lumin_0, class FString* Hitmarker_Size_0, class FString* Hitmarker_Type_0, bool* InvertX_0, bool* InvertY_0, bool* DamageNumbers_0, bool* Text_Chat_0, bool* Remove_Aiming_FOV__0);
	class FText GetText_2();
	class FText GetText_1();
	class FText GetText_0();
	ECheckBoxState GetCheckedState_0();
	ECheckBoxState Get_TextChatTickBox_CheckedState_0();
	void Get_SniperSensSlider_Value_0(float InValue);
	ECheckBoxState Get_InvertYCheck_CheckedState_0();
	ECheckBoxState Get_InvertXCheck_CheckedState_0();
	ECheckBoxState Get_DamageNumbers_CheckedState_0();
	ECheckBoxState Get_ADS_Aim_CheckBox();
	void ExecuteUbergraph_OptionsMenuNew(int32 EntryPoint);
	void Destruct();
	void Construct();
	void BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__OptionsMenuNew_ApplyButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OptionsMenuNew_C">();
	}
	static class UOptionsMenuNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsMenuNew_C>();
	}
};
static_assert(alignof(UOptionsMenuNew_C) == 0x000008, "Wrong alignment on UOptionsMenuNew_C");
static_assert(sizeof(UOptionsMenuNew_C) == 0x0003B8, "Wrong size on UOptionsMenuNew_C");
static_assert(offsetof(UOptionsMenuNew_C, UberGraphFrame) == 0x000290, "Member 'UOptionsMenuNew_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, ApplyButton) == 0x000298, "Member 'UOptionsMenuNew_C::ApplyButton' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, CheckBox_0) == 0x0002A0, "Member 'UOptionsMenuNew_C::CheckBox_0' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, DamageNumbers) == 0x0002A8, "Member 'UOptionsMenuNew_C::DamageNumbers' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, FovSlider) == 0x0002B0, "Member 'UOptionsMenuNew_C::FovSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, HitmarkerSize) == 0x0002B8, "Member 'UOptionsMenuNew_C::HitmarkerSize' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, HitmarkerType) == 0x0002C0, "Member 'UOptionsMenuNew_C::HitmarkerType' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, InvertXCheck) == 0x0002C8, "Member 'UOptionsMenuNew_C::InvertXCheck' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, InvertYCheck) == 0x0002D0, "Member 'UOptionsMenuNew_C::InvertYCheck' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, MainSensSlider) == 0x0002D8, "Member 'UOptionsMenuNew_C::MainSensSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, PistolBussSensSlider) == 0x0002E0, "Member 'UOptionsMenuNew_C::PistolBussSensSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, SniperSensSlider) == 0x0002E8, "Member 'UOptionsMenuNew_C::SniperSensSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextBlock) == 0x0002F0, "Member 'UOptionsMenuNew_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextBlock_2) == 0x0002F8, "Member 'UOptionsMenuNew_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextBlock_3) == 0x000300, "Member 'UOptionsMenuNew_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextBlock_127) == 0x000308, "Member 'UOptionsMenuNew_C::TextBlock_127' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextChatTickBox) == 0x000310, "Member 'UOptionsMenuNew_C::TextChatTickBox' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, TextChatTickBox_1) == 0x000318, "Member 'UOptionsMenuNew_C::TextChatTickBox_1' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Char_REF) == 0x000320, "Member 'UOptionsMenuNew_C::Char_REF' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, BFOV) == 0x000328, "Member 'UOptionsMenuNew_C::BFOV' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Sens2) == 0x000330, "Member 'UOptionsMenuNew_C::Sens2' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Char_REF_0) == 0x000338, "Member 'UOptionsMenuNew_C::Char_REF_0' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, SaverSubClass) == 0x000340, "Member 'UOptionsMenuNew_C::SaverSubClass' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Game_save1) == 0x000348, "Member 'UOptionsMenuNew_C::Game_save1' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, SaveOptions) == 0x000358, "Member 'UOptionsMenuNew_C::SaveOptions' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Load_Settings) == 0x000360, "Member 'UOptionsMenuNew_C::Load_Settings' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Sens) == 0x000370, "Member 'UOptionsMenuNew_C::Sens' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Sniper_Sens) == 0x000374, "Member 'UOptionsMenuNew_C::Sniper_Sens' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Kill_Confirmed_Widget) == 0x000378, "Member 'UOptionsMenuNew_C::Kill_Confirmed_Widget' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Hitmarker_Size) == 0x000380, "Member 'UOptionsMenuNew_C::Hitmarker_Size' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Hitmarker_Type) == 0x000390, "Member 'UOptionsMenuNew_C::Hitmarker_Type' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Lumin) == 0x0003A0, "Member 'UOptionsMenuNew_C::Lumin' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Blunder_Pistol_Sens) == 0x0003A8, "Member 'UOptionsMenuNew_C::Blunder_Pistol_Sens' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, InvertX) == 0x0003B0, "Member 'UOptionsMenuNew_C::InvertX' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, InvertY) == 0x0003B1, "Member 'UOptionsMenuNew_C::InvertY' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, DamageNumberBool) == 0x0003B2, "Member 'UOptionsMenuNew_C::DamageNumberBool' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Text_Chat) == 0x0003B3, "Member 'UOptionsMenuNew_C::Text_Chat' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Is_Checked) == 0x0003B4, "Member 'UOptionsMenuNew_C::Is_Checked' has a wrong offset!");
static_assert(offsetof(UOptionsMenuNew_C, Remove_Aiming_FOV_) == 0x0003B5, "Member 'UOptionsMenuNew_C::Remove_Aiming_FOV_' has a wrong offset!");

}

