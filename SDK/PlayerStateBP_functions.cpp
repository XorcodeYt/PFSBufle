#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStateBP

#include "Basic.hpp"

#include "PlayerStateBP_classes.hpp"
#include "PlayerStateBP_parameters.hpp"


namespace SDK
{

// Function PlayerStateBP.PlayerStateBP_C.VoteUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::VoteUpdate(int32 Ay_0, int32 Ny_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "VoteUpdate");

	Params::PlayerStateBP_C_VoteUpdate Parms{};

	Parms.Ay_0 = Ay_0;
	Parms.Ny_0 = Ny_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Vote Update Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Vote_Update_Server(int32 Ay_0, int32 Ny_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Vote Update Server");

	Params::PlayerStateBP_C_Vote_Update_Server Parms{};

	Parms.Ay_0 = Ay_0;
	Parms.Ny_0 = Ny_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Vote Update Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Vote_Update_Client(int32 Ay_0, int32 Ny_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Vote Update Client");

	Params::PlayerStateBP_C_Vote_Update_Client Parms{};

	Parms.Ay_0 = Ay_0;
	Parms.Ny_0 = Ny_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.UpdateKickFart
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::UpdateKickFart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "UpdateKickFart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Update TDM Score
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Update_TDM_Score()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Update TDM Score");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Update Kill
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Update_Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Update Kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Time Start
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Time_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Time Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Tell us fella
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATrainGusPlayer_C*                Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Tell_us_fella(class ATrainGusPlayer_C* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Tell us fella");

	Params::PlayerStateBP_C_Tell_us_fella Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Tell Gamemode Time
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Tell_Gamemode_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Tell Gamemode Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Tell GameMode about kill
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Tell_GameMode_about_kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Tell GameMode about kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Sound Bo Bound Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sound_Number                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Sound_Bo_Bound_Client(int32 Sound_Number, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Sound Bo Bound Client");

	Params::PlayerStateBP_C_Sound_Bo_Bound_Client Parms{};

	Parms.Sound_Number = Sound_Number;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Sound Bo Bound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sound_Number                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Sound_Bo_Bound(int32 Sound_Number, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Sound Bo Bound");

	Params::PlayerStateBP_C_Sound_Bo_Bound Parms{};

	Parms.Sound_Number = Sound_Number;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.SomeoneVoted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PersonWhoVoted                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::SomeoneVoted(const class FText& PersonWhoVoted, bool TheirVote, class APlayerStateBP_C* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "SomeoneVoted");

	Params::PlayerStateBP_C_SomeoneVoted Parms{};

	Parms.PersonWhoVoted = std::move(PersonWhoVoted);
	Parms.TheirVote = TheirVote;
	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Server Change Dom
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Killer_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Me                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Server_Change_Dom(class APlayerState* Killer_0, class APlayerState* Me)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Server Change Dom");

	Params::PlayerStateBP_C_Server_Change_Dom Parms{};

	Parms.Killer_0 = Killer_0;
	Parms.Me = Me;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Send the update kick
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::Send_the_update_kick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Send the update kick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Return the vote info server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Counter_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ongoing_vote_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Return_the_vote_info_server(int32 Counter_0, bool Ongoing_vote_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Return the vote info server");

	Params::PlayerStateBP_C_Return_the_vote_info_server Parms{};

	Parms.Counter_0 = Counter_0;
	Parms.Ongoing_vote_ = Ongoing_vote_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Return the vote info
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Counter_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ongoing_vote_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Return_the_vote_info(int32 Counter_0, bool Ongoing_vote_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Return the vote info");

	Params::PlayerStateBP_C_Return_the_vote_info Parms{};

	Parms.Counter_0 = Counter_0;
	Parms.Ongoing_vote_ = Ongoing_vote_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "ReceiveTick");

	Params::PlayerStateBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerStateBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Player Logged on
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Title_Number_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HatNumber_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skin_Number_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Weapon_1_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Weapon_2_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Pant                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerStateBP_C::Player_Logged_on(int32 Title_Number_0, int32 HatNumber_0, int32 Skin_Number_0, int32 Weapon_1_0, int32 Weapon_2_0, const class FString& Pant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Player Logged on");

	Params::PlayerStateBP_C_Player_Logged_on Parms{};

	Parms.Title_Number_0 = Title_Number_0;
	Parms.HatNumber_0 = HatNumber_0;
	Parms.Skin_Number_0 = Skin_Number_0;
	Parms.Weapon_1_0 = Weapon_1_0;
	Parms.Weapon_2_0 = Weapon_2_0;
	Parms.Pant = std::move(Pant);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_E5606583477427581FD4FAB3C2E7372F
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnSuccess_E5606583477427581FD4FAB3C2E7372F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_E5606583477427581FD4FAB3C2E7372F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_C70FC785450A8C36D870348E477F51A3
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnSuccess_C70FC785450A8C36D870348E477F51A3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_C70FC785450A8C36D870348E477F51A3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_B7F14CEF49C198C07A8662A19BE661C1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnSuccess_B7F14CEF49C198C07A8662A19BE661C1(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_B7F14CEF49C198C07A8662A19BE661C1");

	Params::PlayerStateBP_C_OnSuccess_B7F14CEF49C198C07A8662A19BE661C1 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_7BA732F14B82FF08652F1B85D34CB5BA
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnSuccess_7BA732F14B82FF08652F1B85D34CB5BA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_7BA732F14B82FF08652F1B85D34CB5BA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_6DA32DB04B670646094AF1826A1C9B45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnSuccess_6DA32DB04B670646094AF1826A1C9B45(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_6DA32DB04B670646094AF1826A1C9B45");

	Params::PlayerStateBP_C_OnSuccess_6DA32DB04B670646094AF1826A1C9B45 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_3A297D2F4F2023F322B06BA4812400F3
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnSuccess_3A297D2F4F2023F322B06BA4812400F3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_3A297D2F4F2023F322B06BA4812400F3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_3809042940C9A278288688A21E93631C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnSuccess_3809042940C9A278288688A21E93631C(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_3809042940C9A278288688A21E93631C");

	Params::PlayerStateBP_C_OnSuccess_3809042940C9A278288688A21E93631C Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnSuccess_364A0E194677C706731295BCC6A3C1C7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnSuccess_364A0E194677C706731295BCC6A3C1C7(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnSuccess_364A0E194677C706731295BCC6A3C1C7");

	Params::PlayerStateBP_C_OnSuccess_364A0E194677C706731295BCC6A3C1C7 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_E5606583477427581FD4FAB3C2E7372F
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnFailure_E5606583477427581FD4FAB3C2E7372F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_E5606583477427581FD4FAB3C2E7372F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_C70FC785450A8C36D870348E477F51A3
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnFailure_C70FC785450A8C36D870348E477F51A3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_C70FC785450A8C36D870348E477F51A3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_B7F14CEF49C198C07A8662A19BE661C1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnFailure_B7F14CEF49C198C07A8662A19BE661C1(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_B7F14CEF49C198C07A8662A19BE661C1");

	Params::PlayerStateBP_C_OnFailure_B7F14CEF49C198C07A8662A19BE661C1 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_7BA732F14B82FF08652F1B85D34CB5BA
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnFailure_7BA732F14B82FF08652F1B85D34CB5BA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_7BA732F14B82FF08652F1B85D34CB5BA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_6DA32DB04B670646094AF1826A1C9B45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnFailure_6DA32DB04B670646094AF1826A1C9B45(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_6DA32DB04B670646094AF1826A1C9B45");

	Params::PlayerStateBP_C_OnFailure_6DA32DB04B670646094AF1826A1C9B45 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_3A297D2F4F2023F322B06BA4812400F3
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::OnFailure_3A297D2F4F2023F322B06BA4812400F3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_3A297D2F4F2023F322B06BA4812400F3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_3809042940C9A278288688A21E93631C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnFailure_3809042940C9A278288688A21E93631C(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_3809042940C9A278288688A21E93631C");

	Params::PlayerStateBP_C_OnFailure_3809042940C9A278288688A21E93631C Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.OnFailure_364A0E194677C706731295BCC6A3C1C7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::OnFailure_364A0E194677C706731295BCC6A3C1C7(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "OnFailure_364A0E194677C706731295BCC6A3C1C7");

	Params::PlayerStateBP_C_OnFailure_364A0E194677C706731295BCC6A3C1C7 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.On playercontroller posessed
// (BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::On_playercontroller_posessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "On playercontroller posessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Message To Send
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FString&                    Param_Name_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerStateBP_C::Message_To_Send(class APlayerState* Player, const class FText& Text, const class FString& Param_Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Message To Send");

	Params::PlayerStateBP_C_Message_To_Send Parms{};

	Parms.Player = Player;
	Parms.Text = std::move(Text);
	Parms.Param_Name_0 = std::move(Param_Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.LogOn'ed
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerStateBP_C::LogOn_ed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "LogOn'ed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStateBP.PlayerStateBP_C.Locateinator
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Locateinator(const struct FVector& Spawn_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Locateinator");

	Params::PlayerStateBP_C_Locateinator Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Kickfart server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      ThoseWhoKnow                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Kickfart_server(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Kickfart server");

	Params::PlayerStateBP_C_Kickfart_server Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.ThoseWhoKnow = std::move(ThoseWhoKnow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Kickfart brian
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Kickfart_brian(const class FString& PlayerName, bool Kick_, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Kickfart brian");

	Params::PlayerStateBP_C_Kickfart_brian Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Kickfart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      ThoseWhoKnow                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Kickfart(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Kickfart");

	Params::PlayerStateBP_C_Kickfart Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.ThoseWhoKnow = std::move(ThoseWhoKnow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Just Possesed Pawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Just_Possesed_Pawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Just Possesed Pawn");

	Params::PlayerStateBP_C_Just_Possesed_Pawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.I voted Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::I_voted_Server(bool TheirVote, class APlayerStateBP_C* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "I voted Server");

	Params::PlayerStateBP_C_I_voted_Server Parms{};

	Parms.TheirVote = TheirVote;
	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.I voted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::I_voted(class APlayerStateBP_C* Player_State, bool TheirVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "I voted");

	Params::PlayerStateBP_C_I_voted Parms{};

	Parms.Player_State = Player_State;
	Parms.TheirVote = TheirVote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.I just Perished Someone Player State
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Victim_Player_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::I_just_Perished_Someone_Player_State(class APlayerState* Victim_Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "I just Perished Someone Player State");

	Params::PlayerStateBP_C_I_just_Perished_Someone_Player_State Parms{};

	Parms.Victim_Player_State = Victim_Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Give Killer Kill Confirm
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Victim_Player_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Give_Killer_Kill_Confirm(class APlayerState* Victim_Player_State, class APlayerController* OwningPlayer, int32 Team_0, const class FText& Killed_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Give Killer Kill Confirm");

	Params::PlayerStateBP_C_Give_Killer_Kill_Confirm Parms{};

	Parms.Victim_Player_State = Victim_Player_State;
	Parms.OwningPlayer = OwningPlayer;
	Parms.Team_0 = Team_0;
	Parms.Killed_player = std::move(Killed_player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Get totum
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Get_totum(const struct FVector& Spawn_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Get totum");

	Params::PlayerStateBP_C_Get_totum Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.ExecuteUbergraph_PlayerStateBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::ExecuteUbergraph_PlayerStateBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "ExecuteUbergraph_PlayerStateBP");

	Params::PlayerStateBP_C_ExecuteUbergraph_PlayerStateBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Dommin
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Dommed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class APlayerState*&              Dommed_by                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Dommin(class APlayerState* Dommed, const class APlayerState*& Dommed_by)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Dommin");

	Params::PlayerStateBP_C_Dommin Parms{};

	Parms.Dommed = Dommed;
	Parms.Dommed_by = Dommed_by;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Client Change Dom
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class APlayerState*&              Me                                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Client_Change_Dom(const class APlayerState*& Me)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Client Change Dom");

	Params::PlayerStateBP_C_Client_Change_Dom Parms{};

	Parms.Me = Me;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Change Title
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Change_Title(int32 NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Change Title");

	Params::PlayerStateBP_C_Change_Title Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Change Skin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Skin_Number_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Change_Skin(int32 Skin_Number_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Change Skin");

	Params::PlayerStateBP_C_Change_Skin Parms{};

	Parms.Skin_Number_0 = Skin_Number_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Change Pant
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PantType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerStateBP_C::Change_Pant(const class FString& PantType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Change Pant");

	Params::PlayerStateBP_C_Change_Pant Parms{};

	Parms.PantType = std::move(PantType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Change Hat Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HatNumber_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Change_Hat_Multicast(int32 HatNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Change Hat Multicast");

	Params::PlayerStateBP_C_Change_Hat_Multicast Parms{};

	Parms.HatNumber_0 = HatNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Change Hat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Change_Hat(int32 Hat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Change Hat");

	Params::PlayerStateBP_C_Change_Hat Parms{};

	Parms.Hat = Hat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Ask for vote info server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Ask_for_vote_info_server(class APlayerState* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Ask for vote info server");

	Params::PlayerStateBP_C_Ask_for_vote_info_server Parms{};

	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Ask for vote info
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Ask_for_vote_info(class APlayerState* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Ask for vote info");

	Params::PlayerStateBP_C_Ask_for_vote_info Parms{};

	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Add Kill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                Damage_Type                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Add_Kill(int32 Team_0, class APlayerState* Victim, const class UDamageType* Damage_Type, const class FText& Killed_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Add Kill");

	Params::PlayerStateBP_C_Add_Kill Parms{};

	Parms.Team_0 = Team_0;
	Parms.Victim = Victim;
	Parms.Damage_Type = Damage_Type;
	Parms.Killed_player = std::move(Killed_player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Add Death
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Killer_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerStateBP_C::Add_Death(class APlayerState* Killer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Add Death");

	Params::PlayerStateBP_C_Add_Death Parms{};

	Parms.Killer_0 = Killer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStateBP.PlayerStateBP_C.Add Chungus to fart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerControllerBP_C*            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Killed_player                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerStateBP_C::Add_Chungus_to_fart(class APlayerControllerBP_C* Target, class APlayerState* Victim, const class FText& Killed_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStateBP_C", "Add Chungus to fart");

	Params::PlayerStateBP_C_Add_Chungus_to_fart Parms{};

	Parms.Target = Target;
	Parms.Victim = Victim;
	Parms.Killed_player = std::move(Killed_player);

	UObject::ProcessEvent(Func, &Parms);
}

}

