#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameStateBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GameStateBP.GameStateBP_C
// 0x0040 (0x0308 - 0x02C8)
class AGameStateBP_C final : public AGameStateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Red_Score;                                         // 0x02D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Blue_Score;                                        // 0x02DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Update_FFA_Scoreboard;                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              NewEventDispatcher_0;                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Started_;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Vanished_server(const struct FTransform& SpawnTransform, class AActor* Target);
	void Updatedoer();
	void Send_Message_Server(class APlayerState* Player_State, const class FText& Message, const class FString& Name_0);
	void ReceiveBeginPlay();
	void On_Vanished(const struct FTransform& Transform, class ACharacter* Real);
	void On_Bannana(const struct FRotator& NewParam, class APlayerController* NewParam1);
	void Host_Start();
	void Host_End();
	void ExecuteUbergraph_GameStateBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameStateBP_C">();
	}
	static class AGameStateBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateBP_C>();
	}
};
static_assert(alignof(AGameStateBP_C) == 0x000008, "Wrong alignment on AGameStateBP_C");
static_assert(sizeof(AGameStateBP_C) == 0x000308, "Wrong size on AGameStateBP_C");
static_assert(offsetof(AGameStateBP_C, UberGraphFrame) == 0x0002C8, "Member 'AGameStateBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, DefaultSceneRoot) == 0x0002D0, "Member 'AGameStateBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, Red_Score) == 0x0002D8, "Member 'AGameStateBP_C::Red_Score' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, Blue_Score) == 0x0002DC, "Member 'AGameStateBP_C::Blue_Score' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, Update_FFA_Scoreboard) == 0x0002E0, "Member 'AGameStateBP_C::Update_FFA_Scoreboard' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, NewEventDispatcher_0) == 0x0002F0, "Member 'AGameStateBP_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(AGameStateBP_C, Started_) == 0x000300, "Member 'AGameStateBP_C::Started_' has a wrong offset!");

}

