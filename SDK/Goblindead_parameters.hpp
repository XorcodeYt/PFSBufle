#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Goblindead

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Goblindead.Goblindead_C.ExecuteUbergraph_Goblindead
// 0x0028 (0x0028 - 0x0000)
struct Goblindead_C_ExecuteUbergraph_Goblindead final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Goblindead_C_ExecuteUbergraph_Goblindead) == 0x000008, "Wrong alignment on Goblindead_C_ExecuteUbergraph_Goblindead");
static_assert(sizeof(Goblindead_C_ExecuteUbergraph_Goblindead) == 0x000028, "Wrong size on Goblindead_C_ExecuteUbergraph_Goblindead");
static_assert(offsetof(Goblindead_C_ExecuteUbergraph_Goblindead, EntryPoint) == 0x000000, "Member 'Goblindead_C_ExecuteUbergraph_Goblindead::EntryPoint' has a wrong offset!");
static_assert(offsetof(Goblindead_C_ExecuteUbergraph_Goblindead, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Goblindead_C_ExecuteUbergraph_Goblindead::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Goblindead_C_ExecuteUbergraph_Goblindead, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'Goblindead_C_ExecuteUbergraph_Goblindead::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

}

