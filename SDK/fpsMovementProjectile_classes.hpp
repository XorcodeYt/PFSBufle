#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: fpsMovementProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass fpsMovementProjectile.fpsMovementProjectile_C
// 0x0038 (0x02B0 - 0x0278)
class AfpsMovementProjectile_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Missile_Launch_Sound_Effect;                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      RocketTrail;                                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           Projectile;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollisionComponent;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ExecuteUbergraph_fpsMovementProjectile(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"fpsMovementProjectile_C">();
	}
	static class AfpsMovementProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AfpsMovementProjectile_C>();
	}
};
static_assert(alignof(AfpsMovementProjectile_C) == 0x000008, "Wrong alignment on AfpsMovementProjectile_C");
static_assert(sizeof(AfpsMovementProjectile_C) == 0x0002B0, "Wrong size on AfpsMovementProjectile_C");
static_assert(offsetof(AfpsMovementProjectile_C, UberGraphFrame) == 0x000278, "Member 'AfpsMovementProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, Missile_Launch_Sound_Effect) == 0x000280, "Member 'AfpsMovementProjectile_C::Missile_Launch_Sound_Effect' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, RocketTrail) == 0x000288, "Member 'AfpsMovementProjectile_C::RocketTrail' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, RotatingMovement) == 0x000290, "Member 'AfpsMovementProjectile_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, Projectile) == 0x000298, "Member 'AfpsMovementProjectile_C::Projectile' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, Sphere) == 0x0002A0, "Member 'AfpsMovementProjectile_C::Sphere' has a wrong offset!");
static_assert(offsetof(AfpsMovementProjectile_C, CollisionComponent) == 0x0002A8, "Member 'AfpsMovementProjectile_C::CollisionComponent' has a wrong offset!");

}

