#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: hitmarker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass hitmarker.hitmarker_C
// 0x0040 (0x02D0 - 0x0290)
class Uhitmarker_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hitmarker_animBig;                                 // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hitmarker_animSmall;                               // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Hitmarker_Size;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Hitmarker_Type;                                    // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void GetBrush_0();
	void ExecuteUbergraph_hitmarker(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"hitmarker_C">();
	}
	static class Uhitmarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Uhitmarker_C>();
	}
};
static_assert(alignof(Uhitmarker_C) == 0x000008, "Wrong alignment on Uhitmarker_C");
static_assert(sizeof(Uhitmarker_C) == 0x0002D0, "Wrong size on Uhitmarker_C");
static_assert(offsetof(Uhitmarker_C, UberGraphFrame) == 0x000290, "Member 'Uhitmarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Uhitmarker_C, Hitmarker_animBig) == 0x000298, "Member 'Uhitmarker_C::Hitmarker_animBig' has a wrong offset!");
static_assert(offsetof(Uhitmarker_C, Hitmarker_animSmall) == 0x0002A0, "Member 'Uhitmarker_C::Hitmarker_animSmall' has a wrong offset!");
static_assert(offsetof(Uhitmarker_C, Image_1) == 0x0002A8, "Member 'Uhitmarker_C::Image_1' has a wrong offset!");
static_assert(offsetof(Uhitmarker_C, Hitmarker_Size) == 0x0002B0, "Member 'Uhitmarker_C::Hitmarker_Size' has a wrong offset!");
static_assert(offsetof(Uhitmarker_C, Hitmarker_Type) == 0x0002C0, "Member 'Uhitmarker_C::Hitmarker_Type' has a wrong offset!");

}

