#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmmoSlot1_2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AmmoSlot1_2.AmmoSlot1_2_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct AmmoSlot1_2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoSlot1_2_C_Tick) == 0x000008, "Wrong alignment on AmmoSlot1_2_C_Tick");
static_assert(sizeof(AmmoSlot1_2_C_Tick) == 0x000048, "Wrong size on AmmoSlot1_2_C_Tick");
static_assert(offsetof(AmmoSlot1_2_C_Tick, MyGeometry) == 0x000000, "Member 'AmmoSlot1_2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Tick, InDeltaTime) == 0x000040, "Member 'AmmoSlot1_2_C_Tick::InDeltaTime' has a wrong offset!");

// Function AmmoSlot1_2.AmmoSlot1_2_C.HealthBar_Percentage
// 0x0030 (0x0030 - 0x0000)
struct AmmoSlot1_2_C_HealthBar_Percentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_NarrowingCast;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoSlot1_2_C_HealthBar_Percentage) == 0x000008, "Wrong alignment on AmmoSlot1_2_C_HealthBar_Percentage");
static_assert(sizeof(AmmoSlot1_2_C_HealthBar_Percentage) == 0x000030, "Wrong size on AmmoSlot1_2_C_HealthBar_Percentage");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, ReturnValue) == 0x000000, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000010, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_HealthBar_Percentage, K2Node_FunctionResult_ReturnValue_NarrowingCast) == 0x000028, "Member 'AmmoSlot1_2_C_HealthBar_Percentage::K2Node_FunctionResult_ReturnValue_NarrowingCast' has a wrong offset!");

// Function AmmoSlot1_2.AmmoSlot1_2_C.Get_CannonballCount_Text_0
// 0x0048 (0x0048 - 0x0000)
struct AmmoSlot1_2_C_Get_CannonballCount_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(AmmoSlot1_2_C_Get_CannonballCount_Text_0) == 0x000008, "Wrong alignment on AmmoSlot1_2_C_Get_CannonballCount_Text_0");
static_assert(sizeof(AmmoSlot1_2_C_Get_CannonballCount_Text_0) == 0x000048, "Wrong size on AmmoSlot1_2_C_Get_CannonballCount_Text_0");
static_assert(offsetof(AmmoSlot1_2_C_Get_CannonballCount_Text_0, ReturnValue) == 0x000000, "Member 'AmmoSlot1_2_C_Get_CannonballCount_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_CannonballCount_Text_0, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'AmmoSlot1_2_C_Get_CannonballCount_Text_0::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_CannonballCount_Text_0, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000020, "Member 'AmmoSlot1_2_C_Get_CannonballCount_Text_0::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_CannonballCount_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AmmoSlot1_2_C_Get_CannonballCount_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_CannonballCount_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'AmmoSlot1_2_C_Get_CannonballCount_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function AmmoSlot1_2.AmmoSlot1_2_C.Get kills
// 0x0090 (0x0090 - 0x0000)
struct AmmoSlot1_2_C_Get_kills final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(AmmoSlot1_2_C_Get_kills) == 0x000008, "Wrong alignment on AmmoSlot1_2_C_Get_kills");
static_assert(sizeof(AmmoSlot1_2_C_Get_kills) == 0x000090, "Wrong size on AmmoSlot1_2_C_Get_kills");
static_assert(offsetof(AmmoSlot1_2_C_Get_kills, Result) == 0x000000, "Member 'AmmoSlot1_2_C_Get_kills::Result' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_kills, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AmmoSlot1_2_C_Get_kills::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_kills, K2Node_MakeArray_Array) == 0x000068, "Member 'AmmoSlot1_2_C_Get_kills::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_Get_kills, CallFunc_Format_ReturnValue) == 0x000078, "Member 'AmmoSlot1_2_C_Get_kills::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AmmoSlot1_2.AmmoSlot1_2_C.ExecuteUbergraph_AmmoSlot1_2
// 0x0068 (0x0068 - 0x0000)
struct AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2) == 0x000008, "Wrong alignment on AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2");
static_assert(sizeof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2) == 0x000068, "Wrong size on AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, EntryPoint) == 0x000000, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::EntryPoint' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, K2Node_Event_MyGeometry) == 0x000008, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, K2Node_Event_InDeltaTime) == 0x000048, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000050, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000058, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AmmoSlot1_2_C_ExecuteUbergraph_AmmoSlot1_2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AmmoSlot1_2.AmmoSlot1_2_C.AmmoDoing
// 0x06B0 (0x06B0 - 0x0000)
struct AmmoSlot1_2_C_AmmoDoing final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D0(0x00D0)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0xF];                                      // 0x01B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x01C0(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0xB];                                      // 0x0295(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x02A0(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0370(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x0440(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_5;                    // 0x0510(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_6;                    // 0x05E0(0x00D0)()
};
static_assert(alignof(AmmoSlot1_2_C_AmmoDoing) == 0x000010, "Wrong alignment on AmmoSlot1_2_C_AmmoDoing");
static_assert(sizeof(AmmoSlot1_2_C_AmmoDoing) == 0x0006B0, "Wrong size on AmmoSlot1_2_C_AmmoDoing");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, ReturnValue) == 0x000000, "Member 'AmmoSlot1_2_C_AmmoDoing::ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush) == 0x0000D0, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001A0, "Member 'AmmoSlot1_2_C_AmmoDoing::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x0001A8, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_1) == 0x0001C0, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, CallFunc_IsValid_ReturnValue) == 0x000290, "Member 'AmmoSlot1_2_C_AmmoDoing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_SwitchInteger_CmpSuccess) == 0x000291, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_SwitchInteger_CmpSuccess_1) == 0x000292, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_SwitchInteger_CmpSuccess_2) == 0x000293, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_SwitchInteger_CmpSuccess_3) == 0x000294, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_2) == 0x0002A0, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_3) == 0x000370, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_4) == 0x000440, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_5) == 0x000510, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_5' has a wrong offset!");
static_assert(offsetof(AmmoSlot1_2_C_AmmoDoing, K2Node_MakeStruct_SlateBrush_6) == 0x0005E0, "Member 'AmmoSlot1_2_C_AmmoDoing::K2Node_MakeStruct_SlateBrush_6' has a wrong offset!");

}

