#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwordThinger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SwordThinger.SwordThinger_C
// 0x0020 (0x0298 - 0x0278)
class ASwordThinger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   sword;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void OnSuccess_7DA1DC8241B25E7952F2F99451222744(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_79D969DB40631803807BE88B758E2F4A();
	void OnFailure_7DA1DC8241B25E7952F2F99451222744(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_79D969DB40631803807BE88B758E2F4A();
	void ExecuteUbergraph_SwordThinger(int32 EntryPoint);
	void BndEvt__SwordThinger_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SwordThinger_C">();
	}
	static class ASwordThinger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASwordThinger_C>();
	}
};
static_assert(alignof(ASwordThinger_C) == 0x000008, "Wrong alignment on ASwordThinger_C");
static_assert(sizeof(ASwordThinger_C) == 0x000298, "Wrong size on ASwordThinger_C");
static_assert(offsetof(ASwordThinger_C, UberGraphFrame) == 0x000278, "Member 'ASwordThinger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASwordThinger_C, sword) == 0x000280, "Member 'ASwordThinger_C::sword' has a wrong offset!");
static_assert(offsetof(ASwordThinger_C, Box) == 0x000288, "Member 'ASwordThinger_C::Box' has a wrong offset!");
static_assert(offsetof(ASwordThinger_C, DefaultSceneRoot) == 0x000290, "Member 'ASwordThinger_C::DefaultSceneRoot' has a wrong offset!");

}

