#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Info_BPI

#include "Basic.hpp"

#include "Player_Info_BPI_classes.hpp"
#include "Player_Info_BPI_parameters.hpp"


namespace SDK
{

// Function Player_Info_BPI.Player_Info_BPI_C.VoteUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IPlayer_Info_BPI_C::VoteUpdate(int32 Ay, int32 Ny)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "VoteUpdate");

	Params::Player_Info_BPI_C_VoteUpdate Parms{};

	Parms.Ay = Ay;
	Parms.Ny = Ny;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Player_Info_BPI.Player_Info_BPI_C.UpdateKickFart
// (Public, BlueprintCallable, BlueprintEvent)

void IPlayer_Info_BPI_C::UpdateKickFart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "UpdateKickFart");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function Player_Info_BPI.Player_Info_BPI_C.SomeoneVoted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PersonWhoVoted                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IPlayer_Info_BPI_C::SomeoneVoted(const class FText& PersonWhoVoted, bool TheirVote, class APlayerStateBP_C* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "SomeoneVoted");

	Params::Player_Info_BPI_C_SomeoneVoted Parms{};

	Parms.PersonWhoVoted = std::move(PersonWhoVoted);
	Parms.TheirVote = TheirVote;
	Parms.Player_State = Player_State;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Player_Info_BPI.Player_Info_BPI_C.LogOn'ed
// (Public, BlueprintCallable, BlueprintEvent)

void IPlayer_Info_BPI_C::LogOn_ed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "LogOn'ed");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function Player_Info_BPI.Player_Info_BPI_C.Kickfart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      ThoseWhoKnow                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void IPlayer_Info_BPI_C::Kickfart(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "Kickfart");

	Params::Player_Info_BPI_C_Kickfart Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.ThoseWhoKnow = std::move(ThoseWhoKnow);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Player_Info_BPI.Player_Info_BPI_C.Just Possesed Pawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IPlayer_Info_BPI_C::Just_Possesed_Pawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Player_Info_BPI_C", "Just Possesed Pawn");

	Params::Player_Info_BPI_C_Just_Possesed_Pawn Parms{};

	Parms.Pawn = Pawn;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

