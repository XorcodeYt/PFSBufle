#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuNew

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function OptionsMenuNew.OptionsMenuNew_C.UpdateSens
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_UpdateSens final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_UpdateSens) == 0x000004, "Wrong alignment on OptionsMenuNew_C_UpdateSens");
static_assert(sizeof(OptionsMenuNew_C_UpdateSens) == 0x000004, "Wrong size on OptionsMenuNew_C_UpdateSens");
static_assert(offsetof(OptionsMenuNew_C_UpdateSens, InValue) == 0x000000, "Member 'OptionsMenuNew_C_UpdateSens::InValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Update Widget
// 0x0010 (0x0010 - 0x0000)
struct OptionsMenuNew_C_Update_Widget final
{
public:
	double                                        Field_Of_Vision;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Update_Widget) == 0x000008, "Wrong alignment on OptionsMenuNew_C_Update_Widget");
static_assert(sizeof(OptionsMenuNew_C_Update_Widget) == 0x000010, "Wrong size on OptionsMenuNew_C_Update_Widget");
static_assert(offsetof(OptionsMenuNew_C_Update_Widget, Field_Of_Vision) == 0x000000, "Member 'OptionsMenuNew_C_Update_Widget::Field_Of_Vision' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Update_Widget, CallFunc_SetValue_InValue_NarrowingCast) == 0x000008, "Member 'OptionsMenuNew_C_Update_Widget::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.SniperSensSliderValue
// 0x00B0 (0x00B0 - 0x0000)
struct OptionsMenuNew_C_SniperSensSliderValue final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_SniperSensSliderValue) == 0x000008, "Wrong alignment on OptionsMenuNew_C_SniperSensSliderValue");
static_assert(sizeof(OptionsMenuNew_C_SniperSensSliderValue) == 0x0000B0, "Wrong size on OptionsMenuNew_C_SniperSensSliderValue");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_SniperSensSliderValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'OptionsMenuNew_C_SniperSensSliderValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, CallFunc_Round_ReturnValue) == 0x000020, "Member 'OptionsMenuNew_C_SniperSensSliderValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'OptionsMenuNew_C_SniperSensSliderValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'OptionsMenuNew_C_SniperSensSliderValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, K2Node_MakeArray_Array) == 0x000080, "Member 'OptionsMenuNew_C_SniperSensSliderValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, CallFunc_Format_ReturnValue) == 0x000090, "Member 'OptionsMenuNew_C_SniperSensSliderValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SniperSensSliderValue, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0000A8, "Member 'OptionsMenuNew_C_SniperSensSliderValue::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Sniper Sens Updateinator
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_Sniper_Sens_Updateinator final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Sniper_Sens_Updateinator) == 0x000004, "Wrong alignment on OptionsMenuNew_C_Sniper_Sens_Updateinator");
static_assert(sizeof(OptionsMenuNew_C_Sniper_Sens_Updateinator) == 0x000004, "Wrong size on OptionsMenuNew_C_Sniper_Sens_Updateinator");
static_assert(offsetof(OptionsMenuNew_C_Sniper_Sens_Updateinator, InValue) == 0x000000, "Member 'OptionsMenuNew_C_Sniper_Sens_Updateinator::InValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.SensSliderValue
// 0x00B0 (0x00B0 - 0x0000)
struct OptionsMenuNew_C_SensSliderValue final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_SensSliderValue) == 0x000008, "Wrong alignment on OptionsMenuNew_C_SensSliderValue");
static_assert(sizeof(OptionsMenuNew_C_SensSliderValue) == 0x0000B0, "Wrong size on OptionsMenuNew_C_SensSliderValue");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_SensSliderValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'OptionsMenuNew_C_SensSliderValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, CallFunc_Round_ReturnValue) == 0x000020, "Member 'OptionsMenuNew_C_SensSliderValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'OptionsMenuNew_C_SensSliderValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'OptionsMenuNew_C_SensSliderValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, K2Node_MakeArray_Array) == 0x000080, "Member 'OptionsMenuNew_C_SensSliderValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, CallFunc_Format_ReturnValue) == 0x000090, "Member 'OptionsMenuNew_C_SensSliderValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderValue, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0000A8, "Member 'OptionsMenuNew_C_SensSliderValue::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.SensSliderPlacement
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuNew_C_SensSliderPlacement final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_NarrowingCast;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_SensSliderPlacement) == 0x000004, "Wrong alignment on OptionsMenuNew_C_SensSliderPlacement");
static_assert(sizeof(OptionsMenuNew_C_SensSliderPlacement) == 0x000008, "Wrong size on OptionsMenuNew_C_SensSliderPlacement");
static_assert(offsetof(OptionsMenuNew_C_SensSliderPlacement, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_SensSliderPlacement::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_SensSliderPlacement, K2Node_FunctionResult_ReturnValue_NarrowingCast) == 0x000004, "Member 'OptionsMenuNew_C_SensSliderPlacement::K2Node_FunctionResult_ReturnValue_NarrowingCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Save Hitmarker Settings
// 0x0018 (0x0018 - 0x0000)
struct OptionsMenuNew_C_Save_Hitmarker_Settings final
{
public:
	class USaveOptions_C*                         CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         K2Node_DynamicCast_AsSave_Options;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Save_Hitmarker_Settings) == 0x000008, "Wrong alignment on OptionsMenuNew_C_Save_Hitmarker_Settings");
static_assert(sizeof(OptionsMenuNew_C_Save_Hitmarker_Settings) == 0x000018, "Wrong size on OptionsMenuNew_C_Save_Hitmarker_Settings");
static_assert(offsetof(OptionsMenuNew_C_Save_Hitmarker_Settings, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Save_Hitmarker_Settings::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_Hitmarker_Settings, K2Node_DynamicCast_AsSave_Options) == 0x000008, "Member 'OptionsMenuNew_C_Save_Hitmarker_Settings::K2Node_DynamicCast_AsSave_Options' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_Hitmarker_Settings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'OptionsMenuNew_C_Save_Hitmarker_Settings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Save game
// 0x0070 (0x0070 - 0x0000)
struct OptionsMenuNew_C_Save_game final
{
public:
	double                                        Field_Of_Vision;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mouse_sens;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snipersens;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlunderPistolSens;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kill_Confirmed_Widget_0;                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Hitmarker_Size_0;                                  // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Hitmarker_Type_0;                                  // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lumin_0;                                           // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertX_0;                                         // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertY_0;                                         // 0x004A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageNumbers_0;                                   // 0x004B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Text_Chat_0;                                       // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_Aiming_FOV__0;                              // 0x004D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveOptions_C*                         K2Node_DynamicCast_AsSave_Options;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveOptions_C*                         CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Save_game) == 0x000008, "Wrong alignment on OptionsMenuNew_C_Save_game");
static_assert(sizeof(OptionsMenuNew_C_Save_game) == 0x000070, "Wrong size on OptionsMenuNew_C_Save_game");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Field_Of_Vision) == 0x000000, "Member 'OptionsMenuNew_C_Save_game::Field_Of_Vision' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Mouse_sens) == 0x000008, "Member 'OptionsMenuNew_C_Save_game::Mouse_sens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Snipersens) == 0x000010, "Member 'OptionsMenuNew_C_Save_game::Snipersens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, BlunderPistolSens) == 0x000018, "Member 'OptionsMenuNew_C_Save_game::BlunderPistolSens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Kill_Confirmed_Widget_0) == 0x000020, "Member 'OptionsMenuNew_C_Save_game::Kill_Confirmed_Widget_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Hitmarker_Size_0) == 0x000028, "Member 'OptionsMenuNew_C_Save_game::Hitmarker_Size_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Hitmarker_Type_0) == 0x000038, "Member 'OptionsMenuNew_C_Save_game::Hitmarker_Type_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Lumin_0) == 0x000048, "Member 'OptionsMenuNew_C_Save_game::Lumin_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, InvertX_0) == 0x000049, "Member 'OptionsMenuNew_C_Save_game::InvertX_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, InvertY_0) == 0x00004A, "Member 'OptionsMenuNew_C_Save_game::InvertY_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, DamageNumbers_0) == 0x00004B, "Member 'OptionsMenuNew_C_Save_game::DamageNumbers_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Text_Chat_0) == 0x00004C, "Member 'OptionsMenuNew_C_Save_game::Text_Chat_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, Remove_Aiming_FOV__0) == 0x00004D, "Member 'OptionsMenuNew_C_Save_game::Remove_Aiming_FOV__0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, K2Node_DynamicCast_AsSave_Options) == 0x000050, "Member 'OptionsMenuNew_C_Save_game::K2Node_DynamicCast_AsSave_Options' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'OptionsMenuNew_C_Save_game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000060, "Member 'OptionsMenuNew_C_Save_game::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Save_game, CallFunc_SaveGameToSlot_ReturnValue) == 0x000068, "Member 'OptionsMenuNew_C_Save_game::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.PistolBussSensSliderValue
// 0x00A8 (0x00A8 - 0x0000)
struct OptionsMenuNew_C_PistolBussSensSliderValue final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(OptionsMenuNew_C_PistolBussSensSliderValue) == 0x000008, "Wrong alignment on OptionsMenuNew_C_PistolBussSensSliderValue");
static_assert(sizeof(OptionsMenuNew_C_PistolBussSensSliderValue) == 0x0000A8, "Wrong size on OptionsMenuNew_C_PistolBussSensSliderValue");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, CallFunc_Round_ReturnValue) == 0x000020, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, K2Node_MakeArray_Array) == 0x000080, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_PistolBussSensSliderValue, CallFunc_Format_ReturnValue) == 0x000090, "Member 'OptionsMenuNew_C_PistolBussSensSliderValue::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Pistol Buss Updateinator
// 0x0010 (0x0010 - 0x0000)
struct OptionsMenuNew_C_Pistol_Buss_Updateinator final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Pistol_Buss_Updateinator) == 0x000008, "Wrong alignment on OptionsMenuNew_C_Pistol_Buss_Updateinator");
static_assert(sizeof(OptionsMenuNew_C_Pistol_Buss_Updateinator) == 0x000010, "Wrong size on OptionsMenuNew_C_Pistol_Buss_Updateinator");
static_assert(offsetof(OptionsMenuNew_C_Pistol_Buss_Updateinator, InValue) == 0x000000, "Member 'OptionsMenuNew_C_Pistol_Buss_Updateinator::InValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Pistol_Buss_Updateinator, K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast) == 0x000008, "Member 'OptionsMenuNew_C_Pistol_Buss_Updateinator::K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Load game
// 0x0068 (0x0068 - 0x0000)
struct OptionsMenuNew_C_Load_game final
{
public:
	double                                        Field_Of_Vision;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mouse_sens;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sniper_Sens_0;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlunderPistolSens;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kill_Confirmed_Widget_0;                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lumin_0;                                           // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Hitmarker_Size_0;                                  // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Hitmarker_Type_0;                                  // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          InvertX_0;                                         // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertY_0;                                         // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageNumbers_0;                                   // 0x004A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Text_Chat_0;                                       // 0x004B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_Aiming_FOV__0;                              // 0x004C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         K2Node_DynamicCast_AsSave_Options;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Load_game) == 0x000008, "Wrong alignment on OptionsMenuNew_C_Load_game");
static_assert(sizeof(OptionsMenuNew_C_Load_game) == 0x000068, "Wrong size on OptionsMenuNew_C_Load_game");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Field_Of_Vision) == 0x000000, "Member 'OptionsMenuNew_C_Load_game::Field_Of_Vision' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Mouse_sens) == 0x000008, "Member 'OptionsMenuNew_C_Load_game::Mouse_sens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Sniper_Sens_0) == 0x000010, "Member 'OptionsMenuNew_C_Load_game::Sniper_Sens_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, BlunderPistolSens) == 0x000018, "Member 'OptionsMenuNew_C_Load_game::BlunderPistolSens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Kill_Confirmed_Widget_0) == 0x000020, "Member 'OptionsMenuNew_C_Load_game::Kill_Confirmed_Widget_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Lumin_0) == 0x000021, "Member 'OptionsMenuNew_C_Load_game::Lumin_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Hitmarker_Size_0) == 0x000028, "Member 'OptionsMenuNew_C_Load_game::Hitmarker_Size_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Hitmarker_Type_0) == 0x000038, "Member 'OptionsMenuNew_C_Load_game::Hitmarker_Type_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, InvertX_0) == 0x000048, "Member 'OptionsMenuNew_C_Load_game::InvertX_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, InvertY_0) == 0x000049, "Member 'OptionsMenuNew_C_Load_game::InvertY_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, DamageNumbers_0) == 0x00004A, "Member 'OptionsMenuNew_C_Load_game::DamageNumbers_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Text_Chat_0) == 0x00004B, "Member 'OptionsMenuNew_C_Load_game::Text_Chat_0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, Remove_Aiming_FOV__0) == 0x00004C, "Member 'OptionsMenuNew_C_Load_game::Remove_Aiming_FOV__0' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000050, "Member 'OptionsMenuNew_C_Load_game::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, K2Node_DynamicCast_AsSave_Options) == 0x000058, "Member 'OptionsMenuNew_C_Load_game::K2Node_DynamicCast_AsSave_Options' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'OptionsMenuNew_C_Load_game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_Load_game, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000061, "Member 'OptionsMenuNew_C_Load_game::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.GetText_2
// 0x0090 (0x0090 - 0x0000)
struct OptionsMenuNew_C_GetText_2 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(OptionsMenuNew_C_GetText_2) == 0x000008, "Wrong alignment on OptionsMenuNew_C_GetText_2");
static_assert(sizeof(OptionsMenuNew_C_GetText_2) == 0x000090, "Wrong size on OptionsMenuNew_C_GetText_2");
static_assert(offsetof(OptionsMenuNew_C_GetText_2, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_GetText_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_2, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'OptionsMenuNew_C_GetText_2::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_2, K2Node_MakeArray_Array) == 0x000068, "Member 'OptionsMenuNew_C_GetText_2::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_2, CallFunc_Format_ReturnValue) == 0x000078, "Member 'OptionsMenuNew_C_GetText_2::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.GetText_1
// 0x0090 (0x0090 - 0x0000)
struct OptionsMenuNew_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(OptionsMenuNew_C_GetText_1) == 0x000008, "Wrong alignment on OptionsMenuNew_C_GetText_1");
static_assert(sizeof(OptionsMenuNew_C_GetText_1) == 0x000090, "Wrong size on OptionsMenuNew_C_GetText_1");
static_assert(offsetof(OptionsMenuNew_C_GetText_1, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_1, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'OptionsMenuNew_C_GetText_1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_1, K2Node_MakeArray_Array) == 0x000068, "Member 'OptionsMenuNew_C_GetText_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_1, CallFunc_Format_ReturnValue) == 0x000078, "Member 'OptionsMenuNew_C_GetText_1::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.GetText_0
// 0x0098 (0x0098 - 0x0000)
struct OptionsMenuNew_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(OptionsMenuNew_C_GetText_0) == 0x000008, "Wrong alignment on OptionsMenuNew_C_GetText_0");
static_assert(sizeof(OptionsMenuNew_C_GetText_0) == 0x000098, "Wrong size on OptionsMenuNew_C_GetText_0");
static_assert(offsetof(OptionsMenuNew_C_GetText_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_0, CallFunc_Round64_ReturnValue) == 0x000018, "Member 'OptionsMenuNew_C_GetText_0::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'OptionsMenuNew_C_GetText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_0, K2Node_MakeArray_Array) == 0x000070, "Member 'OptionsMenuNew_C_GetText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_GetText_0, CallFunc_Format_ReturnValue) == 0x000080, "Member 'OptionsMenuNew_C_GetText_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.GetCheckedState_0
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_GetCheckedState_0 final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_GetCheckedState_0) == 0x000001, "Wrong alignment on OptionsMenuNew_C_GetCheckedState_0");
static_assert(sizeof(OptionsMenuNew_C_GetCheckedState_0) == 0x000001, "Wrong size on OptionsMenuNew_C_GetCheckedState_0");
static_assert(offsetof(OptionsMenuNew_C_GetCheckedState_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_GetCheckedState_0::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_TextChatTickBox_CheckedState_0
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0 final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0) == 0x000001, "Wrong alignment on OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0");
static_assert(sizeof(OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0) == 0x000001, "Wrong size on OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0");
static_assert(offsetof(OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_TextChatTickBox_CheckedState_0::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_SniperSensSlider_Value_0
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_Get_SniperSensSlider_Value_0 final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_SniperSensSlider_Value_0) == 0x000004, "Wrong alignment on OptionsMenuNew_C_Get_SniperSensSlider_Value_0");
static_assert(sizeof(OptionsMenuNew_C_Get_SniperSensSlider_Value_0) == 0x000004, "Wrong size on OptionsMenuNew_C_Get_SniperSensSlider_Value_0");
static_assert(offsetof(OptionsMenuNew_C_Get_SniperSensSlider_Value_0, InValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_SniperSensSlider_Value_0::InValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_InvertYCheck_CheckedState_0
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0 final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0) == 0x000001, "Wrong alignment on OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0");
static_assert(sizeof(OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0) == 0x000001, "Wrong size on OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0");
static_assert(offsetof(OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_InvertYCheck_CheckedState_0::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_InvertXCheck_CheckedState_0
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0 final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0) == 0x000001, "Wrong alignment on OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0");
static_assert(sizeof(OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0) == 0x000001, "Wrong size on OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0");
static_assert(offsetof(OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_InvertXCheck_CheckedState_0::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_DamageNumbers_CheckedState_0
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0 final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0) == 0x000001, "Wrong alignment on OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0");
static_assert(sizeof(OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0) == 0x000001, "Wrong size on OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0");
static_assert(offsetof(OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_DamageNumbers_CheckedState_0::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.Get_ADS_Aim_CheckBox
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_Get_ADS_Aim_CheckBox final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_Get_ADS_Aim_CheckBox) == 0x000001, "Wrong alignment on OptionsMenuNew_C_Get_ADS_Aim_CheckBox");
static_assert(sizeof(OptionsMenuNew_C_Get_ADS_Aim_CheckBox) == 0x000001, "Wrong size on OptionsMenuNew_C_Get_ADS_Aim_CheckBox");
static_assert(offsetof(OptionsMenuNew_C_Get_ADS_Aim_CheckBox, ReturnValue) == 0x000000, "Member 'OptionsMenuNew_C_Get_ADS_Aim_CheckBox::ReturnValue' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.ExecuteUbergraph_OptionsMenuNew
// 0x00F8 (0x00F8 - 0x0000)
struct OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_3;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_Field_Of_Vision;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_Mouse_Sens;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_Sniper_Sens;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Load_game_BlunderPistolSens;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_Kill_Confirmed_Widget;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_Lumin;                          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Load_game_Hitmarker_Size;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Load_game_Hitmarker_Type;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_InvertX;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_InvertY;                        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_DamageNumbers;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_Text_Chat;                      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Load_game_Remove_Aiming_FOV_;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_5;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_1;         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_1;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_4;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_3;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_2;           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerBP_C*                  K2Node_DynamicCast_AsPlayer_Controller_BP;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_NarrowingCast;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BFOV_WideningCast;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateSens_InValue_NarrowingCast;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sniper_Sens_Updateinator_InValue_NarrowingCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Pistol_Buss_Updateinator_InValue_NarrowingCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Save_game_Mouse_sens_WideningCast;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Save_game_SniperSens_WideningCast;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew) == 0x000008, "Wrong alignment on OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew");
static_assert(sizeof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew) == 0x0000F8, "Wrong size on OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, EntryPoint) == 0x000000, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_Value_3) == 0x000004, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_Value_2) == 0x000010, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000018, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_Value_1) == 0x000024, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Field_Of_Vision) == 0x000028, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Field_Of_Vision' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Mouse_Sens) == 0x000030, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Mouse_Sens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Sniper_Sens) == 0x000038, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Sniper_Sens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_BlunderPistolSens) == 0x000040, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_BlunderPistolSens' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Kill_Confirmed_Widget) == 0x000048, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Kill_Confirmed_Widget' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Lumin) == 0x000049, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Lumin' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Hitmarker_Size) == 0x000050, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Hitmarker_Size' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Hitmarker_Type) == 0x000060, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Hitmarker_Type' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_InvertX) == 0x000070, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_InvertX' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_InvertY) == 0x000071, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_InvertY' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_DamageNumbers) == 0x000072, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_DamageNumbers' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Text_Chat) == 0x000073, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Text_Chat' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Load_game_Remove_Aiming_FOV_) == 0x000074, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Load_game_Remove_Aiming_FOV_' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked_5) == 0x000075, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked_5' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_SelectedItem_1) == 0x000078, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_SelectionType_1) == 0x000088, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_SelectedItem) == 0x000090, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_SelectionType) == 0x0000A0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_Value) == 0x0000A4, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked_4) == 0x0000A8, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked_4' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked_3) == 0x0000A9, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked_2) == 0x0000AA, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_DynamicCast_AsPlayer_Controller_BP) == 0x0000B8, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_DynamicCast_AsPlayer_Controller_BP' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x0000C1, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_ComponentBoundEvent_bIsChecked) == 0x0000C2, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_SetValue_InValue_NarrowingCast) == 0x0000C4, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_SetValue_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_VariableSet_BFOV_WideningCast) == 0x0000C8, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_VariableSet_BFOV_WideningCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_UpdateSens_InValue_NarrowingCast) == 0x0000D0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_UpdateSens_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Sniper_Sens_Updateinator_InValue_NarrowingCast) == 0x0000D4, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Sniper_Sens_Updateinator_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Pistol_Buss_Updateinator_InValue_NarrowingCast) == 0x0000D8, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Pistol_Buss_Updateinator_InValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast) == 0x0000DC, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Save_game_Mouse_sens_WideningCast) == 0x0000E0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Save_game_Mouse_sens_WideningCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, CallFunc_Save_game_SniperSens_WideningCast) == 0x0000E8, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::CallFunc_Save_game_SniperSens_WideningCast' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew, K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast) == 0x0000F0, "Member 'OptionsMenuNew_C_ExecuteUbergraph_OptionsMenuNew::K2Node_VariableSet_Blunder_Pistol_Sens_WideningCast' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_TextChatTickBox_1_K2Node_ComponentBoundEvent_12_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_PistolBussSensSlider_K2Node_ComponentBoundEvent_7_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_InvertYCheck_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_HitmarkerType_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_DamageNumbers_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_ComboBoxString_0_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_1_K2Node_ComponentBoundEvent_8_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenuNew_CheckBox_0_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_1_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function OptionsMenuNew.OptionsMenuNew_C.BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuNew_C_BndEvt__OptionsMenu_Slider_122_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

}

