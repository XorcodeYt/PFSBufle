#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Fart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Fart.Fart_C
// 0x0028 (0x02B8 - 0x0290)
class UFart_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CircleVar;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_Value;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_Fart(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Fart_C">();
	}
	static class UFart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFart_C>();
	}
};
static_assert(alignof(UFart_C) == 0x000008, "Wrong alignment on UFart_C");
static_assert(sizeof(UFart_C) == 0x0002B8, "Wrong size on UFart_C");
static_assert(offsetof(UFart_C, UberGraphFrame) == 0x000290, "Member 'UFart_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFart_C, Fade) == 0x000298, "Member 'UFart_C::Fade' has a wrong offset!");
static_assert(offsetof(UFart_C, Image_0) == 0x0002A0, "Member 'UFart_C::Image_0' has a wrong offset!");
static_assert(offsetof(UFart_C, CircleVar) == 0x0002A8, "Member 'UFart_C::CircleVar' has a wrong offset!");
static_assert(offsetof(UFart_C, Time_Value) == 0x0002B0, "Member 'UFart_C::Time_Value' has a wrong offset!");

}

