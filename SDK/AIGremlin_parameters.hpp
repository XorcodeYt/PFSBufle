#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIGremlin

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AIGremlin.AIGremlin_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on AIGremlin_C_ReceiveActorEndOverlap");
static_assert(sizeof(AIGremlin_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on AIGremlin_C_ReceiveActorEndOverlap");
static_assert(offsetof(AIGremlin_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'AIGremlin_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on AIGremlin_C_ReceiveActorBeginOverlap");
static_assert(sizeof(AIGremlin_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on AIGremlin_C_ReceiveActorBeginOverlap");
static_assert(offsetof(AIGremlin_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'AIGremlin_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27
// 0x0001 (0x0001 - 0x0000)
struct AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27) == 0x000001, "Wrong alignment on AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27");
static_assert(sizeof(AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27) == 0x000001, "Wrong size on AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27");
static_assert(offsetof(AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27, MovementResult) == 0x000000, "Member 'AIGremlin_C_OnSuccess_CC82E9FF419B1E2AFA1921AF42F0AA27::MovementResult' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct AIGremlin_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on AIGremlin_C_ReceiveAnyDamage");
static_assert(sizeof(AIGremlin_C_ReceiveAnyDamage) == 0x000020, "Wrong size on AIGremlin_C_ReceiveAnyDamage");
static_assert(offsetof(AIGremlin_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'AIGremlin_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'AIGremlin_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'AIGremlin_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'AIGremlin_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.HitMulticast
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_HitMulticast final
{
public:
	class UAudioComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_HitMulticast) == 0x000008, "Wrong alignment on AIGremlin_C_HitMulticast");
static_assert(sizeof(AIGremlin_C_HitMulticast) == 0x000008, "Wrong size on AIGremlin_C_HitMulticast");
static_assert(offsetof(AIGremlin_C_HitMulticast, Target) == 0x000000, "Member 'AIGremlin_C_HitMulticast::Target' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.ExecuteUbergraph_AIGremlin
// 0x06C0 (0x06C0 - 0x0000)
struct AIGremlin_C_ExecuteUbergraph_AIGremlin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x00B8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_Target_3;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Target_2;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        K2Node_CustomEvent_Target_1;                       // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        K2Node_CustomEvent_Target;                         // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x01E8(0x0010)(ReferenceParm)
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_ComponentBoundEvent_Pawn;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0258(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      K2Node_DynamicCast_AsTrain_Gus_Player_1;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x03D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x03F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE[0x2];                                      // 0x04DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATrainGusPlayer_C*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x05F8(0x0010)(ReferenceParm)
	float                                         CallFunc_FindNearestActor_Distance;                // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindNearestActor_ReturnValue;             // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0640(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGoblindead_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast;             // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_ExecuteUbergraph_AIGremlin) == 0x000010, "Wrong alignment on AIGremlin_C_ExecuteUbergraph_AIGremlin");
static_assert(sizeof(AIGremlin_C_ExecuteUbergraph_AIGremlin) == 0x0006C0, "Wrong size on AIGremlin_C_ExecuteUbergraph_AIGremlin");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, EntryPoint) == 0x000000, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_MovementResult_1) == 0x000048, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_MovementResult) == 0x00005C, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_byte_Variable) == 0x000070, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_object_Variable) == 0x000078, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_GetAIController_ReturnValue) == 0x000090, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000098, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0000A0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0000A8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0000B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0000B4, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0000B8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0001A0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0001A8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0001B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0001B8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_int_Loop_Counter_Variable) == 0x0001BC, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_Target_3) == 0x0001C8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_Target_3' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_Target_2) == 0x0001D0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_Target_1) == 0x0001D8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_CustomEvent_Target) == 0x0001E0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001E8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_OtherActor_1) == 0x0001F8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_OtherActor) == 0x000200, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_Pawn) == 0x000208, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_Pawn' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_DynamicCast_AsTrain_Gus_Player) == 0x000210, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_DynamicCast_AsTrain_Gus_Player' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_RandomFloat_ReturnValue) == 0x000220, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000228, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000230, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_FClamp_ReturnValue) == 0x000238, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000240, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000248, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_Damage) == 0x000250, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_DamageType) == 0x000258, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_InstigatedBy) == 0x000260, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_Event_DamageCauser) == 0x000268, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_DynamicCast_AsTrain_Gus_Player_1) == 0x000270, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_DynamicCast_AsTrain_Gus_Player_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000280, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_int_Array_Index_Variable) == 0x000288, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000290, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000298, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002A0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0002A8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002AC, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_SweepResult) == 0x0002B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_bool_Has_Been_Initd_Variable) == 0x000398, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, Temp_bool_IsClosed_Variable) == 0x000399, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0003A0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherActor) == 0x0003A8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherComp) == 0x0003B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0003B8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003C0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_SphereTraceMulti_OutHits) == 0x0003D8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_SphereTraceMulti_ReturnValue) == 0x0003E8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Array_Get_Item) == 0x0003F0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Array_Length_ReturnValue) == 0x0004D8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_bBlockingHit) == 0x0004DC, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_bInitialOverlap) == 0x0004DD, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_Time) == 0x0004E0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_Distance) == 0x0004E4, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_Location) == 0x0004E8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_ImpactPoint) == 0x000500, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_Normal) == 0x000518, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_ImpactNormal) == 0x000530, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_PhysMat) == 0x000548, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_HitActor) == 0x000550, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_HitComponent) == 0x000558, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_HitBoneName) == 0x000560, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_BoneName) == 0x000568, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_HitItem) == 0x000570, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_ElementIndex) == 0x000574, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_FaceIndex) == 0x000578, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_TraceStart) == 0x000580, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BreakHitResult_TraceEnd) == 0x000598, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Less_IntInt_ReturnValue) == 0x0005B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_GetObjectClass_ReturnValue) == 0x0005B8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0005C0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_ApplyDamage_ReturnValue) == 0x0005C4, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0005C8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_VLerp_ReturnValue) == 0x0005E0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0005F8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_FindNearestActor_Distance) == 0x000608, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_FindNearestActor_Distance' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_FindNearestActor_ReturnValue) == 0x000610, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_FindNearestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000618, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_IsValid_ReturnValue) == 0x000620, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000628, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_MakeTransform_ReturnValue) == 0x000640, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0006A0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_FinishSpawningActor_ReturnValue) == 0x0006A8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Delay_Duration_NarrowingCast) == 0x0006B0, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Delay_Duration_NarrowingCast' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_ExecuteUbergraph_AIGremlin, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x0006B8, "Member 'AIGremlin_C_ExecuteUbergraph_AIGremlin::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.Deadserver
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_Deadserver final
{
public:
	class AController*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_Deadserver) == 0x000008, "Wrong alignment on AIGremlin_C_Deadserver");
static_assert(sizeof(AIGremlin_C_Deadserver) == 0x000008, "Wrong size on AIGremlin_C_Deadserver");
static_assert(offsetof(AIGremlin_C_Deadserver, Target) == 0x000000, "Member 'AIGremlin_C_Deadserver::Target' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.DeadMulticast
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_DeadMulticast final
{
public:
	class AController*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_DeadMulticast) == 0x000008, "Wrong alignment on AIGremlin_C_DeadMulticast");
static_assert(sizeof(AIGremlin_C_DeadMulticast) == 0x000008, "Wrong size on AIGremlin_C_DeadMulticast");
static_assert(offsetof(AIGremlin_C_DeadMulticast, Target) == 0x000000, "Member 'AIGremlin_C_DeadMulticast::Target' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AIGremlin_C_BndEvt__AIGremlin_WidgetBoundary_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AIGremlin_C_BndEvt__AIGremlin_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature");
static_assert(sizeof(AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong size on AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature");
static_assert(offsetof(AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature, Pawn) == 0x000000, "Member 'AIGremlin_C_BndEvt__AIGremlin_PawnSensing_K2Node_ComponentBoundEvent_2_SeePawnDelegate__DelegateSignature::Pawn' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27
// 0x0001 (0x0001 - 0x0000)
struct AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27) == 0x000001, "Wrong alignment on AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27");
static_assert(sizeof(AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27) == 0x000001, "Wrong size on AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27");
static_assert(offsetof(AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27, MovementResult) == 0x000000, "Member 'AIGremlin_C_OnFail_CC82E9FF419B1E2AFA1921AF42F0AA27::MovementResult' has a wrong offset!");

// Function AIGremlin.AIGremlin_C.HitServer
// 0x0008 (0x0008 - 0x0000)
struct AIGremlin_C_HitServer final
{
public:
	class UAudioComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIGremlin_C_HitServer) == 0x000008, "Wrong alignment on AIGremlin_C_HitServer");
static_assert(sizeof(AIGremlin_C_HitServer) == 0x000008, "Wrong size on AIGremlin_C_HitServer");
static_assert(offsetof(AIGremlin_C_HitServer, Target) == 0x000000, "Member 'AIGremlin_C_HitServer::Target' has a wrong offset!");

}

