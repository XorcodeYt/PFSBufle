#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GusAnimBpNewer

#include "Basic.hpp"

#include "GusAnimBpNewer_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass GusAnimBpNewer.GusAnimBpNewer_C
// 0x1A70 (0x1DC0 - 0x0350)
class UGusAnimBpNewer_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct GusAnimBpNewer::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;               // 0x0358(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0378(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x03A0(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x05E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0610(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x0650(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0670(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x06B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x06D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0710(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0730(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x0770(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0790(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x07F8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0818(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0880(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x08A0(0x00B8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0958(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0A80(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0AA0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x0AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0AE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0B10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x0B38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x0B60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0B88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0BB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0BD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0CA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0CC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0CF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0D40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0D68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0D90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0DE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0E08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0E30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0E58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0E80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0EA8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0ED0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x0F10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0F30(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0F70(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0F90(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0FD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0FF0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1030(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1050(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1090(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x10B0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x10F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1110(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1150(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1170(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x11B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x11D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1210(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1230(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1270(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1290(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x12D0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x12F0(0x00B8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x13A8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x13F0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x14F8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1520(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1600(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1628(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1698(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x16C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x16E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x17B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x17D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x18A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x18C8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1908(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1928(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1968(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1988(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x19C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x19E8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1A28(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1A48(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1A88(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1AA8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1AE8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1B08(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1B48(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1B68(0x00B8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1C20(0x0048)()
	bool                                          Is_Falling;                                        // 0x1C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C69[0x7];                                     // 0x1C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x1C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HeadRotation;                                      // 0x1C78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Gun_transform;                                     // 0x1C90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA8[0x8];                                     // 0x1CA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Effector_Transform;                                // 0x1CB0(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Alpha;                                             // 0x1D10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D14[0x4];                                     // 0x1D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGusPlayer_C*                           GusRefrence;                                       // 0x1D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Head_looking;                                      // 0x1D20(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               BodyPitch;                                         // 0x1D80(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ATrainGusPlayer_C*                      TrainGusRefrence;                                  // 0x1D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead_;                                             // 0x1DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Twerking_;                                         // 0x1DA1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlintlockEqupped;                                  // 0x1DA2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlintlockAim;                                      // 0x1DA3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Holding_weapon_right_now_;                         // 0x1DA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_Blunderbomb;                              // 0x1DA5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Throwing_blunderbomb;                              // 0x1DA6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Me_got_bannana;                                    // 0x1DA7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eating_Bannana;                                    // 0x1DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eye_of_Reach_Equipped_rightnow;                    // 0x1DA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Two_handed_anim_;                                  // 0x1DAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EOR_aimer;                                         // 0x1DAB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blunderbuss_Equipped;                              // 0x1DAC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Emoting;                                           // 0x1DAD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blunder_Aimer;                                     // 0x1DAE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Reloading_Blunderbuss_;                         // 0x1DAF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Reloading_EOR_;                                 // 0x1DB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Reloading_Flintlock_;                           // 0x1DB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Twerk_Emote;                                       // 0x1DB2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kicker_Emote;                                      // 0x1DB3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inside_Cannon_;                                    // 0x1DB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hand_Cannon_Equiped_Right_Now;                     // 0x1DB5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reload_Cannon_;                                    // 0x1DB6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnNewFunction_0(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Footsteps_Multicast();
	void Footstep_Sound_Server(EPhysicalSurface Selection, const struct FVector& Location);
	void Footstep_Sound_Multicast(EPhysicalSurface Selection, const struct FVector& Location);
	void ExecuteUbergraph_GusAnimBpNewer(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GusAnimBpNewer_AnimGraphNode_TransitionResult_504CB1DA4042BE61DCAA15856D4C2485();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GusAnimBpNewer_AnimGraphNode_TransitionResult_1481D35B41056CDB56881690B69F23D3();
	void BodyPitchServer(float Body_Pitch_X__Roll_);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void AnimNotify_Footstep();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GusAnimBpNewer_C">();
	}
	static class UGusAnimBpNewer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGusAnimBpNewer_C>();
	}
};
static_assert(alignof(UGusAnimBpNewer_C) == 0x000010, "Wrong alignment on UGusAnimBpNewer_C");
static_assert(sizeof(UGusAnimBpNewer_C) == 0x001DC0, "Wrong size on UGusAnimBpNewer_C");
static_assert(offsetof(UGusAnimBpNewer_C, UberGraphFrame) == 0x000350, "Member 'UGusAnimBpNewer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, __AnimBlueprintMutables) == 0x000358, "Member 'UGusAnimBpNewer_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UGusAnimBpNewer_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UGusAnimBpNewer_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_UseCachedPose_2) == 0x000378, "Member 'UGusAnimBpNewer_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0003A0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_51) == 0x000480, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_50) == 0x0004A8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_49) == 0x0004D0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_48) == 0x0004F8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_47) == 0x000520, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_46) == 0x000548, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_45) == 0x000570, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_44) == 0x000598, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_43) == 0x0005C0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_42) == 0x0005E8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_21) == 0x000610, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_23) == 0x000650, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_20) == 0x000670, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_22) == 0x0006B0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_19) == 0x0006D0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_21) == 0x000710, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_18) == 0x000730, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_20) == 0x000770, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000790, "Member 'UGusAnimBpNewer_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_19) == 0x0007F8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_BlendSpacePlayer) == 0x000818, "Member 'UGusAnimBpNewer_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_18) == 0x000880, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateMachine_2) == 0x0008A0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_ModifyBone) == 0x000958, "Member 'UGusAnimBpNewer_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_LocalToComponentSpace) == 0x000A80, "Member 'UGusAnimBpNewer_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_ComponentToLocalSpace) == 0x000AA0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_41) == 0x000AC0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_40) == 0x000AE8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_39) == 0x000B10, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_38) == 0x000B38, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_37) == 0x000B60, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_36) == 0x000B88, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_35) == 0x000BB0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_34) == 0x000BD8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_33) == 0x000C00, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_32) == 0x000C28, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_31) == 0x000C50, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_30) == 0x000C78, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_29) == 0x000CA0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_28) == 0x000CC8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_27) == 0x000CF0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_26) == 0x000D18, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_25) == 0x000D40, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_24) == 0x000D68, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_23) == 0x000D90, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_22) == 0x000DB8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_21) == 0x000DE0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_20) == 0x000E08, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_19) == 0x000E30, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_18) == 0x000E58, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_17) == 0x000E80, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_16) == 0x000EA8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_17) == 0x000ED0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_17) == 0x000F10, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_16) == 0x000F30, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_16) == 0x000F70, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_15) == 0x000F90, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_15) == 0x000FD0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_14) == 0x000FF0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_14) == 0x001030, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_13) == 0x001050, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_13) == 0x001090, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_12) == 0x0010B0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_12) == 0x0010F0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_11) == 0x001110, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_11) == 0x001150, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_10) == 0x001170, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_10) == 0x0011B0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_9) == 0x0011D0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_9) == 0x001210, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_8) == 0x001230, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_8) == 0x001270, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_7) == 0x001290, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_7) == 0x0012D0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateMachine_1) == 0x0012F0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_BlendListByBool_1) == 0x0013A8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SaveCachedPose) == 0x0013F0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_UseCachedPose_1) == 0x0014F8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_LayeredBoneBlend) == 0x001520, "Member 'UGusAnimBpNewer_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_UseCachedPose) == 0x001600, "Member 'UGusAnimBpNewer_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_Root) == 0x001628, "Member 'UGusAnimBpNewer_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_15) == 0x001648, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_14) == 0x001670, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_13) == 0x001698, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_12) == 0x0016C0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_11) == 0x0016E8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_10) == 0x001710, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_9) == 0x001738, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_8) == 0x001760, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_7) == 0x001788, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_6) == 0x0017B0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_5) == 0x0017D8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_4) == 0x001800, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_3) == 0x001828, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_2) == 0x001850, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult_1) == 0x001878, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_TransitionResult) == 0x0018A0, "Member 'UGusAnimBpNewer_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_6) == 0x0018C8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_6) == 0x001908, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_5) == 0x001928, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_5) == 0x001968, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_4) == 0x001988, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_4) == 0x0019C8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_3) == 0x0019E8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_3) == 0x001A28, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_2) == 0x001A48, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_2) == 0x001A88, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer_1) == 0x001AA8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult_1) == 0x001AE8, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_SequencePlayer) == 0x001B08, "Member 'UGusAnimBpNewer_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateResult) == 0x001B48, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_StateMachine) == 0x001B68, "Member 'UGusAnimBpNewer_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, AnimGraphNode_BlendListByBool) == 0x001C20, "Member 'UGusAnimBpNewer_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Is_Falling) == 0x001C68, "Member 'UGusAnimBpNewer_C::Is_Falling' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Speed) == 0x001C70, "Member 'UGusAnimBpNewer_C::Speed' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, HeadRotation) == 0x001C78, "Member 'UGusAnimBpNewer_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Gun_transform) == 0x001C90, "Member 'UGusAnimBpNewer_C::Gun_transform' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Effector_Transform) == 0x001CB0, "Member 'UGusAnimBpNewer_C::Effector_Transform' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Alpha) == 0x001D10, "Member 'UGusAnimBpNewer_C::Alpha' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, GusRefrence) == 0x001D18, "Member 'UGusAnimBpNewer_C::GusRefrence' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Head_looking) == 0x001D20, "Member 'UGusAnimBpNewer_C::Head_looking' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, BodyPitch) == 0x001D80, "Member 'UGusAnimBpNewer_C::BodyPitch' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, TrainGusRefrence) == 0x001D98, "Member 'UGusAnimBpNewer_C::TrainGusRefrence' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Dead_) == 0x001DA0, "Member 'UGusAnimBpNewer_C::Dead_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Twerking_) == 0x001DA1, "Member 'UGusAnimBpNewer_C::Twerking_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, FlintlockEqupped) == 0x001DA2, "Member 'UGusAnimBpNewer_C::FlintlockEqupped' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, FlintlockAim) == 0x001DA3, "Member 'UGusAnimBpNewer_C::FlintlockAim' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Holding_weapon_right_now_) == 0x001DA4, "Member 'UGusAnimBpNewer_C::Holding_weapon_right_now_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Equipped_Blunderbomb) == 0x001DA5, "Member 'UGusAnimBpNewer_C::Equipped_Blunderbomb' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Throwing_blunderbomb) == 0x001DA6, "Member 'UGusAnimBpNewer_C::Throwing_blunderbomb' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Me_got_bannana) == 0x001DA7, "Member 'UGusAnimBpNewer_C::Me_got_bannana' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Eating_Bannana) == 0x001DA8, "Member 'UGusAnimBpNewer_C::Eating_Bannana' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Eye_of_Reach_Equipped_rightnow) == 0x001DA9, "Member 'UGusAnimBpNewer_C::Eye_of_Reach_Equipped_rightnow' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Two_handed_anim_) == 0x001DAA, "Member 'UGusAnimBpNewer_C::Two_handed_anim_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, EOR_aimer) == 0x001DAB, "Member 'UGusAnimBpNewer_C::EOR_aimer' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Blunderbuss_Equipped) == 0x001DAC, "Member 'UGusAnimBpNewer_C::Blunderbuss_Equipped' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Emoting) == 0x001DAD, "Member 'UGusAnimBpNewer_C::Emoting' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Blunder_Aimer) == 0x001DAE, "Member 'UGusAnimBpNewer_C::Blunder_Aimer' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Is_Reloading_Blunderbuss_) == 0x001DAF, "Member 'UGusAnimBpNewer_C::Is_Reloading_Blunderbuss_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Is_Reloading_EOR_) == 0x001DB0, "Member 'UGusAnimBpNewer_C::Is_Reloading_EOR_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Is_Reloading_Flintlock_) == 0x001DB1, "Member 'UGusAnimBpNewer_C::Is_Reloading_Flintlock_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Twerk_Emote) == 0x001DB2, "Member 'UGusAnimBpNewer_C::Twerk_Emote' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Kicker_Emote) == 0x001DB3, "Member 'UGusAnimBpNewer_C::Kicker_Emote' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Inside_Cannon_) == 0x001DB4, "Member 'UGusAnimBpNewer_C::Inside_Cannon_' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Hand_Cannon_Equiped_Right_Now) == 0x001DB5, "Member 'UGusAnimBpNewer_C::Hand_Cannon_Equiped_Right_Now' has a wrong offset!");
static_assert(offsetof(UGusAnimBpNewer_C, Reload_Cannon_) == 0x001DB6, "Member 'UGusAnimBpNewer_C::Reload_Cannon_' has a wrong offset!");

}

