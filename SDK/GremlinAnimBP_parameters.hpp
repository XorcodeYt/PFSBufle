#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GremlinAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GremlinAnimBP.GremlinAnimBP_C.ExecuteUbergraph_GremlinAnimBP
// 0x0030 (0x0030 - 0x0000)
struct GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIGremlin_C*                           K2Node_DynamicCast_AsAIGremlin;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP) == 0x000008, "Wrong alignment on GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP");
static_assert(sizeof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP) == 0x000030, "Wrong size on GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, EntryPoint) == 0x000000, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, CallFunc_GetMovementComponent_ReturnValue) == 0x000010, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, K2Node_DynamicCast_AsAIGremlin) == 0x000018, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::K2Node_DynamicCast_AsAIGremlin' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'GremlinAnimBP_C_ExecuteUbergraph_GremlinAnimBP::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function GremlinAnimBP.GremlinAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct GremlinAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GremlinAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on GremlinAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(GremlinAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on GremlinAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(GremlinAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'GremlinAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function GremlinAnimBP.GremlinAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct GremlinAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(GremlinAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on GremlinAnimBP_C_AnimGraph");
static_assert(sizeof(GremlinAnimBP_C_AnimGraph) == 0x000010, "Wrong size on GremlinAnimBP_C_AnimGraph");
static_assert(offsetof(GremlinAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'GremlinAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

