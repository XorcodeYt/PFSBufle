#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RocketFreemanAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass RocketFreemanAnimBP.RocketFreemanAnimBP_C
// 0x04C0 (0x0810 - 0x0350)
class URocketFreemanAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0368(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0388(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x03A8(0x0128)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04F8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0520(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0560(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0580(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05C0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05E0(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0698(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x07A0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x07C8(0x0020)()
	bool                                          Is_Moving_;                                        // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation_of_Camera;                                // 0x07F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_RocketFreemanAnimBP(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_RocketFreemanAnimBP_AnimGraphNode_ModifyBone_98219744451EC9761938F694BDDC7C5A();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RocketFreemanAnimBP_C">();
	}
	static class URocketFreemanAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URocketFreemanAnimBP_C>();
	}
};
static_assert(alignof(URocketFreemanAnimBP_C) == 0x000010, "Wrong alignment on URocketFreemanAnimBP_C");
static_assert(sizeof(URocketFreemanAnimBP_C) == 0x000810, "Wrong size on URocketFreemanAnimBP_C");
static_assert(offsetof(URocketFreemanAnimBP_C, UberGraphFrame) == 0x000350, "Member 'URocketFreemanAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'URocketFreemanAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'URocketFreemanAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000368, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000388, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_ModifyBone) == 0x0003A8, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0004D0, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_TransitionResult) == 0x0004F8, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000520, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_StateResult_1) == 0x000560, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000580, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_StateResult) == 0x0005C0, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_StateMachine) == 0x0005E0, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x000698, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_UseCachedPose) == 0x0007A0, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, AnimGraphNode_Root) == 0x0007C8, "Member 'URocketFreemanAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, Is_Moving_) == 0x0007E8, "Member 'URocketFreemanAnimBP_C::Is_Moving_' has a wrong offset!");
static_assert(offsetof(URocketFreemanAnimBP_C, Rotation_of_Camera) == 0x0007F0, "Member 'URocketFreemanAnimBP_C::Rotation_of_Camera' has a wrong offset!");

}

