#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EyeOfReach_Projectile_Client

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EyeOfReach_Projectile_Client.EyeOfReach_Projectile_Client_C
// 0x01B8 (0x0430 - 0x0278)
class AEyeOfReach_Projectile_Client_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      bullet_trail;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      BulletWithTrail;                                   // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  RadialForce;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   cannonball;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           Projectile;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollisionComponent;                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Spawn_Transform;                                   // 0x02C0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Condition;                                         // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Other_Team;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Owner_Team;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Hit_Actor;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ImDone;                                            // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit_Result;                                        // 0x0348(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ExecuteUbergraph_EyeOfReach_Projectile_Client(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EyeOfReach_Projectile_Client_C">();
	}
	static class AEyeOfReach_Projectile_Client_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEyeOfReach_Projectile_Client_C>();
	}
};
static_assert(alignof(AEyeOfReach_Projectile_Client_C) == 0x000010, "Wrong alignment on AEyeOfReach_Projectile_Client_C");
static_assert(sizeof(AEyeOfReach_Projectile_Client_C) == 0x000430, "Wrong size on AEyeOfReach_Projectile_Client_C");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, UberGraphFrame) == 0x000278, "Member 'AEyeOfReach_Projectile_Client_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, bullet_trail) == 0x000280, "Member 'AEyeOfReach_Projectile_Client_C::bullet_trail' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, BulletWithTrail) == 0x000288, "Member 'AEyeOfReach_Projectile_Client_C::BulletWithTrail' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, RadialForce) == 0x000290, "Member 'AEyeOfReach_Projectile_Client_C::RadialForce' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Arrow) == 0x000298, "Member 'AEyeOfReach_Projectile_Client_C::Arrow' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, cannonball) == 0x0002A0, "Member 'AEyeOfReach_Projectile_Client_C::cannonball' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Projectile) == 0x0002A8, "Member 'AEyeOfReach_Projectile_Client_C::Projectile' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, CollisionComponent) == 0x0002B0, "Member 'AEyeOfReach_Projectile_Client_C::CollisionComponent' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Spawn_Transform) == 0x0002C0, "Member 'AEyeOfReach_Projectile_Client_C::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Condition) == 0x000320, "Member 'AEyeOfReach_Projectile_Client_C::Condition' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Other_Team) == 0x000328, "Member 'AEyeOfReach_Projectile_Client_C::Other_Team' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Owner_Team) == 0x000330, "Member 'AEyeOfReach_Projectile_Client_C::Owner_Team' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Hit_Actor) == 0x000338, "Member 'AEyeOfReach_Projectile_Client_C::Hit_Actor' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, ImDone) == 0x000340, "Member 'AEyeOfReach_Projectile_Client_C::ImDone' has a wrong offset!");
static_assert(offsetof(AEyeOfReach_Projectile_Client_C, Hit_Result) == 0x000348, "Member 'AEyeOfReach_Projectile_Client_C::Hit_Result' has a wrong offset!");

}

