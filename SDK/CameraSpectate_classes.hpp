#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraSpectate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CameraSpectate.CameraSpectate_C
// 0x00D0 (0x03F0 - 0x0320)
class ACameraSpectate_C final : public ASpectatorPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Pivot;                                             // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnPoint_Dock1;                                  // 0x0340(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnPoint_Dock2;                                  // 0x0358(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killed_By_ActorRef;                                // 0x0370(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BorderHudAnim;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Condition;                                         // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Followcam_;                                        // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Menuabler_;                                        // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMenuOn;                                          // 0x038B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Equipped_weapon;                                   // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Equipped_weapon_2;                                 // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Player_Title;                                      // 0x0398(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class ATrainGusPlayer_C*                      Gusref;                                            // 0x03B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CTF_Red_Score;                                     // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CTF_Blue_Score;                                    // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AHUD_BP_C*                              HudRef;                                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATrainGusPlayer_C*>              GusrefAll;                                         // 0x03C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, ExposeOnSpawn)
	class ATrainGusPlayer_C*                      GusrefPicker;                                      // 0x03D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Gustag;                                            // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount_of_gus;                                     // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CameraLag_;                                        // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hud_;                                              // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         In_Field_Of_View;                                  // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void VoteUpdate(int32 Ay, int32 Ny);
	void UpdateKickFart();
	void Spawn_The_Widgets(class APlayerController* OwningPlayer);
	void SomeoneVoted(const class FText& PersonWhoVoted, bool TheirVote, class APlayerStateBP_C* Player_State);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void LogOn_ed();
	void Kickfart(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow);
	void Just_Possesed_Pawn(class APawn* Pawn);
	void Spawn_Gus_The_Spire_Docks(class AController* Target, int32 My_team, class APlayerController* PlayerController);
	void Spawn_Gus_TDMer_Island(class AController* Target, int32 My_team, class APlayerController* PlayerController);
	void InpActEvt_V_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_R_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_H_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_G_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_F_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void ExecuteUbergraph_CameraSpectate(int32 EntryPoint);
	void Create_The_menu_widget(class APlayerController* OwningPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraSpectate_C">();
	}
	static class ACameraSpectate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraSpectate_C>();
	}
};
static_assert(alignof(ACameraSpectate_C) == 0x000008, "Wrong alignment on ACameraSpectate_C");
static_assert(sizeof(ACameraSpectate_C) == 0x0003F0, "Wrong size on ACameraSpectate_C");
static_assert(offsetof(ACameraSpectate_C, UberGraphFrame) == 0x000320, "Member 'ACameraSpectate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Pivot) == 0x000328, "Member 'ACameraSpectate_C::Pivot' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, SpringArm) == 0x000330, "Member 'ACameraSpectate_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Camera) == 0x000338, "Member 'ACameraSpectate_C::Camera' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, SpawnPoint_Dock1) == 0x000340, "Member 'ACameraSpectate_C::SpawnPoint_Dock1' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, SpawnPoint_Dock2) == 0x000358, "Member 'ACameraSpectate_C::SpawnPoint_Dock2' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Killed_By_ActorRef) == 0x000370, "Member 'ACameraSpectate_C::Killed_By_ActorRef' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, BorderHudAnim) == 0x000378, "Member 'ACameraSpectate_C::BorderHudAnim' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Condition) == 0x000388, "Member 'ACameraSpectate_C::Condition' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Followcam_) == 0x000389, "Member 'ACameraSpectate_C::Followcam_' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Menuabler_) == 0x00038A, "Member 'ACameraSpectate_C::Menuabler_' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, IsMenuOn) == 0x00038B, "Member 'ACameraSpectate_C::IsMenuOn' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Team) == 0x00038C, "Member 'ACameraSpectate_C::Team' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Equipped_weapon) == 0x000390, "Member 'ACameraSpectate_C::Equipped_weapon' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Equipped_weapon_2) == 0x000394, "Member 'ACameraSpectate_C::Equipped_weapon_2' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Player_Title) == 0x000398, "Member 'ACameraSpectate_C::Player_Title' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Gusref) == 0x0003B0, "Member 'ACameraSpectate_C::Gusref' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, CTF_Red_Score) == 0x0003B8, "Member 'ACameraSpectate_C::CTF_Red_Score' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, CTF_Blue_Score) == 0x0003BC, "Member 'ACameraSpectate_C::CTF_Blue_Score' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, HudRef) == 0x0003C0, "Member 'ACameraSpectate_C::HudRef' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, GusrefAll) == 0x0003C8, "Member 'ACameraSpectate_C::GusrefAll' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, GusrefPicker) == 0x0003D8, "Member 'ACameraSpectate_C::GusrefPicker' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Gustag) == 0x0003E0, "Member 'ACameraSpectate_C::Gustag' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Amount_of_gus) == 0x0003E4, "Member 'ACameraSpectate_C::Amount_of_gus' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, CameraLag_) == 0x0003E8, "Member 'ACameraSpectate_C::CameraLag_' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, Hud_) == 0x0003E9, "Member 'ACameraSpectate_C::Hud_' has a wrong offset!");
static_assert(offsetof(ACameraSpectate_C, In_Field_Of_View) == 0x0003EC, "Member 'ACameraSpectate_C::In_Field_Of_View' has a wrong offset!");

}

