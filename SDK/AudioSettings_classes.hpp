#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AudioSettings.AudioSettings_C
// 0x00A0 (0x0330 - 0x0290)
class UAudioSettings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USlider*                                EnviromentVolumeSlider;                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                FovSlider;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MusicVolumeSlider;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_127;                                     // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ATrainGusPlayer_C*                      Char_REF;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BFOV;                                              // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sens2;                                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARocketeer_C*                           Char_REF_0;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveOptions_C*                         SaverSubClass;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Game_save1;                                        // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USaveGame*                              SaveOptions;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Load_Settings;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Master_Audio;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnviromentAudioVar;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Music_Audio_Var;                                   // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update_Widget(double Audio_Master);
	void Update_Music_Slider(double Audio_Master);
	void Update_Enviromnt_slider(double Audio_Master);
	float SensSliderPlacement();
	void Save_game(double Master_Audio_0, double EnviromentAudio, double Music_Audio);
	void Load_game(double* Master_Audio_0, double* EnviromentAudio, double* MusicAudio);
	class FText GetText_2();
	class FText GetText_1();
	class FText GetText_0();
	class FText Get_TextBlock_1_Text_0();
	float Get_SniperSensSlider_Value_0();
	void ExecuteUbergraph_AudioSettings(int32 EntryPoint);
	class FText Enviroment_Audio();
	void Construct();
	void BndEvt__AudioSettings_MusicVolumeSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__AudioSettings_FovSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__AudioSettings_EnviromentVolumeSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AudioSettings_C">();
	}
	static class UAudioSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioSettings_C>();
	}
};
static_assert(alignof(UAudioSettings_C) == 0x000008, "Wrong alignment on UAudioSettings_C");
static_assert(sizeof(UAudioSettings_C) == 0x000330, "Wrong size on UAudioSettings_C");
static_assert(offsetof(UAudioSettings_C, UberGraphFrame) == 0x000290, "Member 'UAudioSettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, EnviromentVolumeSlider) == 0x000298, "Member 'UAudioSettings_C::EnviromentVolumeSlider' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, FovSlider) == 0x0002A0, "Member 'UAudioSettings_C::FovSlider' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, MusicVolumeSlider) == 0x0002A8, "Member 'UAudioSettings_C::MusicVolumeSlider' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, TextBlock) == 0x0002B0, "Member 'UAudioSettings_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, TextBlock_1) == 0x0002B8, "Member 'UAudioSettings_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, TextBlock_127) == 0x0002C0, "Member 'UAudioSettings_C::TextBlock_127' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Char_REF) == 0x0002C8, "Member 'UAudioSettings_C::Char_REF' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, BFOV) == 0x0002D0, "Member 'UAudioSettings_C::BFOV' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Sens2) == 0x0002D8, "Member 'UAudioSettings_C::Sens2' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Char_REF_0) == 0x0002E0, "Member 'UAudioSettings_C::Char_REF_0' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, SaverSubClass) == 0x0002E8, "Member 'UAudioSettings_C::SaverSubClass' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Game_save1) == 0x0002F0, "Member 'UAudioSettings_C::Game_save1' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, SaveOptions) == 0x000300, "Member 'UAudioSettings_C::SaveOptions' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Load_Settings) == 0x000308, "Member 'UAudioSettings_C::Load_Settings' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Master_Audio) == 0x000318, "Member 'UAudioSettings_C::Master_Audio' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, EnviromentAudioVar) == 0x000320, "Member 'UAudioSettings_C::EnviromentAudioVar' has a wrong offset!");
static_assert(offsetof(UAudioSettings_C, Music_Audio_Var) == 0x000328, "Member 'UAudioSettings_C::Music_Audio_Var' has a wrong offset!");

}

