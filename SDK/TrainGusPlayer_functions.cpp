#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrainGusPlayer

#include "Basic.hpp"

#include "TrainGusPlayer_classes.hpp"
#include "TrainGusPlayer_parameters.hpp"


namespace SDK
{

// Function TrainGusPlayer.TrainGusPlayer_C.WoodInitial
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::WoodInitial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "WoodInitial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Weapon Sound Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Owner_Player_State                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Weapon_Sound_Server(class UObject* Owner_Player_State, class USceneComponent* AttachToComponent, class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Weapon Sound Server");

	Params::TrainGusPlayer_C_Weapon_Sound_Server Parms{};

	Parms.Owner_Player_State = Owner_Player_State;
	Parms.AttachToComponent = AttachToComponent;
	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Weapon Sound Multicast
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UObject*>&           List_of_Players_0                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Owner_Player_State                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Weapon_Sound_Multicast(const TArray<class UObject*>& List_of_Players_0, class UObject* Owner_Player_State, class USceneComponent* AttachToComponent, class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Weapon Sound Multicast");

	Params::TrainGusPlayer_C_Weapon_Sound_Multicast Parms{};

	Parms.List_of_Players_0 = std::move(List_of_Players_0);
	Parms.Owner_Player_State = Owner_Player_State;
	Parms.AttachToComponent = AttachToComponent;
	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Waterstuff
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Waterstuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Waterstuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.VoteUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ay                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ny                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::VoteUpdate(int32 Ay, int32 Ny)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "VoteUpdate");

	Params::TrainGusPlayer_C_VoteUpdate Parms{};

	Parms.Ay = Ay;
	Parms.Ny = Ny;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.UpTeam
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::UpTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "UpTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.UpdateNameServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::UpdateNameServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "UpdateNameServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Updatenamebro
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Updatenamebro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Updatenamebro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.UpdateKickFart
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::UpdateKickFart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "UpdateKickFart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Update Health on Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Update_Health_on_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Update Health on Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.UnSniper doodads
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::UnSniper_doodads()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "UnSniper doodads");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.UnADS PistolBuss
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::UnADS_PistolBuss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "UnADS PistolBuss");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TraceDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bBlockingHit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::TraceDown(class AActor* Target, bool* bBlockingHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TraceDown");

	Params::TrainGusPlayer_C_TraceDown Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingHit != nullptr)
		*bBlockingHit = Parms.bBlockingHit;
}


// Function TrainGusPlayer.TrainGusPlayer_C.TooHighBro
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::TooHighBro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TooHighBro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_4__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_4__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_3__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_3__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_3__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_3__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_3__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_3__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Third person deactivate server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Third_person_deactivate_server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Third person deactivate server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.The Sun Skin
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::The_Sun_Skin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "The Sun Skin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Tell em to bring out the sniper
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Tell_em_to_bring_out_the_sniper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Tell em to bring out the sniper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Tell em to bring out the Guns
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Tell_em_to_bring_out_the_Guns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Tell em to bring out the Guns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Teams
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Teams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Teams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TeamRedEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::TeamRedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TeamRedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TeamRedDoing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::TeamRedDoing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TeamRedDoing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TeamKnower
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::TeamKnower(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TeamKnower");

	Params::TrainGusPlayer_C_TeamKnower Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TeamBlueEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::TeamBlueEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TeamBlueEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.TeamBlueDoing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::TeamBlueDoing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "TeamBlueDoing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordLineTraceClient222
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::SwordLineTraceClient222()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordLineTraceClient222");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordLinetraceclient22
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::SwordLinetraceclient22()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordLinetraceclient22");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Swordinator on Server
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Orientation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::Swordinator_on_Server(const struct FVector& Start, const struct FVector& End, const struct FRotator& Orientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Swordinator on Server");

	Params::TrainGusPlayer_C_Swordinator_on_Server Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Orientation = std::move(Orientation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::SwordHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordDashing
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Launch_Velocity_X                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_Y                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SwordDashing(double Launch_Velocity_X, double Launch_Velocity_Y, class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordDashing");

	Params::TrainGusPlayer_C_SwordDashing Parms{};

	Parms.Launch_Velocity_X = Launch_Velocity_X;
	Parms.Launch_Velocity_Y = Launch_Velocity_Y;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordBlockerIgnore Serverness
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SwordBlockerIgnore_Serverness(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordBlockerIgnore Serverness");

	Params::TrainGusPlayer_C_SwordBlockerIgnore_Serverness Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordBlockerIgnore Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SwordBlockerIgnore_Multicast(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordBlockerIgnore Multicast");

	Params::TrainGusPlayer_C_SwordBlockerIgnore_Multicast Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordBlockerBlock Serverness
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SwordBlockerBlock_Serverness(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordBlockerBlock Serverness");

	Params::TrainGusPlayer_C_SwordBlockerBlock_Serverness Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SwordBlockerBlock Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SwordBlockerBlock_Multicast(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SwordBlockerBlock Multicast");

	Params::TrainGusPlayer_C_SwordBlockerBlock_Multicast Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sword Dodge Right
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Launch_Velocity_X                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_Y                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Sword_Dodge_Right(double Launch_Velocity_X, double Launch_Velocity_Y, class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sword Dodge Right");

	Params::TrainGusPlayer_C_Sword_Dodge_Right Parms{};

	Parms.Launch_Velocity_X = Launch_Velocity_X;
	Parms.Launch_Velocity_Y = Launch_Velocity_Y;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sword Dodge Left
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Launch_Velocity_X                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_Y                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Sword_Dodge_Left(double Launch_Velocity_X, double Launch_Velocity_Y, class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sword Dodge Left");

	Params::TrainGusPlayer_C_Sword_Dodge_Left Parms{};

	Parms.Launch_Velocity_X = Launch_Velocity_X;
	Parms.Launch_Velocity_Y = Launch_Velocity_Y;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sword Dodge Forward
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Launch_Velocity_X                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_Y                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Sword_Dodge_Forward(double Launch_Velocity_X, double Launch_Velocity_Y, class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sword Dodge Forward");

	Params::TrainGusPlayer_C_Sword_Dodge_Forward Parms{};

	Parms.Launch_Velocity_X = Launch_Velocity_X;
	Parms.Launch_Velocity_Y = Launch_Velocity_Y;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sword Dash Knockback
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_X                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Launch_Velocity_Y                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Sword_Dash_Knockback(class ACharacter* Target, double Launch_Velocity_X, double Launch_Velocity_Y, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sword Dash Knockback");

	Params::TrainGusPlayer_C_Sword_Dash_Knockback Parms{};

	Parms.Target = Target;
	Parms.Launch_Velocity_X = Launch_Velocity_X;
	Parms.Launch_Velocity_Y = Launch_Velocity_Y;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.StopInteractDoing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::StopInteractDoing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "StopInteractDoing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.StopFireForSwap2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::StopFireForSwap2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "StopFireForSwap2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Viewbobbing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_Viewbobbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Viewbobbing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop sprint
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Reloading Flintlock 2
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Stop_Reloading_Flintlock_2(bool Condition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Reloading Flintlock 2");

	Params::TrainGusPlayer_C_Stop_Reloading_Flintlock_2 Parms{};

	Parms.Condition_0 = Condition_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Reloading Flintlock
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Stop_Reloading_Flintlock(bool Condition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Reloading Flintlock");

	Params::TrainGusPlayer_C_Stop_Reloading_Flintlock Parms{};

	Parms.Condition_0 = Condition_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Reloading EOR Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_Reloading_EOR_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Reloading EOR Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Reloading Cannon Gus
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_Reloading_Cannon_Gus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Reloading Cannon Gus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop Reloading Blunderbuss Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_Reloading_Blunderbuss_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop Reloading Blunderbuss Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Stop doing
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Stop_doing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Stop doing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.StompTick
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::StompTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "StompTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.StartSwordStun
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::StartSwordStun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "StartSwordStun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.StartSprintbobbing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::StartSprintbobbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "StartSprintbobbing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Start Viewbobbing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Start_Viewbobbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Start Viewbobbing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Start sprint
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Start_sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Start sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Start Name Checking
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Start_Name_Checking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Start Name Checking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SprintHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::SprintHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SprintHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sprint FOV__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Sprint_FOV__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sprint FOV__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sprint FOV__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Sprint_FOV__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sprint FOV__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Spawn it Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Last_Wielder                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Spawn_it_Server(const struct FVector& Spawn_Transform_Location, class USceneComponent* Target, class APawn* Last_Wielder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Spawn it Server");

	Params::TrainGusPlayer_C_Spawn_it_Server Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Target = Target;
	Parms.Last_Wielder = Last_Wielder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.SomeoneVoted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PersonWhoVoted                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    TheirVote                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStateBP_C*                 Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::SomeoneVoted(const class FText& PersonWhoVoted, bool TheirVote, class APlayerStateBP_C* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "SomeoneVoted");

	Params::TrainGusPlayer_C_SomeoneVoted Parms{};

	Parms.PersonWhoVoted = std::move(PersonWhoVoted);
	Parms.TheirVote = TheirVote;
	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Sniper aiming doodads
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Sniper_aiming_doodads(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Sniper aiming doodads");

	Params::TrainGusPlayer_C_Sniper_aiming_doodads Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Skibidi First slot
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Skibidi_First_slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Skibidi First slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Set Hat
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Meks_Mask                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Set_Hat(int32 Selection, class USceneComponent* Meks_Mask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Set Hat");

	Params::TrainGusPlayer_C_Set_Hat Parms{};

	Parms.Selection = Selection;
	Parms.Meks_Mask = Meks_Mask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Set clients variables
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerControllerref_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HatNumber_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Set_clients_variables(class APlayerController* PlayerControllerref_0, int32 HatNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Set clients variables");

	Params::TrainGusPlayer_C_Set_clients_variables Parms{};

	Parms.PlayerControllerref_0 = PlayerControllerref_0;
	Parms.HatNumber_0 = HatNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerRifleBulletSlot2
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ServerRifleBulletSlot2(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerRifleBulletSlot2");

	Params::TrainGusPlayer_C_ServerRifleBulletSlot2 Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerRifleBullet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ServerRifleBullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerRifleBullet");

	Params::TrainGusPlayer_C_ServerRifleBullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerNoHave
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Widget_Ref                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                TGusRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ServerNoHave(class USceneComponent* Widget_Ref, int32 Equipped_weapon_0, class ATrainGusPlayer_C* TGusRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerNoHave");

	Params::TrainGusPlayer_C_ServerNoHave Parms{};

	Parms.Widget_Ref = Widget_Ref;
	Parms.Equipped_weapon_0 = Equipped_weapon_0;
	Parms.TGusRef = TGusRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerFlintlockBulletSlot2
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ServerFlintlockBulletSlot2(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerFlintlockBulletSlot2");

	Params::TrainGusPlayer_C_ServerFlintlockBulletSlot2 Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerFlintlockBullet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  OwnerAudio                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ServerFlintlockBullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Spawner, class UAudioComponent* OwnerAudio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerFlintlockBullet");

	Params::TrainGusPlayer_C_ServerFlintlockBullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawner = Spawner;
	Parms.OwnerAudio = OwnerAudio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerBlunderbussBulletSlot2
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ServerBlunderbussBulletSlot2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerBlunderbussBulletSlot2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ServerBlunderbussBullet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::ServerBlunderbussBullet(class AActor* Spawner, const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, const struct FVector& Spawn_Transform_Location1, const struct FRotator& Spawn_Transform_Rotation1, const struct FVector& Spawn_Transform_Location2, const struct FRotator& Spawn_Transform_Rotation2, const struct FVector& Spawn_Transform_Location3, const struct FRotator& Spawn_Transform_Rotation3, const struct FVector& Spawn_Transform_Location4, const struct FRotator& Spawn_Transform_Rotation4, const struct FVector& Spawn_Transform_Location5, const struct FRotator& Spawn_Transform_Rotation5, const struct FVector& Spawn_Transform_Location6, const struct FRotator& Spawn_Transform_Rotation6, const struct FVector& Spawn_Transform_Location7, const struct FRotator& Spawn_Transform_Rotation7, const struct FVector& Spawn_Transform_Location8, const struct FRotator& Spawn_Transform_Rotation8, const struct FVector& Spawn_Transform_Location9, const struct FRotator& Spawn_Transform_Rotation9)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ServerBlunderbussBullet");

	Params::TrainGusPlayer_C_ServerBlunderbussBullet Parms{};

	Parms.Spawner = Spawner;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawn_Transform_Location1 = std::move(Spawn_Transform_Location1);
	Parms.Spawn_Transform_Rotation1 = std::move(Spawn_Transform_Rotation1);
	Parms.Spawn_Transform_Location2 = std::move(Spawn_Transform_Location2);
	Parms.Spawn_Transform_Rotation2 = std::move(Spawn_Transform_Rotation2);
	Parms.Spawn_Transform_Location3 = std::move(Spawn_Transform_Location3);
	Parms.Spawn_Transform_Rotation3 = std::move(Spawn_Transform_Rotation3);
	Parms.Spawn_Transform_Location4 = std::move(Spawn_Transform_Location4);
	Parms.Spawn_Transform_Rotation4 = std::move(Spawn_Transform_Rotation4);
	Parms.Spawn_Transform_Location5 = std::move(Spawn_Transform_Location5);
	Parms.Spawn_Transform_Rotation5 = std::move(Spawn_Transform_Rotation5);
	Parms.Spawn_Transform_Location6 = std::move(Spawn_Transform_Location6);
	Parms.Spawn_Transform_Rotation6 = std::move(Spawn_Transform_Rotation6);
	Parms.Spawn_Transform_Location7 = std::move(Spawn_Transform_Location7);
	Parms.Spawn_Transform_Rotation7 = std::move(Spawn_Transform_Rotation7);
	Parms.Spawn_Transform_Location8 = std::move(Spawn_Transform_Location8);
	Parms.Spawn_Transform_Rotation8 = std::move(Spawn_Transform_Rotation8);
	Parms.Spawn_Transform_Location9 = std::move(Spawn_Transform_Location9);
	Parms.Spawn_Transform_Rotation9 = std::move(Spawn_Transform_Rotation9);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Weapon select
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  User_Flintlock                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  User_EOR                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  User_banana                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Blunderbuss_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  User_HandCannon                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Second_slot__0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_2                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Weapon_select(class USceneComponent* User_Flintlock, class USceneComponent* User_EOR, class USceneComponent* User_banana, class USceneComponent* Blunderbuss_0, class USceneComponent* User_HandCannon, bool Second_slot__0, int32 Equipped_weapon_0, int32 Equipped_weapon_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Weapon select");

	Params::TrainGusPlayer_C_Server_Weapon_select Parms{};

	Parms.User_Flintlock = User_Flintlock;
	Parms.User_EOR = User_EOR;
	Parms.User_banana = User_banana;
	Parms.Blunderbuss_0 = Blunderbuss_0;
	Parms.User_HandCannon = User_HandCannon;
	Parms.Second_slot__0 = Second_slot__0;
	Parms.Equipped_weapon_0 = Equipped_weapon_0;
	Parms.Equipped_weapon_2 = Equipped_weapon_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Twerk
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_Twerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Twerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Title Change
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_Title_Change()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Title Change");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Tell Gamestate of change
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_Tell_Gamestate_of_change()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Tell Gamestate of change");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Nothing is eqiupped
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_Nothing_is_eqiupped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Nothing is eqiupped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Not holding Weapon
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_Not_holding_Weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Not holding Weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server holding weapon
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_holding_weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server holding weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server hitmarker
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_hitmarker(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server hitmarker");

	Params::TrainGusPlayer_C_Server_hitmarker Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Flintlock Damage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_bloke                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Flintlock_Damage(class AActor* Hit_bloke)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Flintlock Damage");

	Params::TrainGusPlayer_C_Server_Flintlock_Damage Parms{};

	Parms.Hit_bloke = Hit_bloke;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server FIre Cannon Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_FIre_Cannon_Sound_Multicast(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server FIre Cannon Sound Multicast");

	Params::TrainGusPlayer_C_Server_FIre_Cannon_Sound_Multicast Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Eye of reach sound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Eye_of_reach_sound(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Eye of reach sound");

	Params::TrainGusPlayer_C_Server_Eye_of_reach_sound Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Eor Damage
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_bloke                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Eor_Damage(class AActor* Hit_bloke)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Eor Damage");

	Params::TrainGusPlayer_C_Server_Eor_Damage Parms{};

	Parms.Hit_bloke = Hit_bloke;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server DeEquip Weapon
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  User_Flintlock                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  User_EOR                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_DeEquip_Weapon(class USceneComponent* User_Flintlock, class USceneComponent* User_EOR, class ATrainGusPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server DeEquip Weapon");

	Params::TrainGusPlayer_C_Server_DeEquip_Weapon Parms{};

	Parms.User_Flintlock = User_Flintlock;
	Parms.User_EOR = User_EOR;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server DeEquip blunderbomb
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  User_Blunderbomb                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_DeEquip_blunderbomb(class USceneComponent* User_Blunderbomb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server DeEquip blunderbomb");

	Params::TrainGusPlayer_C_Server_DeEquip_blunderbomb Parms{};

	Parms.User_Blunderbomb = User_Blunderbomb;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server DeEquip aimers
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Server_DeEquip_aimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server DeEquip aimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Blunderbuss Sound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Blunderbuss_Sound(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Blunderbuss Sound");

	Params::TrainGusPlayer_C_Server_Blunderbuss_Sound Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Blunderbomb Throw anim
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Blunderbomb_Throw_anim(class USceneComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Blunderbomb Throw anim");

	Params::TrainGusPlayer_C_Server_Blunderbomb_Throw_anim Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Blunderbomb AOE
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Blunderbomb_AOE(class AActor* DamagedActor, const struct FVector& Spawn_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Blunderbomb AOE");

	Params::TrainGusPlayer_C_Server_Blunderbomb_AOE Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Blunderbomb Anim
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  User_Blunderbomb                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Blunderbomb_Anim(class USceneComponent* User_Blunderbomb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Blunderbomb Anim");

	Params::TrainGusPlayer_C_Server_Blunderbomb_Anim Parms{};

	Parms.User_Blunderbomb = User_Blunderbomb;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Blunder Damage
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_bloke                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Blunder_Damage(class AActor* Hit_bloke)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Blunder Damage");

	Params::TrainGusPlayer_C_Server_Blunder_Damage Parms{};

	Parms.Hit_bloke = Hit_bloke;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Server Aimer anims
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    second_slot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_2                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Server_Aimer_anims(bool second_slot, int32 Equipped_weapon_0, int32 Equipped_weapon_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Server Aimer anims");

	Params::TrainGusPlayer_C_Server_Aimer_anims Parms{};

	Parms.second_slot = second_slot;
	Parms.Equipped_weapon_0 = Equipped_weapon_0;
	Parms.Equipped_weapon_2 = Equipped_weapon_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Second slot select
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Second_slot_select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Second slot select");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Rots
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::Rots(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Rots");

	Params::TrainGusPlayer_C_Rots Parms{};

	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Rid of menu
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Rid_of_menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Rid of menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset Flintlock2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_Flintlock2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset Flintlock2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset flintlock 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_flintlock_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset flintlock 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset eor2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_eor2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset eor2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset EOR 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_EOR_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset EOR 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset Blunderbuss 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_Blunderbuss_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset Blunderbuss 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reset Blunderbuss 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reset_Blunderbuss_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reset Blunderbuss 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.RepStopSprint
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::RepStopSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "RepStopSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.RepStartSprint
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::RepStartSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "RepStartSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.RemoveAllHats
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::RemoveAllHats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "RemoveAllHats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove Widgets
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove spectate border
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_spectate_border()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove spectate border");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove sniper widget
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_sniper_widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove sniper widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove Nameplates
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_Nameplates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove Nameplates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove Ammo Widget upon death
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_Ammo_Widget_upon_death()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove Ammo Widget upon death");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Remove Aiming FOV
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Remove_Aiming_FOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Remove Aiming FOV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reloading EOR Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reloading_EOR_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reloading EOR Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reload Flintlock Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reload_Flintlock_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reload Flintlock Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reload Failed Sniper
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reload_Failed_Sniper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reload Failed Sniper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reload Checker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Reload_Checker(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reload Checker");

	Params::TrainGusPlayer_C_Reload_Checker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reload Blunder Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reload_Blunder_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reload Blunder Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Reliffer
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Reliffer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Reliffer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveUnpossessed");

	Params::TrainGusPlayer_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveTick");

	Params::TrainGusPlayer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceivePossessed");

	Params::TrainGusPlayer_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATrainGusPlayer_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveHit");

	Params::TrainGusPlayer_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATrainGusPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveAnyDamage");

	Params::TrainGusPlayer_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ReceiveActorBeginOverlap");

	Params::TrainGusPlayer_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.R interact on server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::R_interact_on_server(class ACharacter* Character, class APawn* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "R interact on server");

	Params::TrainGusPlayer_C_R_interact_on_server Parms{};

	Parms.Character = Character;
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.R doing
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::R_doing(class AActor* DamageCauser, const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "R doing");

	Params::TrainGusPlayer_C_R_doing Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.QuitAiming
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::QuitAiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "QuitAiming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Quit loadin bro
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Quit_loadin_bro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Quit loadin bro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Quit Eating Banana
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Quit_Eating_Banana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Quit Eating Banana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Posess Spectate
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Killed_By_ActorRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Equipped_weapon_2                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Player_Title                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   CTF_Red_Score                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CTF_Blue_Score                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Posess_Spectate(class AActor* Killed_By_ActorRef, class AController* Target, class APlayerController* OwningPlayer, int32 Team_0, int32 Equipped_weapon_0, int32 Equipped_weapon_2, const class FText& Player_Title, int32 CTF_Red_Score, int32 CTF_Blue_Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Posess Spectate");

	Params::TrainGusPlayer_C_Posess_Spectate Parms{};

	Parms.Killed_By_ActorRef = Killed_By_ActorRef;
	Parms.Target = Target;
	Parms.OwningPlayer = OwningPlayer;
	Parms.Team_0 = Team_0;
	Parms.Equipped_weapon_0 = Equipped_weapon_0;
	Parms.Equipped_weapon_2 = Equipped_weapon_2;
	Parms.Player_Title = std::move(Player_Title);
	Parms.CTF_Red_Score = CTF_Red_Score;
	Parms.CTF_Blue_Score = CTF_Blue_Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.PitchServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::PitchServer(class USceneComponent* Target, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "PitchServer");

	Params::TrainGusPlayer_C_PitchServer Parms{};

	Parms.Target = Target;
	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.PhysGunHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::PhysGunHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "PhysGunHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OverlappingCharacterbro
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OverlappingCharacterbro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OverlappingCharacterbro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OverlappingCharacter
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OverlappingCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OverlappingCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OptionsSavingDoing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OptionsSavingDoing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OptionsSavingDoing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnSuccess_A35D56AB4B42332750230D9DF29B1D58
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnSuccess_A35D56AB4B42332750230D9DF29B1D58()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnSuccess_A35D56AB4B42332750230D9DF29B1D58");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnSuccess_8D5C8136420C7853B0229D9635E6C5B9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::OnSuccess_8D5C8136420C7853B0229D9635E6C5B9(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnSuccess_8D5C8136420C7853B0229D9635E6C5B9");

	Params::TrainGusPlayer_C_OnSuccess_8D5C8136420C7853B0229D9635E6C5B9 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnSuccess_69F086924E86F140F954BAAC1BE7B0B0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::OnSuccess_69F086924E86F140F954BAAC1BE7B0B0(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnSuccess_69F086924E86F140F954BAAC1BE7B0B0");

	Params::TrainGusPlayer_C_OnSuccess_69F086924E86F140F954BAAC1BE7B0B0 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnSuccess_4FBC7982404D066302B91EBEF5C8FD87
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnSuccess_4FBC7982404D066302B91EBEF5C8FD87()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnSuccess_4FBC7982404D066302B91EBEF5C8FD87");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_WidgetVisibilityRef
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_WidgetVisibilityRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_WidgetVisibilityRef");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Widget Visibility Ref
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Widget_Visibility_Ref()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Widget Visibility Ref");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Vector salamanca
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Vector_salamanca()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Vector salamanca");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Twerk?
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Twerk_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Twerk?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Team
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Team");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Sprinting
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Sprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Sprinting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Second slot?
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Second_slot_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Second slot?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Rotation
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Rotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Right Mousing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Right_Mousing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Right Mousing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Player Name Ref
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Player_Name_Ref()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Player Name Ref");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Me got bannana
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Me_got_bannana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Me got bannana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Is Reload?
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Is_Reload_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Is Reload?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Intensity
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Intensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Intensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Has Blunderbomb Equipped
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Has_Blunderbomb_Equipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Has Blunderbomb Equipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_FlintlockEquppiedrightnow
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_FlintlockEquppiedrightnow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_FlintlockEquppiedrightnow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Eye of aiming fart
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Eye_of_aiming_fart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Eye of aiming fart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_EquippedWeapon2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_EquippedWeapon2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_EquippedWeapon2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Equipped weapon
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Equipped_weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Equipped weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Dead?
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Dead_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Dead?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnRep_Bannana Amount
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnRep_Bannana_Amount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnRep_Bannana Amount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATrainGusPlayer_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnLanded");

	Params::TrainGusPlayer_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnFailure_A35D56AB4B42332750230D9DF29B1D58
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnFailure_A35D56AB4B42332750230D9DF29B1D58()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnFailure_A35D56AB4B42332750230D9DF29B1D58");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnFailure_8D5C8136420C7853B0229D9635E6C5B9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::OnFailure_8D5C8136420C7853B0229D9635E6C5B9(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnFailure_8D5C8136420C7853B0229D9635E6C5B9");

	Params::TrainGusPlayer_C_OnFailure_8D5C8136420C7853B0229D9635E6C5B9 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnFailure_69F086924E86F140F954BAAC1BE7B0B0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::OnFailure_69F086924E86F140F954BAAC1BE7B0B0(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnFailure_69F086924E86F140F954BAAC1BE7B0B0");

	Params::TrainGusPlayer_C_OnFailure_69F086924E86F140F954BAAC1BE7B0B0 Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.OnFailure_4FBC7982404D066302B91EBEF5C8FD87
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::OnFailure_4FBC7982404D066302B91EBEF5C8FD87()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "OnFailure_4FBC7982404D066302B91EBEF5C8FD87");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.On_Pant
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Pant                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::On_Pant(const class FString& Pant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "On_Pant");

	Params::TrainGusPlayer_C_On_Pant Parms{};

	Parms.Pant = std::move(Pant);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Not Twohanded
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Not_Twohanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Not Twohanded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.NoHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::NoHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "NoHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.NoHatMulticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  CheeseHat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Heisengus_Hat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BucketHeadHat_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::NoHatMulticast(class USceneComponent* MeksHat_0, class USceneComponent* CheeseHat_0, class USceneComponent* Heisengus_Hat, class USceneComponent* BucketHeadHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "NoHatMulticast");

	Params::TrainGusPlayer_C_NoHatMulticast Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.CheeseHat_0 = CheeseHat_0;
	Parms.Heisengus_Hat = Heisengus_Hat;
	Parms.BucketHeadHat_0 = BucketHeadHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.No Skin
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::No_Skin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "No Skin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.No Reloading
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::No_Reloading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "No Reloading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.No Hat
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::No_Hat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "No Hat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.New weapon Swap
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::New_weapon_Swap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "New weapon Swap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.NameTag Doer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           See_doer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::NameTag_Doer(class AActor* ParentActor, class AActor* See_doer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "NameTag Doer");

	Params::TrainGusPlayer_C_NameTag_Doer Parms{};

	Parms.ParentActor = ParentActor;
	Parms.See_doer = See_doer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Minus Bananna Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Bannana_Amount_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Minus_Bananna_Server(int32 Bannana_Amount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Minus Bananna Server");

	Params::TrainGusPlayer_C_Minus_Bananna_Server Parms{};

	Parms.Bannana_Amount_0 = Bannana_Amount_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.MeshPitchMulticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Body_Pitch_X__Roll_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::MeshPitchMulticast(float Body_Pitch_X__Roll_, class USceneComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "MeshPitchMulticast");

	Params::TrainGusPlayer_C_MeshPitchMulticast Parms{};

	Parms.Body_Pitch_X__Roll_ = Body_Pitch_X__Roll_;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.MekshatServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::MekshatServer(class USceneComponent* MeksHat_0, class USceneComponent* Hat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "MekshatServer");

	Params::TrainGusPlayer_C_MekshatServer Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.Hat = Hat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.MeksHatMulticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  CheeseHat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Heisengus_Hat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BucketHeadHat_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::MeksHatMulticast(class USceneComponent* MeksHat_0, class USceneComponent* CheeseHat_0, class USceneComponent* Heisengus_Hat, class USceneComponent* BucketHeadHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "MeksHatMulticast");

	Params::TrainGusPlayer_C_MeksHatMulticast Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.CheeseHat_0 = CheeseHat_0;
	Parms.Heisengus_Hat = Heisengus_Hat;
	Parms.BucketHeadHat_0 = BucketHeadHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Meks Hat
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Meks_Hat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Meks Hat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Meatball
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Meatball()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Meatball");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Manyullyn Skin
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Manyullyn_Skin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Manyullyn Skin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Lost flag now
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Lost_flag_now(const struct FVector& Spawn_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Lost flag now");

	Params::TrainGusPlayer_C_Lost_flag_now Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.LogOn'ed
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::LogOn_ed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "LogOn'ed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Load into cannon client
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Load_into_cannon_client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Load into cannon client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Load into cannon
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Load_into_cannon(class UObject* Target, class ATrainGusPlayer_C* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Load into cannon");

	Params::TrainGusPlayer_C_Load_into_cannon Parms{};

	Parms.Target = Target;
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Left The Dampener
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Left_The_Dampener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Left The Dampener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Land Recoil__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Land_Recoil__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Land Recoil__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Land Recoil__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Land_Recoil__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Land Recoil__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Killbind server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UDamageType>          DamageTypeClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ATrainGusPlayer_C::Killbind_server(class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Killbind server");

	Params::TrainGusPlayer_C_Killbind_server Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.DamageTypeClass = DamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Kill count
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Kill_count(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Kill count");

	Params::TrainGusPlayer_C_Kill_count Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Kill Confirm on Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Killed_player_0                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Kill_Confirm_on_Server(const class FText& Killed_player_0, class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Kill Confirm on Server");

	Params::TrainGusPlayer_C_Kill_Confirm_on_Server Parms{};

	Parms.Killed_player_0 = std::move(Killed_player_0);
	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Kickfart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Kick_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      ThoseWhoKnow                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ATrainGusPlayer_C::Kickfart(const class FString& PlayerName, bool Kick_, const class FText& Text, const class FText& ThoseWhoKnow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Kickfart");

	Params::TrainGusPlayer_C_Kickfart Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Kick_ = Kick_;
	Parms.Text = std::move(Text);
	Parms.ThoseWhoKnow = std::move(ThoseWhoKnow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Just Possesed Pawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Just_Possesed_Pawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Just Possesed Pawn");

	Params::TrainGusPlayer_C_Just_Possesed_Pawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Ive Stopped Sprinting
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Ive_Stopped_Sprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Ive Stopped Sprinting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Interact Widget unshower
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Interact_Widget_unshower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Interact Widget unshower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Interact Widget Shower
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Interact_Widget_Shower(const struct FVector& Spawn_Transform_Location, class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Interact Widget Shower");

	Params::TrainGusPlayer_C_Interact_Widget_Shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Interact widget doing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Interact_widget_doing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Interact widget doing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Interact on server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Interact_on_server(class AActor* DamageCauser, const struct FVector& Start, const struct FVector& End, class ATrainGusPlayer_C* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Interact on server");

	Params::TrainGusPlayer_C_Interact_on_server Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Interact Cannon getter inner Shower
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Interact_Cannon_getter_inner_Shower(const struct FVector& Spawn_Transform_Location, class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Interact Cannon getter inner Shower");

	Params::TrainGusPlayer_C_Interact_Cannon_getter_inner_Shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Insta First Slot
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Insta_First_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Insta First Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Input game only
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Input_game_only(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Input game only");

	Params::TrainGusPlayer_C_Input_game_only Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpAxisEvt_WalkRightAxis_K2Node_InputAxisEvent_10
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpAxisEvt_WalkRightAxis_K2Node_InputAxisEvent_10(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpAxisEvt_WalkRightAxis_K2Node_InputAxisEvent_10");

	Params::TrainGusPlayer_C_InpAxisEvt_WalkRightAxis_K2Node_InputAxisEvent_10 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpAxisEvt_WalkLeftAxis_K2Node_InputAxisEvent_9
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpAxisEvt_WalkLeftAxis_K2Node_InputAxisEvent_9(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpAxisEvt_WalkLeftAxis_K2Node_InputAxisEvent_9");

	Params::TrainGusPlayer_C_InpAxisEvt_WalkLeftAxis_K2Node_InputAxisEvent_9 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpAxisEvt_WalkForwardAxis_K2Node_InputAxisEvent_4
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpAxisEvt_WalkForwardAxis_K2Node_InputAxisEvent_4(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpAxisEvt_WalkForwardAxis_K2Node_InputAxisEvent_4");

	Params::TrainGusPlayer_C_InpAxisEvt_WalkForwardAxis_K2Node_InputAxisEvent_4 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpAxisEvt_WalkBackwardAxis_K2Node_InputAxisEvent_8
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpAxisEvt_WalkBackwardAxis_K2Node_InputAxisEvent_8(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpAxisEvt_WalkBackwardAxis_K2Node_InputAxisEvent_8");

	Params::TrainGusPlayer_C_InpAxisEvt_WalkBackwardAxis_K2Node_InputAxisEvent_8 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Left Mouse_K2Node_InputAxisEvent_7
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Left_Mouse_K2Node_InputAxisEvent_7(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Left Mouse_K2Node_InputAxisEvent_7");

	Params::TrainGusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_7 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Left Mouse_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Left_Mouse_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Left Mouse_K2Node_InputAxisEvent_2");

	Params::TrainGusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Left Mouse_K2Node_InputAxisEvent_16
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Left_Mouse_K2Node_InputAxisEvent_16(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Left Mouse_K2Node_InputAxisEvent_16");

	Params::TrainGusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Left Gamepad_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Left_Gamepad_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Left Gamepad_K2Node_InputAxisEvent_0");

	Params::TrainGusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Left_K2Node_InputAxisEvent_5
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Left_K2Node_InputAxisEvent_5(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Left_K2Node_InputAxisEvent_5");

	Params::TrainGusPlayer_C__Left_K2Node_InputAxisEvent_5 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Down Mouse_K2Node_InputAxisEvent_6
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Down_Mouse_K2Node_InputAxisEvent_6(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Down Mouse_K2Node_InputAxisEvent_6");

	Params::TrainGusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_6 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Down Mouse_K2Node_InputAxisEvent_3
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Down_Mouse_K2Node_InputAxisEvent_3(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Down Mouse_K2Node_InputAxisEvent_3");

	Params::TrainGusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Down Mouse_K2Node_InputAxisEvent_17
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Down_Mouse_K2Node_InputAxisEvent_17(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Down Mouse_K2Node_InputAxisEvent_17");

	Params::TrainGusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C. Down Gamepad_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::_Down_Gamepad_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", " Down Gamepad_K2Node_InputAxisEvent_1");

	Params::TrainGusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_X_K2Node_InputKeyEvent_35
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_X_K2Node_InputKeyEvent_35(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_X_K2Node_InputKeyEvent_35");

	Params::TrainGusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_35 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_W_K2Node_InputKeyEvent_44
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_W_K2Node_InputKeyEvent_44(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_W_K2Node_InputKeyEvent_44");

	Params::TrainGusPlayer_C_InpActEvt_W_K2Node_InputKeyEvent_44 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_W_K2Node_InputKeyEvent_43
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_W_K2Node_InputKeyEvent_43(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_W_K2Node_InputKeyEvent_43");

	Params::TrainGusPlayer_C_InpActEvt_W_K2Node_InputKeyEvent_43 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_W_K2Node_InputKeyEvent_27
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_W_K2Node_InputKeyEvent_27(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_W_K2Node_InputKeyEvent_27");

	Params::TrainGusPlayer_C_InpActEvt_W_K2Node_InputKeyEvent_27 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_W_K2Node_InputKeyEvent_26
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_W_K2Node_InputKeyEvent_26(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_W_K2Node_InputKeyEvent_26");

	Params::TrainGusPlayer_C_InpActEvt_W_K2Node_InputKeyEvent_26 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_W_K2Node_InputKeyEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_W_K2Node_InputKeyEvent_12(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_W_K2Node_InputKeyEvent_12");

	Params::TrainGusPlayer_C_InpActEvt_W_K2Node_InputKeyEvent_12 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_V_K2Node_InputKeyEvent_39
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_V_K2Node_InputKeyEvent_39(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_V_K2Node_InputKeyEvent_39");

	Params::TrainGusPlayer_C_InpActEvt_V_K2Node_InputKeyEvent_39 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_V_K2Node_InputKeyEvent_34
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_V_K2Node_InputKeyEvent_34(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_V_K2Node_InputKeyEvent_34");

	Params::TrainGusPlayer_C_InpActEvt_V_K2Node_InputKeyEvent_34 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Two_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Two_K2Node_InputKeyEvent_6(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Two_K2Node_InputKeyEvent_6");

	Params::TrainGusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Two_K2Node_InputKeyEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Two_K2Node_InputKeyEvent_14(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Two_K2Node_InputKeyEvent_14");

	Params::TrainGusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_14 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_SwitchKey_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_SwitchKey_K2Node_InputActionEvent_0(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_SwitchKey_K2Node_InputActionEvent_0");

	Params::TrainGusPlayer_C_InpActEvt_SwitchKey_K2Node_InputActionEvent_0 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_8(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_8");

	Params::TrainGusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_7(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_7");

	Params::TrainGusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_18
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_18(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_18");

	Params::TrainGusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_18 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_17
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_17(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_17");

	Params::TrainGusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_17 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_30
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_SpaceBar_K2Node_InputKeyEvent_30(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_SpaceBar_K2Node_InputKeyEvent_30");

	Params::TrainGusPlayer_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_30 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_SpaceBar_K2Node_InputKeyEvent_13(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_SpaceBar_K2Node_InputKeyEvent_13");

	Params::TrainGusPlayer_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_13 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_ScrollWheel_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_ScrollWheel_K2Node_InputActionEvent_3(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_ScrollWheel_K2Node_InputActionEvent_3");

	Params::TrainGusPlayer_C_InpActEvt_ScrollWheel_K2Node_InputActionEvent_3 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_S_K2Node_InputKeyEvent_40
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_S_K2Node_InputKeyEvent_40(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_S_K2Node_InputKeyEvent_40");

	Params::TrainGusPlayer_C_InpActEvt_S_K2Node_InputKeyEvent_40 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_S_K2Node_InputKeyEvent_23
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_S_K2Node_InputKeyEvent_23(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_S_K2Node_InputKeyEvent_23");

	Params::TrainGusPlayer_C_InpActEvt_S_K2Node_InputKeyEvent_23 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_S_K2Node_InputKeyEvent_22
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_S_K2Node_InputKeyEvent_22(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_S_K2Node_InputKeyEvent_22");

	Params::TrainGusPlayer_C_InpActEvt_S_K2Node_InputKeyEvent_22 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_S_K2Node_InputKeyEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_S_K2Node_InputKeyEvent_11(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_S_K2Node_InputKeyEvent_11");

	Params::TrainGusPlayer_C_InpActEvt_S_K2Node_InputKeyEvent_11 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_5(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_5");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_4(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_4");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_29
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_29(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_29");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_29 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_28
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_28(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_28");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_28 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_21
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_21(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_21");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_21 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_20
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_20(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_20");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_20 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_19
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_19(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_19");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_19 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_18
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_18(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_18");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_18 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_17
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_17(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_17");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_17 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_16
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_16(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_16");

	Params::TrainGusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_16 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_R_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_R_K2Node_InputKeyEvent_2(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_R_K2Node_InputKeyEvent_2");

	Params::TrainGusPlayer_C_InpActEvt_R_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_R_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_R_K2Node_InputKeyEvent_1(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_R_K2Node_InputKeyEvent_1");

	Params::TrainGusPlayer_C_InpActEvt_R_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_One_K2Node_InputKeyEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_One_K2Node_InputKeyEvent_15(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_One_K2Node_InputKeyEvent_15");

	Params::TrainGusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_15 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_One_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_One_K2Node_InputKeyEvent_0(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_One_K2Node_InputKeyEvent_0");

	Params::TrainGusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_N_K2Node_InputKeyEvent_33
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_N_K2Node_InputKeyEvent_33(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_N_K2Node_InputKeyEvent_33");

	Params::TrainGusPlayer_C_InpActEvt_N_K2Node_InputKeyEvent_33 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_8(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_8");

	Params::TrainGusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_8 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_7(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_7");

	Params::TrainGusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_7 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_K_K2Node_InputKeyEvent_37
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_K_K2Node_InputKeyEvent_37(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_K_K2Node_InputKeyEvent_37");

	Params::TrainGusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_37 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Jump_K2Node_InputActionEvent_14(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Jump_K2Node_InputActionEvent_14");

	Params::TrainGusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_14 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Jump_K2Node_InputActionEvent_13(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Jump_K2Node_InputActionEvent_13");

	Params::TrainGusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_13 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Interact key_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Interact_key_K2Node_InputActionEvent_5(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Interact key_K2Node_InputActionEvent_5");

	Params::TrainGusPlayer_C_InpActEvt_Interact_key_K2Node_InputActionEvent_5 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Interact key_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Interact_key_K2Node_InputActionEvent_4(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Interact key_K2Node_InputActionEvent_4");

	Params::TrainGusPlayer_C_InpActEvt_Interact_key_K2Node_InputActionEvent_4 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Interact key_K2Node_InputActionEvent_21
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Interact_key_K2Node_InputActionEvent_21(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Interact key_K2Node_InputActionEvent_21");

	Params::TrainGusPlayer_C_InpActEvt_Interact_key_K2Node_InputActionEvent_21 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Interact key_K2Node_InputActionEvent_20
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Interact_key_K2Node_InputActionEvent_20(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Interact key_K2Node_InputActionEvent_20");

	Params::TrainGusPlayer_C_InpActEvt_Interact_key_K2Node_InputActionEvent_20 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Four_K2Node_InputKeyEvent_45
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Four_K2Node_InputKeyEvent_45(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Four_K2Node_InputKeyEvent_45");

	Params::TrainGusPlayer_C_InpActEvt_Four_K2Node_InputKeyEvent_45 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Five_K2Node_InputKeyEvent_36
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Five_K2Node_InputKeyEvent_36(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Five_K2Node_InputKeyEvent_36");

	Params::TrainGusPlayer_C_InpActEvt_Five_K2Node_InputKeyEvent_36 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_19
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Fire_weapon_K2Node_InputActionEvent_19(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Fire weapon_K2Node_InputActionEvent_19");

	Params::TrainGusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_19 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_16
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Fire_weapon_K2Node_InputActionEvent_16(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Fire weapon_K2Node_InputActionEvent_16");

	Params::TrainGusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_16 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Fire_weapon_K2Node_InputActionEvent_15(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Fire weapon_K2Node_InputActionEvent_15");

	Params::TrainGusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_15 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_EmoteKey_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_EmoteKey_K2Node_InputActionEvent_1(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_EmoteKey_K2Node_InputActionEvent_1");

	Params::TrainGusPlayer_C_InpActEvt_EmoteKey_K2Node_InputActionEvent_1 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_E_K2Node_InputKeyEvent_46
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_E_K2Node_InputKeyEvent_46(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_E_K2Node_InputKeyEvent_46");

	Params::TrainGusPlayer_C_InpActEvt_E_K2Node_InputKeyEvent_46 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_D_K2Node_InputKeyEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_D_K2Node_InputKeyEvent_9(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_D_K2Node_InputKeyEvent_9");

	Params::TrainGusPlayer_C_InpActEvt_D_K2Node_InputKeyEvent_9 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_D_K2Node_InputKeyEvent_42
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_D_K2Node_InputKeyEvent_42(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_D_K2Node_InputKeyEvent_42");

	Params::TrainGusPlayer_C_InpActEvt_D_K2Node_InputKeyEvent_42 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_D_K2Node_InputKeyEvent_25
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_D_K2Node_InputKeyEvent_25(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_D_K2Node_InputKeyEvent_25");

	Params::TrainGusPlayer_C_InpActEvt_D_K2Node_InputKeyEvent_25 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_D_K2Node_InputKeyEvent_24
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_D_K2Node_InputKeyEvent_24(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_D_K2Node_InputKeyEvent_24");

	Params::TrainGusPlayer_C_InpActEvt_D_K2Node_InputKeyEvent_24 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_BlunderBomb_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_BlunderBomb_K2Node_InputActionEvent_2(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_BlunderBomb_K2Node_InputActionEvent_2");

	Params::TrainGusPlayer_C_InpActEvt_BlunderBomb_K2Node_InputActionEvent_2 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Bannana_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Bannana_K2Node_InputActionEvent_6(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Bannana_K2Node_InputActionEvent_6");

	Params::TrainGusPlayer_C_InpActEvt_Bannana_K2Node_InputActionEvent_6 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_B_K2Node_InputKeyEvent_38
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_B_K2Node_InputKeyEvent_38(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_B_K2Node_InputKeyEvent_38");

	Params::TrainGusPlayer_C_InpActEvt_B_K2Node_InputKeyEvent_38 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Aim_down_sight_K2Node_InputActionEvent_9(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Aim down sight_K2Node_InputActionEvent_9");

	Params::TrainGusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_9 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Aim_down_sight_K2Node_InputActionEvent_12(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Aim down sight_K2Node_InputActionEvent_12");

	Params::TrainGusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_12 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Aim_down_sight_K2Node_InputActionEvent_11(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Aim down sight_K2Node_InputActionEvent_11");

	Params::TrainGusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_11 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_Aim_down_sight_K2Node_InputActionEvent_10(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_Aim down sight_K2Node_InputActionEvent_10");

	Params::TrainGusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_10 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_A_K2Node_InputKeyEvent_41
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_A_K2Node_InputKeyEvent_41(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_A_K2Node_InputKeyEvent_41");

	Params::TrainGusPlayer_C_InpActEvt_A_K2Node_InputKeyEvent_41 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_A_K2Node_InputKeyEvent_32
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_A_K2Node_InputKeyEvent_32(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_A_K2Node_InputKeyEvent_32");

	Params::TrainGusPlayer_C_InpActEvt_A_K2Node_InputKeyEvent_32 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_A_K2Node_InputKeyEvent_31
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_A_K2Node_InputKeyEvent_31(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_A_K2Node_InputKeyEvent_31");

	Params::TrainGusPlayer_C_InpActEvt_A_K2Node_InputKeyEvent_31 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.InpActEvt_A_K2Node_InputKeyEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ATrainGusPlayer_C::InpActEvt_A_K2Node_InputKeyEvent_10(const struct FKey& Key_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "InpActEvt_A_K2Node_InputKeyEvent_10");

	Params::TrainGusPlayer_C_InpActEvt_A_K2Node_InputKeyEvent_10 Parms{};

	Parms.Key_0 = std::move(Key_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.I was Just damaged
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::I_was_Just_damaged(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "I was Just damaged");

	Params::TrainGusPlayer_C_I_was_Just_damaged Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.I perished
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      KillerRef                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Killer_team                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killed_By_ActorRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Enemy_team                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Killer_Player_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::I_perished(class APlayerController* OwningPlayer, const class FText& KillerRef, int32 Killer_team, class AActor* Killed_By_ActorRef, int32 Enemy_team, class APlayerState* Killer_Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "I perished");

	Params::TrainGusPlayer_C_I_perished Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.KillerRef = std::move(KillerRef);
	Parms.Killer_team = Killer_team;
	Parms.Killed_By_ActorRef = Killed_By_ActorRef;
	Parms.Enemy_team = Enemy_team;
	Parms.Killer_Player_State = Killer_Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.I justed perished someone
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     OwningActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Damage_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killed_By_ActorRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Victimm_Player_State                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::I_justed_perished_someone(const class AActor* OwningActor, class UObject* Damage_Type, class AActor* Killed_By_ActorRef, class APlayerState* Victimm_Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "I justed perished someone");

	Params::TrainGusPlayer_C_I_justed_perished_someone Parms{};

	Parms.OwningActor = OwningActor;
	Parms.Damage_Type = Damage_Type;
	Parms.Killed_By_ActorRef = Killed_By_ActorRef;
	Parms.Victimm_Player_State = Victimm_Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.HudSpawner
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::HudSpawner(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "HudSpawner");

	Params::TrainGusPlayer_C_HudSpawner Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.HeisenGusHatMusticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  CheeseHat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  HeisungusHat                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BucketHeadHat_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::HeisenGusHatMusticast(class USceneComponent* MeksHat_0, class USceneComponent* CheeseHat_0, class USceneComponent* HeisungusHat, class USceneComponent* BucketHeadHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "HeisenGusHatMusticast");

	Params::TrainGusPlayer_C_HeisenGusHatMusticast Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.CheeseHat_0 = CheeseHat_0;
	Parms.HeisungusHat = HeisungusHat;
	Parms.BucketHeadHat_0 = BucketHeadHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Health Setter
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Health_Setter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Health Setter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.HatType
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HatNumber_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::HatType(int32 HatNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "HatType");

	Params::TrainGusPlayer_C_HatType Parms{};

	Parms.HatNumber_0 = HatNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.HatChecker
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::HatChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "HatChecker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.HandCannonHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::HandCannonHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "HandCannonHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Hand Cannon Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Hand_Cannon_Sound_Multicast(class UObject* Player_State, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Hand Cannon Sound Multicast");

	Params::TrainGusPlayer_C_Hand_Cannon_Sound_Multicast Parms{};

	Parms.Player_State = Player_State;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Hand Cannon Reset
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Hand_Cannon_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Hand Cannon Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Hand Cannon reload slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Hand_Cannon_reload_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Hand Cannon reload slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Hand Cannon Bullet
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFlintlock_Projectile_Client_C*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFlintlock_Projectile_Client_C* ATrainGusPlayer_C::Hand_Cannon_Bullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Hand Cannon Bullet");

	Params::TrainGusPlayer_C_Hand_Cannon_Bullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.GunKnockback
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::GunKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "GunKnockback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Gun Sound Server 
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Gun_Sound_Server_(class USceneComponent* AttachToComponent, class UObject* Player_State, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Gun Sound Server ");

	Params::TrainGusPlayer_C_Gun_Sound_Server_ Parms{};

	Parms.AttachToComponent = AttachToComponent;
	Parms.Player_State = Player_State;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Gun Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Gun_Sound_Multicast(class UObject* Player_State, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Gun Sound Multicast");

	Params::TrainGusPlayer_C_Gun_Sound_Multicast Parms{};

	Parms.Player_State = Player_State;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Got a flag Now
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Player_who_picked_it_up                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Got_a_flag_Now(int32 TeamFlag, class AActor* Player_who_picked_it_up)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Got a flag Now");

	Params::TrainGusPlayer_C_Got_a_flag_Now Parms{};

	Parms.TeamFlag = TeamFlag;
	Parms.Player_who_picked_it_up = Player_who_picked_it_up;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Goomba
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Goomba()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Goomba");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Give killer the name
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATrainGusPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      I_Killed_Name_0                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   I_Killed_team_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Killed_player_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Death_location_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Give_killer_the_name(class ATrainGusPlayer_C* Target, const class FText& I_Killed_Name_0, int32 I_Killed_team_0, class APlayerState* Killed_player_0, const struct FVector& Death_location_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Give killer the name");

	Params::TrainGusPlayer_C_Give_killer_the_name Parms{};

	Parms.Target = Target;
	Parms.I_Killed_Name_0 = std::move(I_Killed_Name_0);
	Parms.I_Killed_team_0 = I_Killed_team_0;
	Parms.Killed_player_0 = Killed_player_0;
	Parms.Death_location_0 = std::move(Death_location_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Give gus hud
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Give_gus_hud(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Give gus hud");

	Params::TrainGusPlayer_C_Give_gus_hud Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Give everyone the flintlock bullet
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                           B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Give_everyone_the_flintlock_bullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Instigator_0, class AActor* B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Give everyone the flintlock bullet");

	Params::TrainGusPlayer_C_Give_everyone_the_flintlock_bullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Instigator_0 = Instigator_0;
	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Give everyone the eor bullet
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Give_everyone_the_eor_bullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* A, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Give everyone the eor bullet");

	Params::TrainGusPlayer_C_Give_everyone_the_eor_bullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.A = A;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Give Everyone all the blunders
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Give_Everyone_all_the_blunders(class AActor* A, class AActor* Spawner, const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, const struct FVector& Spawn_Transform_Location1, const struct FRotator& Spawn_Transform_Rotation1, const struct FVector& Spawn_Transform_Location2, const struct FRotator& Spawn_Transform_Rotation2, const struct FVector& Spawn_Transform_Location3, const struct FRotator& Spawn_Transform_Rotation3, const struct FVector& Spawn_Transform_Location4, const struct FRotator& Spawn_Transform_Rotation4, const struct FVector& Spawn_Transform_Location5, const struct FRotator& Spawn_Transform_Rotation5, const struct FVector& Spawn_Transform_Location6, const struct FRotator& Spawn_Transform_Rotation6, const struct FVector& Spawn_Transform_Location7, const struct FRotator& Spawn_Transform_Rotation7, const struct FVector& Spawn_Transform_Location8, const struct FRotator& Spawn_Transform_Rotation8, const struct FVector& Spawn_Transform_Location9, const struct FRotator& Spawn_Transform_Rotation9, class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Give Everyone all the blunders");

	Params::TrainGusPlayer_C_Give_Everyone_all_the_blunders Parms{};

	Parms.A = A;
	Parms.Spawner = Spawner;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawn_Transform_Location1 = std::move(Spawn_Transform_Location1);
	Parms.Spawn_Transform_Rotation1 = std::move(Spawn_Transform_Rotation1);
	Parms.Spawn_Transform_Location2 = std::move(Spawn_Transform_Location2);
	Parms.Spawn_Transform_Rotation2 = std::move(Spawn_Transform_Rotation2);
	Parms.Spawn_Transform_Location3 = std::move(Spawn_Transform_Location3);
	Parms.Spawn_Transform_Rotation3 = std::move(Spawn_Transform_Rotation3);
	Parms.Spawn_Transform_Location4 = std::move(Spawn_Transform_Location4);
	Parms.Spawn_Transform_Rotation4 = std::move(Spawn_Transform_Rotation4);
	Parms.Spawn_Transform_Location5 = std::move(Spawn_Transform_Location5);
	Parms.Spawn_Transform_Rotation5 = std::move(Spawn_Transform_Rotation5);
	Parms.Spawn_Transform_Location6 = std::move(Spawn_Transform_Location6);
	Parms.Spawn_Transform_Rotation6 = std::move(Spawn_Transform_Rotation6);
	Parms.Spawn_Transform_Location7 = std::move(Spawn_Transform_Location7);
	Parms.Spawn_Transform_Rotation7 = std::move(Spawn_Transform_Rotation7);
	Parms.Spawn_Transform_Location8 = std::move(Spawn_Transform_Location8);
	Parms.Spawn_Transform_Rotation8 = std::move(Spawn_Transform_Rotation8);
	Parms.Spawn_Transform_Location9 = std::move(Spawn_Transform_Location9);
	Parms.Spawn_Transform_Rotation9 = std::move(Spawn_Transform_Rotation9);
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Get me off cannon
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Cannon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Get_me_off_cannon(class AActor* Cannon, class APawn* InPawn, class AController* Target, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Get me off cannon");

	Params::TrainGusPlayer_C_Get_me_off_cannon Parms{};

	Parms.Cannon = Cannon;
	Parms.InPawn = InPawn;
	Parms.Target = Target;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Get Flintlock Spawn Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ATrainGusPlayer_C::Get_Flintlock_Spawn_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Get Flintlock Spawn Rotation");

	Params::TrainGusPlayer_C_Get_Flintlock_Spawn_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.Get EOR Spawn Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ATrainGusPlayer_C::Get_EOR_Spawn_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Get EOR Spawn Rotation");

	Params::TrainGusPlayer_C_Get_EOR_Spawn_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.Gather The Blunder Points
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Gather_The_Blunder_Points()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Gather The Blunder Points");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Gamemode HUD
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Gamemode_HUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Gamemode HUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FOV Transition__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::FOV_Transition__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FOV Transition__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FOV Transition__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::FOV_Transition__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FOV Transition__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FootstepSoundInitial
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::FootstepSoundInitial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FootstepSoundInitial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footsteps Server
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footsteps_Server(class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footsteps Server");

	Params::TrainGusPlayer_C_Footsteps_Server Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footsteps Multicasted
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footsteps_Multicasted(class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footsteps Multicasted");

	Params::TrainGusPlayer_C_Footsteps_Multicasted Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footstep Wood Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footstep_Wood_Server(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footstep Wood Server");

	Params::TrainGusPlayer_C_Footstep_Wood_Server Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footstep Wood Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footstep_Wood_Multicast(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footstep Wood Multicast");

	Params::TrainGusPlayer_C_Footstep_Wood_Multicast Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footstep Sound Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footstep_Sound_Server(const struct FVector& Location, EPhysicalSurface Selection, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footstep Sound Server");

	Params::TrainGusPlayer_C_Footstep_Sound_Server Parms{};

	Parms.Location = std::move(Location);
	Parms.Selection = Selection;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Footstep Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Footstep_Sound_Multicast(EPhysicalSurface Selection, const struct FVector& Location, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Footstep Sound Multicast");

	Params::TrainGusPlayer_C_Footstep_Sound_Multicast Parms{};

	Parms.Selection = Selection;
	Parms.Location = std::move(Location);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockReload2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::FlintlockReload2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockReload2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::FlintlockHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockFiring1
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::FlintlockFiring1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockFiring1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockBullet_Server
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFlintlock_Projectile_Client_C*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent**            cannonball                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFlintlock_Projectile_Client_C* ATrainGusPlayer_C::FlintlockBullet_Server(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class UStaticMeshComponent** cannonball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockBullet_Server");

	Params::TrainGusPlayer_C_FlintlockBullet_Server Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (cannonball != nullptr)
		*cannonball = Parms.cannonball;

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockBullet
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFlintlock_Projectile_Client_C*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFlintlock_Projectile_Client_C* ATrainGusPlayer_C::FlintlockBullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockBullet");

	Params::TrainGusPlayer_C_FlintlockBullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintlockBP
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::FlintlockBP(int32 Hat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintlockBP");

	Params::TrainGusPlayer_C_FlintlockBP Parms{};

	Parms.Hat = Hat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Flintlock Sound Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Flintlock_Sound_Server(class USceneComponent* AttachToComponent, class UObject* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Flintlock Sound Server");

	Params::TrainGusPlayer_C_Flintlock_Sound_Server Parms{};

	Parms.AttachToComponent = AttachToComponent;
	Parms.Player_State = Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Flintlock Sound Multicast 2
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Flintlock_Sound_Multicast_2(class UObject* Player_State, class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Flintlock Sound Multicast 2");

	Params::TrainGusPlayer_C_Flintlock_Sound_Multicast_2 Parms{};

	Parms.Player_State = Player_State;
	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Flintlock Reload Failed slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Flintlock_Reload_Failed_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Flintlock Reload Failed slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Flintlock Reload Failed
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Flintlock_Reload_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Flintlock Reload Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Flintlock Reload 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Flintlock_Reload_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Flintlock Reload 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlintBlunderAiminator
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::FlintBlunderAiminator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlintBlunderAiminator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.FlagDoer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::FlagDoer(const struct FVector& Spawn_Transform_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "FlagDoer");

	Params::TrainGusPlayer_C_FlagDoer Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Reloading Flintlock
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Reloading_Flintlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Reloading Flintlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Reloading EOR
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Reloading_EOR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Reloading EOR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Flintlock Reload slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Flintlock_Reload_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Flintlock Reload slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish EOR Reload slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_EOR_Reload_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish EOR Reload slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Cannon Timer Slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Cannon_Timer_Slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Cannon Timer Slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Blunderbuss Reload slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Blunderbuss_Reload_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Blunderbuss Reload slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Finish Blunderbuss Reload
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Finish_Blunderbuss_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Finish Blunderbuss Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.EyeOfReachHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::EyeOfReachHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EyeOfReachHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.EyeOfReachBP
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::EyeOfReachBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EyeOfReachBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Eye of Reach Reload 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Eye_of_Reach_Reload_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Eye of Reach Reload 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Eye of reach Reload 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Eye_of_reach_Reload_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Eye of reach Reload 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ExecuteUbergraph_TrainGusPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ExecuteUbergraph_TrainGusPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ExecuteUbergraph_TrainGusPlayer");

	Params::TrainGusPlayer_C_ExecuteUbergraph_TrainGusPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Event Begin Play To Hat
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Event_Begin_Play_To_Hat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Event Begin Play To Hat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.EorBullet_Server
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFlintlock_Projectile_Client_C*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent**            cannonball                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFlintlock_Projectile_Client_C* ATrainGusPlayer_C::EorBullet_Server(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class UStaticMeshComponent** cannonball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EorBullet_Server");

	Params::TrainGusPlayer_C_EorBullet_Server Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (cannonball != nullptr)
		*cannonball = Parms.cannonball;

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.EorBullet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::EorBullet(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EorBullet");

	Params::TrainGusPlayer_C_EorBullet Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.EOR Reload Failed slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::EOR_Reload_Failed_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EOR Reload Failed slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.EndTheOverlapName
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::EndTheOverlapName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "EndTheOverlapName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Emote Twerk
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTauntMenuWidget_C*               Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Emote_Twerk(class UTauntMenuWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Emote Twerk");

	Params::TrainGusPlayer_C_Emote_Twerk Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Emote The Kicker
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTauntMenuWidget_C*               Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Emote_The_Kicker(class UTauntMenuWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Emote The Kicker");

	Params::TrainGusPlayer_C_Emote_The_Kicker Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Eat Banana
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  User_banana                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Eat_Banana(class UActorComponent* User_banana, class USceneComponent* AttachToComponent, class UObject* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Eat Banana");

	Params::TrainGusPlayer_C_Eat_Banana Parms{};

	Parms.User_banana = User_banana;
	Parms.AttachToComponent = AttachToComponent;
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.DropCannon
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::DropCannon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "DropCannon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.DownTeam
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::DownTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "DownTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Down Trace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   BlockingHit                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ATrainGusPlayer_C::Down_Trace(bool* BlockingHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Down Trace");

	Params::TrainGusPlayer_C_Down_Trace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlockingHit != nullptr)
		*BlockingHit = Parms.BlockingHit;

	return Parms.ReturnValue;
}


// Function TrainGusPlayer.TrainGusPlayer_C.Destroy me
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Destroy_me(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Destroy me");

	Params::TrainGusPlayer_C_Destroy_me Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Deposited flag
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Deposited_flag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Deposited flag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Deequip Bananna
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  bannana_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Deequip_Bananna(class USceneComponent* bannana_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Deequip Bananna");

	Params::TrainGusPlayer_C_Deequip_Bananna Parms{};

	Parms.bannana_0 = bannana_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Decrease Blunderbomb Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Blunderbomb_Amount_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Decrease_Blunderbomb_Server(int32 Blunderbomb_Amount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Decrease Blunderbomb Server");

	Params::TrainGusPlayer_C_Decrease_Blunderbomb_Server Parms{};

	Parms.Blunderbomb_Amount_0 = Blunderbomb_Amount_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Damage Swing Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Condition_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Damage_Swing_Server(class AActor* DamagedActor, class AActor* DamageCauser, bool Condition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Damage Swing Server");

	Params::TrainGusPlayer_C_Damage_Swing_Server Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageCauser = DamageCauser;
	Parms.Condition_0 = Condition_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Damage Cannonball
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_bloke                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Damage_Cannonball(class AActor* Hit_bloke)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Damage Cannonball");

	Params::TrainGusPlayer_C_Damage_Cannonball Parms{};

	Parms.Hit_bloke = Hit_bloke;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Damage Blunderbomb
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Damage_Blunderbomb(class AActor* DamagedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Damage Blunderbomb");

	Params::TrainGusPlayer_C_Damage_Blunderbomb Parms{};

	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CustomEvent_9
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::CustomEvent_9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CustomEvent_9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CustomEvent_2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::CustomEvent_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CustomEvent_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.crunch multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::crunch_multicast(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "crunch multicast");

	Params::TrainGusPlayer_C_crunch_multicast Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Correct pitch multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::Correct_pitch_multicast(const struct FRotator& Rotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Correct pitch multicast");

	Params::TrainGusPlayer_C_Correct_pitch_multicast Parms{};

	Parms.Rotation_0 = std::move(Rotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Correct pitch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrainGusPlayer_C::Correct_pitch(const struct FRotator& Rotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Correct pitch");

	Params::TrainGusPlayer_C_Correct_pitch Parms{};

	Parms.Rotation_0 = std::move(Rotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Correct Camera Emote Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Body_Pitch_Z__Yaw_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   New_Rotation_Y__Pitch_                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Correct_Camera_Emote_Multicast(float Body_Pitch_Z__Yaw_, float New_Rotation_Y__Pitch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Correct Camera Emote Multicast");

	Params::TrainGusPlayer_C_Correct_Camera_Emote_Multicast Parms{};

	Parms.Body_Pitch_Z__Yaw_ = Body_Pitch_Z__Yaw_;
	Parms.New_Rotation_Y__Pitch_ = New_Rotation_Y__Pitch_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Correct Camera Emote
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rotation_Z__Yaw_                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   New_Rotation_Y__Pitch_                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Correct_Camera_Emote(float Rotation_Z__Yaw_, float New_Rotation_Y__Pitch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Correct Camera Emote");

	Params::TrainGusPlayer_C_Correct_Camera_Emote Parms{};

	Parms.Rotation_Z__Yaw_ = Rotation_Z__Yaw_;
	Parms.New_Rotation_Y__Pitch_ = New_Rotation_Y__Pitch_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Control checker
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Control_checker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Control checker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientTeamRed
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientTeamRed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientTeamRed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientTeamNone
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientTeamNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientTeamNone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientTeamBlue
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientTeamBlue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientTeamBlue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstun2
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstun2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstun2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstun12
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstun12()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstun12");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstun1
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstun1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstun1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientStun
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientStun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientStun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstopstun2
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstopstun2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstopstun2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstopstun12
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstopstun12()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstopstun12");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clientstopstun1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clientstopstun1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clientstopstun1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientStopStun
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientStopStun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientStopStun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientSprint stop
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientSprint_stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientSprint stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientSprint
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientNoAmmoSound
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ClientNoAmmoSound(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientNoAmmoSound");

	Params::TrainGusPlayer_C_ClientNoAmmoSound Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientDashDo1
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientDashDo1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientDashDo1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientDashDo
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientDashDo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientDashDo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientDash1
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientDash1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientDash1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientDash
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ClientBlunderbussBulletSlot2
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ClientBlunderbussBulletSlot2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ClientBlunderbussBulletSlot2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Client material set
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Client_material_set(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Client material set");

	Params::TrainGusPlayer_C_Client_material_set Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Client Deny Cannon
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Client_Deny_Cannon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Client Deny Cannon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Sniper Timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Sniper_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Sniper Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Reload Timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Reload_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Reload Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Hit name
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Hit_name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Hit name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Hand Cannon Timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Hand_Cannon_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Hand Cannon Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Flintlock Timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Flintlock_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Flintlock Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Clear Blunderbuss Timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Clear_Blunderbuss_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Clear Blunderbuss Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Circle Widget__UpdateFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Circle_Widget__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Circle Widget__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Circle Widget__FinishedFunc
// (BlueprintEvent)

void ATrainGusPlayer_C::Circle_Widget__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Circle Widget__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CheeseHatServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::CheeseHatServer(class USceneComponent* MeksHat_0, class USceneComponent* Hat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CheeseHatServer");

	Params::TrainGusPlayer_C_CheeseHatServer Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.Hat = Hat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CheeseHatMulticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  CheeseHat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Heisengus_Hat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BucketHeadHat_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::CheeseHatMulticast(class USceneComponent* MeksHat_0, class USceneComponent* CheeseHat_0, class USceneComponent* Heisengus_Hat, class USceneComponent* BucketHeadHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CheeseHatMulticast");

	Params::TrainGusPlayer_C_CheeseHatMulticast Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.CheeseHat_0 = CheeseHat_0;
	Parms.Heisengus_Hat = Heisengus_Hat;
	Parms.BucketHeadHat_0 = BucketHeadHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Check If cannon is occupied
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Check_If_cannon_is_occupied(const struct FVector& Start, const struct FVector& End, class ATrainGusPlayer_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Check If cannon is occupied");

	Params::TrainGusPlayer_C_Check_If_cannon_is_occupied Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.CharacterVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::CharacterVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "CharacterVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ChangePantServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Pant                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ChangePantServer(const class FString& Pant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ChangePantServer");

	Params::TrainGusPlayer_C_ChangePantServer Parms{};

	Parms.Pant = std::move(Pant);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ChangePant
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Pant                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::ChangePant(const class FString& Pant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ChangePant");

	Params::TrainGusPlayer_C_ChangePant Parms{};

	Parms.Pant = std::move(Pant);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Change Skin Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skin_Number                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Change_Skin_Server(class APlayerState* Player_State, int32 Skin_Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Change Skin Server");

	Params::TrainGusPlayer_C_Change_Skin_Server Parms{};

	Parms.Player_State = Player_State;
	Parms.Skin_Number = Skin_Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Change Skin Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Change_Skin_Multicast(class APlayerState* Player_State, int32 Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Change Skin Multicast");

	Params::TrainGusPlayer_C_Change_Skin_Multicast Parms{};

	Parms.Player_State = Player_State;
	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Change FOV
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplyer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Change_FOV(double Multiplyer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Change FOV");

	Params::TrainGusPlayer_C_Change_FOV Parms{};

	Parms.Multiplyer = Multiplyer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannonball Server Damage
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_bloke                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Cannonball_Server_Damage(class AActor* Hit_bloke)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannonball Server Damage");

	Params::TrainGusPlayer_C_Cannonball_Server_Damage Parms{};

	Parms.Hit_bloke = Hit_bloke;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Tip unshower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Tip_unshower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Tip unshower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Tip Shower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACannon_C*                        Barrel_Ref                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Cannon_Tip_Shower(const struct FVector& Spawn_Transform_Location, class ACannon_C* Barrel_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Tip Shower");

	Params::TrainGusPlayer_C_Cannon_Tip_Shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Barrel_Ref = Barrel_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon sound server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Cannon_sound_server(class UObject* Player_State, class AActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon sound server");

	Params::TrainGusPlayer_C_Cannon_sound_server Parms{};

	Parms.Player_State = Player_State;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Reset Slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Reset_Slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Reset Slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Reloading Gus
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Reloading_Gus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Reloading Gus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon reload timer
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_reload_timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon reload timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Reload Slot 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Reload_Slot_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Reload Slot 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Reload Failed Slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Reload_Failed_Slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Reload Failed Slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Reload Failed
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Reload_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Reload Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Interact Widget Unshower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cannon_Interact_Widget_Unshower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Interact Widget Unshower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Interact Widget shower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACannon_C*                        Barrel_Ref                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Cannon_Interact_Widget_shower(const struct FVector& Spawn_Transform_Location, class ACannon_C* Barrel_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Interact Widget shower");

	Params::TrainGusPlayer_C_Cannon_Interact_Widget_shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Barrel_Ref = Barrel_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cannon Bullet Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  OwnerAudio                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Cannon_Bullet_Server(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Spawner, class UAudioComponent* OwnerAudio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cannon Bullet Server");

	Params::TrainGusPlayer_C_Cannon_Bullet_Server Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawner = Spawner;
	Parms.OwnerAudio = OwnerAudio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Cancel Climb into
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Cancel_Climb_into()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Cancel Climb into");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BucketheadHatMulticast
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  CheeseHat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  HeisungusHat                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BucketHeadHat_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BucketheadHatMulticast(class USceneComponent* MeksHat_0, class USceneComponent* CheeseHat_0, class USceneComponent* HeisungusHat, class USceneComponent* BucketHeadHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BucketheadHatMulticast");

	Params::TrainGusPlayer_C_BucketheadHatMulticast Parms{};

	Parms.MeksHat_0 = MeksHat_0;
	Parms.CheeseHat_0 = CheeseHat_0;
	Parms.HeisungusHat = HeisungusHat;
	Parms.BucketHeadHat_0 = BucketHeadHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Broman really stopped spritnting
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Broman_really_stopped_spritnting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Broman really stopped spritnting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Broman really got damaged
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Broman_really_got_damaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Broman really got damaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bring out weapon
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Bring_out_weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bring out weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Brick Skin
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Brick_Skin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Brick Skin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BoxTraceCutlassDash
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>*              OutHits                                                (Parm, OutParm, ContainsInstancedReference)

void ATrainGusPlayer_C::BoxTraceCutlassDash(TArray<struct FHitResult>* OutHits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BoxTraceCutlassDash");

	Params::TrainGusPlayer_C_BoxTraceCutlassDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BoxTraceCutlass
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Orientation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FHitResult>*              OutHits                                                (Parm, OutParm, ContainsInstancedReference)

void ATrainGusPlayer_C::BoxTraceCutlass(const struct FVector& Start, const struct FVector& End, const struct FRotator& Orientation, TArray<struct FHitResult>* OutHits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BoxTraceCutlass");

	Params::TrainGusPlayer_C_BoxTraceCutlass Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Orientation = std::move(Orientation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutHits != nullptr)
		*OutHits = std::move(Parms.OutHits);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");

	Params::TrainGusPlayer_C_BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATrainGusPlayer_C::BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::TrainGusPlayer_C_BndEvt__TrainGusPlayer_NameCollision_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BndEvt__TrainGusPlayer_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATrainGusPlayer_C::BndEvt__TrainGusPlayer_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BndEvt__TrainGusPlayer_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::TrainGusPlayer_C_BndEvt__TrainGusPlayer_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussReload2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbussReload2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussReload2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbussHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussBulletServer2
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BlunderbussBulletServer2(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, const struct FVector& Spawn_Transform_Location1, const struct FRotator& Spawn_Transform_Rotation1, const struct FVector& Spawn_Transform_Location2, const struct FRotator& Spawn_Transform_Rotation2, const struct FVector& Spawn_Transform_Location3, const struct FRotator& Spawn_Transform_Rotation3, const struct FVector& Spawn_Transform_Location4, const struct FRotator& Spawn_Transform_Rotation4, const struct FVector& Spawn_Transform_Location5, const struct FRotator& Spawn_Transform_Rotation5, const struct FVector& Spawn_Transform_Location6, const struct FRotator& Spawn_Transform_Rotation6, const struct FVector& Spawn_Transform_Location7, const struct FRotator& Spawn_Transform_Rotation7, const struct FVector& Spawn_Transform_Location8, const struct FRotator& Spawn_Transform_Rotation8, const struct FVector& Spawn_Transform_Location9, const struct FRotator& Spawn_Transform_Rotation9, class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussBulletServer2");

	Params::TrainGusPlayer_C_BlunderbussBulletServer2 Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawn_Transform_Location1 = std::move(Spawn_Transform_Location1);
	Parms.Spawn_Transform_Rotation1 = std::move(Spawn_Transform_Rotation1);
	Parms.Spawn_Transform_Location2 = std::move(Spawn_Transform_Location2);
	Parms.Spawn_Transform_Rotation2 = std::move(Spawn_Transform_Rotation2);
	Parms.Spawn_Transform_Location3 = std::move(Spawn_Transform_Location3);
	Parms.Spawn_Transform_Rotation3 = std::move(Spawn_Transform_Rotation3);
	Parms.Spawn_Transform_Location4 = std::move(Spawn_Transform_Location4);
	Parms.Spawn_Transform_Rotation4 = std::move(Spawn_Transform_Rotation4);
	Parms.Spawn_Transform_Location5 = std::move(Spawn_Transform_Location5);
	Parms.Spawn_Transform_Rotation5 = std::move(Spawn_Transform_Rotation5);
	Parms.Spawn_Transform_Location6 = std::move(Spawn_Transform_Location6);
	Parms.Spawn_Transform_Rotation6 = std::move(Spawn_Transform_Rotation6);
	Parms.Spawn_Transform_Location7 = std::move(Spawn_Transform_Location7);
	Parms.Spawn_Transform_Rotation7 = std::move(Spawn_Transform_Rotation7);
	Parms.Spawn_Transform_Location8 = std::move(Spawn_Transform_Location8);
	Parms.Spawn_Transform_Rotation8 = std::move(Spawn_Transform_Rotation8);
	Parms.Spawn_Transform_Location9 = std::move(Spawn_Transform_Location9);
	Parms.Spawn_Transform_Rotation9 = std::move(Spawn_Transform_Rotation9);
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussBulletServer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbussBulletServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussBulletServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussBulletClient
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation1                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation2                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation3                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation4                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation5                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation6                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation7                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation8                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Transform_Location9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation9                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BlunderbussBulletClient(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, const struct FVector& Spawn_Transform_Location1, const struct FRotator& Spawn_Transform_Rotation1, const struct FVector& Spawn_Transform_Location2, const struct FRotator& Spawn_Transform_Rotation2, const struct FVector& Spawn_Transform_Location3, const struct FRotator& Spawn_Transform_Rotation3, const struct FVector& Spawn_Transform_Location4, const struct FRotator& Spawn_Transform_Rotation4, const struct FVector& Spawn_Transform_Location5, const struct FRotator& Spawn_Transform_Rotation5, const struct FVector& Spawn_Transform_Location6, const struct FRotator& Spawn_Transform_Rotation6, const struct FVector& Spawn_Transform_Location7, const struct FRotator& Spawn_Transform_Rotation7, const struct FVector& Spawn_Transform_Location8, const struct FRotator& Spawn_Transform_Rotation8, const struct FVector& Spawn_Transform_Location9, const struct FRotator& Spawn_Transform_Rotation9, class AActor* Owner_0, class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussBulletClient");

	Params::TrainGusPlayer_C_BlunderbussBulletClient Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawn_Transform_Location1 = std::move(Spawn_Transform_Location1);
	Parms.Spawn_Transform_Rotation1 = std::move(Spawn_Transform_Rotation1);
	Parms.Spawn_Transform_Location2 = std::move(Spawn_Transform_Location2);
	Parms.Spawn_Transform_Rotation2 = std::move(Spawn_Transform_Rotation2);
	Parms.Spawn_Transform_Location3 = std::move(Spawn_Transform_Location3);
	Parms.Spawn_Transform_Rotation3 = std::move(Spawn_Transform_Rotation3);
	Parms.Spawn_Transform_Location4 = std::move(Spawn_Transform_Location4);
	Parms.Spawn_Transform_Rotation4 = std::move(Spawn_Transform_Rotation4);
	Parms.Spawn_Transform_Location5 = std::move(Spawn_Transform_Location5);
	Parms.Spawn_Transform_Rotation5 = std::move(Spawn_Transform_Rotation5);
	Parms.Spawn_Transform_Location6 = std::move(Spawn_Transform_Location6);
	Parms.Spawn_Transform_Rotation6 = std::move(Spawn_Transform_Rotation6);
	Parms.Spawn_Transform_Location7 = std::move(Spawn_Transform_Location7);
	Parms.Spawn_Transform_Rotation7 = std::move(Spawn_Transform_Rotation7);
	Parms.Spawn_Transform_Location8 = std::move(Spawn_Transform_Location8);
	Parms.Spawn_Transform_Rotation8 = std::move(Spawn_Transform_Rotation8);
	Parms.Spawn_Transform_Location9 = std::move(Spawn_Transform_Location9);
	Parms.Spawn_Transform_Rotation9 = std::move(Spawn_Transform_Rotation9);
	Parms.Owner_0 = Owner_0;
	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbussBP
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbussBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbussBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss spot getters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Blunderbuss_spot_getters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss spot getters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Sound Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbuss_Sound_Server(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Sound Server");

	Params::TrainGusPlayer_C_Blunderbuss_Sound_Server Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbuss_Sound_Multicast(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Sound Multicast");

	Params::TrainGusPlayer_C_Blunderbuss_Sound_Multicast Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Reload Failed slot 2
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Blunderbuss_Reload_Failed_slot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Reload Failed slot 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Reload Failed
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Blunderbuss_Reload_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Reload Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Reload 1
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Blunderbuss_Reload_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Reload 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss Authority Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbuss_Authority_Multicast(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss Authority Multicast");

	Params::TrainGusPlayer_C_Blunderbuss_Authority_Multicast Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss After Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATrainGusPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbuss_After_Server(class ATrainGusPlayer_C* Target, class ATrainGusPlayer_C* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss After Server");

	Params::TrainGusPlayer_C_Blunderbuss_After_Server Parms{};

	Parms.Target = Target;
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbuss After Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATrainGusPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATrainGusPlayer_C*                Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbuss_After_Multicast(class ATrainGusPlayer_C* Target, class ATrainGusPlayer_C* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbuss After Multicast");

	Params::TrainGusPlayer_C_Blunderbuss_After_Multicast Parms{};

	Parms.Target = Target;
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbombHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbombHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbombHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbombclient
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbombclient(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbombclient");

	Params::TrainGusPlayer_C_Blunderbombclient Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbombBarrelWidget UnShower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BlunderbombBarrelWidget_UnShower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbombBarrelWidget UnShower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BlunderbombBarrelWidget Shower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABlunderbomb_Barrel_C*            Barrel_Ref                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BlunderbombBarrelWidget_Shower(const struct FVector& Spawn_Transform_Location, class ABlunderbomb_Barrel_C* Barrel_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BlunderbombBarrelWidget Shower");

	Params::TrainGusPlayer_C_BlunderbombBarrelWidget_Shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Barrel_Ref = Barrel_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbomb Throw Sound Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbomb_Throw_Sound_Server(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbomb Throw Sound Server");

	Params::TrainGusPlayer_C_Blunderbomb_Throw_Sound_Server Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Blunderbomb Throw Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Blunderbomb_Throw_Sound_Multicast(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Blunderbomb Throw Sound Multicast");

	Params::TrainGusPlayer_C_Blunderbomb_Throw_Sound_Multicast Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Begining the play
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Begining_the_play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Begining the play");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BannanaHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BannanaHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BannanaHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BannanaED_Event_0
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::BannanaED_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BannanaED_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.BannanaBarrelWidget Shower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABannana_Barrel_C*                Barrel_Ref                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::BannanaBarrelWidget_Shower(const struct FVector& Spawn_Transform_Location, class ABannana_Barrel_C* Barrel_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "BannanaBarrelWidget Shower");

	Params::TrainGusPlayer_C_BannanaBarrelWidget_Shower Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Barrel_Ref = Barrel_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bannana Scranning Sound Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Bannana_Scranning_Sound_Server(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bannana Scranning Sound Server");

	Params::TrainGusPlayer_C_Bannana_Scranning_Sound_Server Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bannana Scranning Sound Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Bannana_Scranning_Sound_Multicast(class UObject* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bannana Scranning Sound Multicast");

	Params::TrainGusPlayer_C_Bannana_Scranning_Sound_Multicast Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bannana Scranning Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Bannana_Scranning_Multicast(class USceneComponent* AttachToComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bannana Scranning Multicast");

	Params::TrainGusPlayer_C_Bannana_Scranning_Multicast Parms{};

	Parms.AttachToComponent = AttachToComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bannana Equipped Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  bannana_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Bannana_Equipped_Server(class USceneComponent* bannana_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bannana Equipped Server");

	Params::TrainGusPlayer_C_Bannana_Equipped_Server Parms{};

	Parms.bannana_0 = bannana_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bannana Barrel Widget Unshower
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Bannana_Barrel_Widget_Unshower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bannana Barrel Widget Unshower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Bananna sound
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class UObject*>&           List_of_Players_0                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Owner_Player_State                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Bananna_sound(class UActorComponent* Target, class USceneComponent* AttachToComponent, const TArray<class UObject*>& List_of_Players_0, class UObject* Owner_Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Bananna sound");

	Params::TrainGusPlayer_C_Bananna_sound Parms{};

	Parms.Target = Target;
	Parms.AttachToComponent = AttachToComponent;
	Parms.List_of_Players_0 = std::move(List_of_Players_0);
	Parms.Owner_Player_State = Owner_Player_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Autumn Skin
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Autumn_Skin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Autumn Skin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ApplyTheHat
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ApplyTheHat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ApplyTheHat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Apply Hat Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  MeksHat_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrainGusPlayer_C::Apply_Hat_Server(class USceneComponent* MeksHat_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Apply Hat Server");

	Params::TrainGusPlayer_C_Apply_Hat_Server Parms{};

	Parms.MeksHat_0 = MeksHat_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Apply Hat Multi
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Apply_Hat_Multi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Apply Hat Multi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.airshotting
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::airshotting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "airshotting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Aiming event
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Aiming_event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Aiming event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ADS PistolBuss
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ADS_PistolBuss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ADS PistolBuss");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.ADS doing
// (BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::ADS_doing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "ADS doing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Add Death Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Add_Death_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Add Death Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Add Death Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Add_Death_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Add Death Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Activate Twerk Emote
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Activate_Twerk_Emote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Activate Twerk Emote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrainGusPlayer.TrainGusPlayer_C.Activate The Kicker Emote
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ATrainGusPlayer_C::Activate_The_Kicker_Emote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainGusPlayer_C", "Activate The Kicker Emote");

	UObject::ProcessEvent(Func, nullptr);
}

}

