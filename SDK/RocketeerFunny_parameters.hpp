#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RocketeerFunny

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RocketeerFunny.RocketeerFunny_C.ServerTrimp
// 0x0030 (0x0030 - 0x0000)
struct RocketeerFunny_C_ServerTrimp final
{
public:
	struct FVector                                ServerTrimpImpulse;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ServerJumpImpulse;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ServerLateralImpulse;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClientCalled;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ServerTrimp) == 0x000008, "Wrong alignment on RocketeerFunny_C_ServerTrimp");
static_assert(sizeof(RocketeerFunny_C_ServerTrimp) == 0x000030, "Wrong size on RocketeerFunny_C_ServerTrimp");
static_assert(offsetof(RocketeerFunny_C_ServerTrimp, ServerTrimpImpulse) == 0x000000, "Member 'RocketeerFunny_C_ServerTrimp::ServerTrimpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerTrimp, ServerJumpImpulse) == 0x000018, "Member 'RocketeerFunny_C_ServerTrimp::ServerJumpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerTrimp, ServerLateralImpulse) == 0x000020, "Member 'RocketeerFunny_C_ServerTrimp::ServerLateralImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerTrimp, ClientCalled) == 0x000028, "Member 'RocketeerFunny_C_ServerTrimp::ClientCalled' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ServerMaxGround
// 0x0010 (0x0010 - 0x0000)
struct RocketeerFunny_C_ServerMaxGround final
{
public:
	double                                        SvrMaxAir;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClientCalled;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ServerMaxGround) == 0x000008, "Wrong alignment on RocketeerFunny_C_ServerMaxGround");
static_assert(sizeof(RocketeerFunny_C_ServerMaxGround) == 0x000010, "Wrong size on RocketeerFunny_C_ServerMaxGround");
static_assert(offsetof(RocketeerFunny_C_ServerMaxGround, SvrMaxAir) == 0x000000, "Member 'RocketeerFunny_C_ServerMaxGround::SvrMaxAir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerMaxGround, ClientCalled) == 0x000008, "Member 'RocketeerFunny_C_ServerMaxGround::ClientCalled' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ServerMaxAir
// 0x0010 (0x0010 - 0x0000)
struct RocketeerFunny_C_ServerMaxAir final
{
public:
	double                                        SvrMaxAir;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          fromClient;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ServerMaxAir) == 0x000008, "Wrong alignment on RocketeerFunny_C_ServerMaxAir");
static_assert(sizeof(RocketeerFunny_C_ServerMaxAir) == 0x000010, "Wrong size on RocketeerFunny_C_ServerMaxAir");
static_assert(offsetof(RocketeerFunny_C_ServerMaxAir, SvrMaxAir) == 0x000000, "Member 'RocketeerFunny_C_ServerMaxAir::SvrMaxAir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerMaxAir, fromClient) == 0x000008, "Member 'RocketeerFunny_C_ServerMaxAir::fromClient' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ServerBhopCap
// 0x0020 (0x0020 - 0x0000)
struct RocketeerFunny_C_ServerBhopCap final
{
public:
	struct FVector                                ServerBhopCapVector;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ServerBhopCapSpeed;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ServerBhopCap) == 0x000008, "Wrong alignment on RocketeerFunny_C_ServerBhopCap");
static_assert(sizeof(RocketeerFunny_C_ServerBhopCap) == 0x000020, "Wrong size on RocketeerFunny_C_ServerBhopCap");
static_assert(offsetof(RocketeerFunny_C_ServerBhopCap, ServerBhopCapVector) == 0x000000, "Member 'RocketeerFunny_C_ServerBhopCap::ServerBhopCapVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ServerBhopCap, ServerBhopCapSpeed) == 0x000018, "Member 'RocketeerFunny_C_ServerBhopCap::ServerBhopCapSpeed' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.resetFriction
// 0x0010 (0x0010 - 0x0000)
struct RocketeerFunny_C_resetFriction final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_GroundFriction_NarrowingCast;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_NarrowingCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_resetFriction) == 0x000004, "Wrong alignment on RocketeerFunny_C_resetFriction");
static_assert(sizeof(RocketeerFunny_C_resetFriction) == 0x000010, "Wrong size on RocketeerFunny_C_resetFriction");
static_assert(offsetof(RocketeerFunny_C_resetFriction, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'RocketeerFunny_C_resetFriction::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_resetFriction, K2Node_VariableSet_GroundFriction_NarrowingCast) == 0x000004, "Member 'RocketeerFunny_C_resetFriction::K2Node_VariableSet_GroundFriction_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_resetFriction, K2Node_VariableSet_BrakingDecelerationWalking_NarrowingCast) == 0x000008, "Member 'RocketeerFunny_C_resetFriction::K2Node_VariableSet_BrakingDecelerationWalking_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_resetFriction, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x00000C, "Member 'RocketeerFunny_C_resetFriction::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.removeFriction
// 0x0001 (0x0001 - 0x0000)
struct RocketeerFunny_C_removeFriction final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_removeFriction) == 0x000001, "Wrong alignment on RocketeerFunny_C_removeFriction");
static_assert(sizeof(RocketeerFunny_C_removeFriction) == 0x000001, "Wrong size on RocketeerFunny_C_removeFriction");
static_assert(offsetof(RocketeerFunny_C_removeFriction, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'RocketeerFunny_C_removeFriction::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ReceiveTick) == 0x000004, "Wrong alignment on RocketeerFunny_C_ReceiveTick");
static_assert(sizeof(RocketeerFunny_C_ReceiveTick) == 0x000004, "Wrong size on RocketeerFunny_C_ReceiveTick");
static_assert(offsetof(RocketeerFunny_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RocketeerFunny_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct RocketeerFunny_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on RocketeerFunny_C_ReceiveAnyDamage");
static_assert(sizeof(RocketeerFunny_C_ReceiveAnyDamage) == 0x000020, "Wrong size on RocketeerFunny_C_ReceiveAnyDamage");
static_assert(offsetof(RocketeerFunny_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'RocketeerFunny_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'RocketeerFunny_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'RocketeerFunny_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'RocketeerFunny_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.rampSlide
// 0x0028 (0x0028 - 0x0000)
struct RocketeerFunny_C_rampSlide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_rampCheck_onSlideableRamp;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_rampCheck_GroundAngleDotproduct;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_rampSlide) == 0x000008, "Wrong alignment on RocketeerFunny_C_rampSlide");
static_assert(sizeof(RocketeerFunny_C_rampSlide) == 0x000028, "Wrong size on RocketeerFunny_C_rampSlide");
static_assert(offsetof(RocketeerFunny_C_rampSlide, ReturnValue) == 0x000000, "Member 'RocketeerFunny_C_rampSlide::ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampSlide, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'RocketeerFunny_C_rampSlide::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampSlide, CallFunc_rampCheck_onSlideableRamp) == 0x000010, "Member 'RocketeerFunny_C_rampSlide::CallFunc_rampCheck_onSlideableRamp' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampSlide, CallFunc_rampCheck_GroundAngleDotproduct) == 0x000018, "Member 'RocketeerFunny_C_rampSlide::CallFunc_rampCheck_GroundAngleDotproduct' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampSlide, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'RocketeerFunny_C_rampSlide::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampSlide, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'RocketeerFunny_C_rampSlide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.rampCheck
// 0x0288 (0x0288 - 0x0000)
struct RocketeerFunny_C_rampCheck final
{
public:
	bool                                          onSlideableRamp;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GroundAngleDotproduct;                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_rampCheck) == 0x000008, "Wrong alignment on RocketeerFunny_C_rampCheck");
static_assert(sizeof(RocketeerFunny_C_rampCheck) == 0x000288, "Wrong size on RocketeerFunny_C_rampCheck");
static_assert(offsetof(RocketeerFunny_C_rampCheck, onSlideableRamp) == 0x000000, "Member 'RocketeerFunny_C_rampCheck::onSlideableRamp' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, GroundAngleDotproduct) == 0x000008, "Member 'RocketeerFunny_C_rampCheck::GroundAngleDotproduct' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, Temp_object_Variable) == 0x000010, "Member 'RocketeerFunny_C_rampCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Normal_ReturnValue) == 0x000020, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_GetActorUpVector_ReturnValue) == 0x000038, "Member 'RocketeerFunny_C_rampCheck::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'RocketeerFunny_C_rampCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_LineTraceSingle_OutHit) == 0x000098, "Member 'RocketeerFunny_C_rampCheck::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_LineTraceSingle_ReturnValue) == 0x000180, "Member 'RocketeerFunny_C_rampCheck::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x000181, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x000182, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'RocketeerFunny_C_rampCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Normal_ReturnValue_1) == 0x000258, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Dot_VectorVector_ReturnValue) == 0x000270, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_DegAcos_ReturnValue) == 0x000278, "Member 'RocketeerFunny_C_rampCheck::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_rampCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000280, "Member 'RocketeerFunny_C_rampCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C_K2_OnMovementModeChanged final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on RocketeerFunny_C_K2_OnMovementModeChanged");
static_assert(sizeof(RocketeerFunny_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on RocketeerFunny_C_K2_OnMovementModeChanged");
static_assert(offsetof(RocketeerFunny_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'RocketeerFunny_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'RocketeerFunny_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'RocketeerFunny_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'RocketeerFunny_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C. Left Mouse_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0");
static_assert(sizeof(RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0");
static_assert(offsetof(RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'RocketeerFunny_C__Left_Mouse_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C. Left_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C__Left_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C__Left_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on RocketeerFunny_C__Left_K2Node_InputAxisEvent_2");
static_assert(sizeof(RocketeerFunny_C__Left_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on RocketeerFunny_C__Left_K2Node_InputAxisEvent_2");
static_assert(offsetof(RocketeerFunny_C__Left_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'RocketeerFunny_C__Left_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C. Backward_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3");
static_assert(sizeof(RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3");
static_assert(offsetof(RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'RocketeerFunny_C__Backward_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C. Down Mouse_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1");
static_assert(sizeof(RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1");
static_assert(offsetof(RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'RocketeerFunny_C__Down_Mouse_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'RocketeerFunny_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(sizeof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(offsetof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.InpActEvt_Jump_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(sizeof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(offsetof(RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'RocketeerFunny_C_InpActEvt_Jump_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.hitmarker
// 0x0008 (0x0008 - 0x0000)
struct RocketeerFunny_C_hitmarker final
{
public:
	class APlayerController*                      OwningPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_hitmarker) == 0x000008, "Wrong alignment on RocketeerFunny_C_hitmarker");
static_assert(sizeof(RocketeerFunny_C_hitmarker) == 0x000008, "Wrong size on RocketeerFunny_C_hitmarker");
static_assert(offsetof(RocketeerFunny_C_hitmarker, OwningPlayer) == 0x000000, "Member 'RocketeerFunny_C_hitmarker::OwningPlayer' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.ExecuteUbergraph_RocketeerFunny
// 0x0D10 (0x0D10 - 0x0000)
struct RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_rampCheck_onSlideableRamp;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_rampCheck_GroundAngleDotproduct;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_applyTrimp_trimpImpulse;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_applyTrimp_trimpJumpImpulse;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_applyTrimp_TrimpLateralImpulse;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_rampSlide_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_accelerateAir_calcMaxAir;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_accelerateAir_AirAccelDir;                // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_accelerateAir_applyingAirAccel;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_accelerateGround_GroundAccelDir;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_accelerateGround_ApplyingGroundAccel;     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_accelerateGround_CalcMaxWalk;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_applyBhopCap_bhopCapNewSpeed;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_applyBhopCap_bhopCapVector;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_applyBhopCap_Applyingcap;                 // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x1];                                      // 0x0213(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0218(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0238(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_PrevMovementMode;                     // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_NewMovementMode;                      // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x02E8(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0300(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x03E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x04F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0570(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0658(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0670(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B[0x1];                                      // 0x075B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x07D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0868(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0950(0x0060)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x09B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AfpsMovementProjectile_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0AC0(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADeadSpectate_C*                        CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_OwningPlayer;                   // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Uhitmarker_C*                           CallFunc_Create_ReturnValue;                       // 0x0B38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ServerTrimpImpulse;             // 0x0B40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ServerJumpImpulse;              // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ServerLateralImpulse;           // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ClientCalled_1;                 // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue_1;                  // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0B6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0B6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0B6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6D[0x3];                                      // 0x0B6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0B70(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0B88(0x0018)(HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ServerBhopCapVector;            // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ServerBhopCapSpeed;             // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0BC0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0BDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BDB[0x5];                                      // 0x0BDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_SvrMaxAir_1;                    // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_fromClient;                     // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEB[0x5];                                      // 0x0BEB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_SvrMaxAir;                      // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ClientCalled;                   // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BFA[0x6];                                      // 0x0BFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0C00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_default_JumpVelocity_WideningCast; // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_default_braking_WideningCast;   // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_default_maxwalkspeed_WideningCast; // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_default_friction_WideningCast;  // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_frametime_WideningCast;         // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast;             // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_WideningCast;         // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast;          // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_1;   // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast_1;           // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast_1;        // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_2;   // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_NarrowingCast; // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_NarrowingCast_1; // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9C[0x4];                                      // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_WideningCast;      // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_inputSideAxis_WideningCast;     // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_WideningCast;   // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_WideningCast_1; // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_inputForwardAxis_WideningCast;  // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_WideningCast_2; // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_WideningCast_3; // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_NarrowingCast;    // 0x0CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_3;   // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_4;   // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_NarrowingCast_1;  // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_5;   // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_NarrowingCast_2;  // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_6;   // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_7;   // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_8;   // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny) == 0x000010, "Wrong alignment on RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny");
static_assert(sizeof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny) == 0x000D10, "Wrong size on RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, EntryPoint) == 0x000000, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::EntryPoint' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetActorRightVector_ReturnValue) == 0x000020, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_rampCheck_onSlideableRamp) == 0x000054, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_rampCheck_onSlideableRamp' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_rampCheck_GroundAngleDotproduct) == 0x000058, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_rampCheck_GroundAngleDotproduct' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyTrimp_trimpImpulse) == 0x000060, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyTrimp_trimpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyTrimp_trimpJumpImpulse) == 0x000078, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyTrimp_trimpJumpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyTrimp_TrimpLateralImpulse) == 0x000080, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyTrimp_TrimpLateralImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue) == 0x000091, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetVelocity_ReturnValue) == 0x000098, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_rampSlide_ReturnValue) == 0x0000B0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_rampSlide_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_X) == 0x0000B8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_VSize_ReturnValue) == 0x0000E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000108, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x00010C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000110, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000118, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_VLerp_ReturnValue) == 0x000130, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_RLerp_ReturnValue) == 0x000148, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateAir_calcMaxAir) == 0x000160, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateAir_calcMaxAir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateAir_AirAccelDir) == 0x000168, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateAir_AirAccelDir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateAir_applyingAirAccel) == 0x000180, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateAir_applyingAirAccel' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateGround_GroundAccelDir) == 0x000188, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateGround_GroundAccelDir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateGround_ApplyingGroundAccel) == 0x0001A0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateGround_ApplyingGroundAccel' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_accelerateGround_CalcMaxWalk) == 0x0001A8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_accelerateGround_CalcMaxWalk' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_MakeVector_ReturnValue_1) == 0x0001C0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue_1) == 0x0001D8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001E0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsFalling_ReturnValue) == 0x0001E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsWalking_ReturnValue) == 0x0001E9, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x0001EC, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyBhopCap_bhopCapNewSpeed) == 0x0001F0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyBhopCap_bhopCapNewSpeed' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyBhopCap_bhopCapVector) == 0x0001F8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyBhopCap_bhopCapVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_applyBhopCap_Applyingcap) == 0x000210, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_applyBhopCap_Applyingcap' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsDedicatedServer_ReturnValue) == 0x000211, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, Temp_bool_Has_Been_Initd_Variable) == 0x000212, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x000214, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, Temp_struct_Variable) == 0x000218, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000230, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputKeyEvent_Key) == 0x000238, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000250, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, Temp_bool_IsClosed_Variable) == 0x000260, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_PrevMovementMode) == 0x000261, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_NewMovementMode) == 0x000262, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_PrevCustomMode) == 0x000263, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_NewCustomMode) == 0x000264, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000265, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputAxisEvent_AxisValue_3) == 0x000268, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputAxisEvent_AxisValue_2) == 0x00026C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputAxisEvent_AxisValue_1) == 0x000270, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000274, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000275, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputAxisEvent_AxisValue) == 0x000278, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x00027C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000280, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue) == 0x000298, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x000299, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue_1) == 0x00029A, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue_2) == 0x00029B, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0002A0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0002B8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetForwardVector_ReturnValue) == 0x0002D0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputKeyEvent_Key_1) == 0x0002E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000300, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0003E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0004D0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0004D8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsFalling_ReturnValue_1) == 0x0004E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_Damage) == 0x0004EC, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_DamageType) == 0x0004F0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_InstigatedBy) == 0x0004F8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_Event_DamageCauser) == 0x000500, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000508, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000510, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000528, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000540, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Add_VectorVector_ReturnValue) == 0x000558, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000570, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, Temp_object_Variable) == 0x000658, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue_2) == 0x000668, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_LineTraceSingle_OutHit) == 0x000670, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_LineTraceSingle_ReturnValue) == 0x000758, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_bBlockingHit) == 0x000759, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_bInitialOverlap) == 0x00075A, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_Time) == 0x00075C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_Distance) == 0x000760, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_Location) == 0x000768, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_ImpactPoint) == 0x000780, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_Normal) == 0x000798, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_ImpactNormal) == 0x0007B0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_PhysMat) == 0x0007C8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_HitActor) == 0x0007D0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_HitComponent) == 0x0007D8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_HitBoneName) == 0x0007E0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_BoneName) == 0x0007E8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_HitItem) == 0x0007F0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_ElementIndex) == 0x0007F4, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_FaceIndex) == 0x0007F8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_TraceStart) == 0x000800, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakHitResult_TraceEnd) == 0x000818, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetPlayerController_ReturnValue_1) == 0x000830, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_FindLookAtRotation_ReturnValue) == 0x000838, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000850, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000868, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_MakeTransform_ReturnValue) == 0x000950, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x0009B0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000A98, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_FinishSpawningActor_ReturnValue) == 0x000AA0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000AA8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_MakeTransform_ReturnValue_1) == 0x000AC0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000B20, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000B28, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_OwningPlayer) == 0x000B30, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_OwningPlayer' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Create_ReturnValue) == 0x000B38, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ServerTrimpImpulse) == 0x000B40, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ServerTrimpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ServerJumpImpulse) == 0x000B58, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ServerJumpImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ServerLateralImpulse) == 0x000B60, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ServerLateralImpulse' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ClientCalled_1) == 0x000B68, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ClientCalled_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsWalking_ReturnValue_1) == 0x000B69, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsWalking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue_3) == 0x000B6A, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000B6B, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue_3) == 0x000B6C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, Temp_struct_Variable_1) == 0x000B70, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputActionEvent_Key) == 0x000B88, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ServerBhopCapVector) == 0x000BA0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ServerBhopCapVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ServerBhopCapSpeed) == 0x000BB8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ServerBhopCapSpeed' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_InputActionEvent_Key_1) == 0x000BC0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000BD8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue_4) == 0x000BD9, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_HasAuthority_ReturnValue_5) == 0x000BDA, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_SvrMaxAir_1) == 0x000BE0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_SvrMaxAir_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_fromClient) == 0x000BE8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_fromClient' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue_4) == 0x000BE9, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000BEA, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_SvrMaxAir) == 0x000BF0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_SvrMaxAir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_CustomEvent_ClientCalled) == 0x000BF8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_CustomEvent_ClientCalled' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BooleanOR_ReturnValue_5) == 0x000BF9, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000C00, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_X_1) == 0x000C18, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_Y_1) == 0x000C20, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_BreakVector_Z_1) == 0x000C28, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000C30, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_default_JumpVelocity_WideningCast) == 0x000C38, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_default_JumpVelocity_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_default_braking_WideningCast) == 0x000C40, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_default_braking_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_default_maxwalkspeed_WideningCast) == 0x000C48, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_default_maxwalkspeed_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_default_friction_WideningCast) == 0x000C50, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_default_friction_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_frametime_WideningCast) == 0x000C58, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_frametime_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Delay_Duration_NarrowingCast) == 0x000C60, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Delay_Duration_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Less_DoubleDouble_B_WideningCast) == 0x000C68, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Less_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Add_DoubleDouble_B_WideningCast) == 0x000C70, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Add_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x000C78, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_1) == 0x000C7C, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Delay_Duration_NarrowingCast_1) == 0x000C80, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Delay_Duration_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Add_DoubleDouble_B_WideningCast_1) == 0x000C88, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Add_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_2) == 0x000C90, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_AddMovementInput_ScaleValue_NarrowingCast) == 0x000C94, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_AddMovementInput_ScaleValue_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_AddMovementInput_ScaleValue_NarrowingCast_1) == 0x000C98, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_AddMovementInput_ScaleValue_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Greater_DoubleDouble_B_WideningCast) == 0x000CA0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Greater_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_inputSideAxis_WideningCast) == 0x000CA8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_inputSideAxis_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_A_WideningCast) == 0x000CB0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_A_WideningCast_1) == 0x000CB8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_inputForwardAxis_WideningCast) == 0x000CC0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_inputForwardAxis_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_A_WideningCast_2) == 0x000CC8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_A_WideningCast_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_EqualEqual_DoubleDouble_A_WideningCast_3) == 0x000CD0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_EqualEqual_DoubleDouble_A_WideningCast_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x000CD8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_JumpZVelocity_NarrowingCast) == 0x000CE0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_JumpZVelocity_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_3) == 0x000CE4, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_4) == 0x000CE8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_4' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_JumpZVelocity_NarrowingCast_1) == 0x000CEC, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_JumpZVelocity_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_5) == 0x000CF0, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_5' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_JumpZVelocity_NarrowingCast_2) == 0x000CF4, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_JumpZVelocity_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_6) == 0x000CF8, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_6' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_7) == 0x000CFC, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_7' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_8) == 0x000D00, "Member 'RocketeerFunny_C_ExecuteUbergraph_RocketeerFunny::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast_8' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.applyTrimp
// 0x0170 (0x0170 - 0x0000)
struct RocketeerFunny_C_applyTrimp final
{
public:
	double                                        groundDotProduct_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trimpImpulse_0;                                    // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        trimpJumpImpulse_0;                                // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        trimpLateralImpulse_0;                             // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_applyTrimp) == 0x000008, "Wrong alignment on RocketeerFunny_C_applyTrimp");
static_assert(sizeof(RocketeerFunny_C_applyTrimp) == 0x000170, "Wrong size on RocketeerFunny_C_applyTrimp");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, groundDotProduct_0) == 0x000000, "Member 'RocketeerFunny_C_applyTrimp::groundDotProduct_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, trimpImpulse_0) == 0x000008, "Member 'RocketeerFunny_C_applyTrimp::trimpImpulse_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, trimpJumpImpulse_0) == 0x000020, "Member 'RocketeerFunny_C_applyTrimp::trimpJumpImpulse_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, trimpLateralImpulse_0) == 0x000028, "Member 'RocketeerFunny_C_applyTrimp::trimpLateralImpulse_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_BreakVector_X) == 0x000038, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_BreakVector_Y) == 0x000040, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_BreakVector_Z) == 0x000048, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_VSize_ReturnValue) == 0x000070, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000C0, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C8, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000D0, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_FClamp_ReturnValue) == 0x0000E0, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_MakeVector_ReturnValue_1) == 0x0000E8, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000100, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000108, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000110, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_MakeVector_ReturnValue_2) == 0x000128, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyTrimp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'RocketeerFunny_C_applyTrimp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.applyBhopCap
// 0x0098 (0x0098 - 0x0000)
struct RocketeerFunny_C_applyBhopCap final
{
public:
	double                                        bhopCapNewSpeed;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                bhopCapVector;                                     // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Applyingcap;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_applyBhopCap) == 0x000008, "Wrong alignment on RocketeerFunny_C_applyBhopCap");
static_assert(sizeof(RocketeerFunny_C_applyBhopCap) == 0x000098, "Wrong size on RocketeerFunny_C_applyBhopCap");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, bhopCapNewSpeed) == 0x000000, "Member 'RocketeerFunny_C_applyBhopCap::bhopCapNewSpeed' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, bhopCapVector) == 0x000008, "Member 'RocketeerFunny_C_applyBhopCap::bhopCapVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, Applyingcap) == 0x000020, "Member 'RocketeerFunny_C_applyBhopCap::Applyingcap' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_NegateVector_ReturnValue) == 0x000040, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_applyBhopCap, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'RocketeerFunny_C_applyBhopCap::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.addRampMomentum
// 0x0018 (0x0018 - 0x0000)
struct RocketeerFunny_C_addRampMomentum final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_NarrowingCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_NarrowingCast_1;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_addRampMomentum) == 0x000008, "Wrong alignment on RocketeerFunny_C_addRampMomentum");
static_assert(sizeof(RocketeerFunny_C_addRampMomentum) == 0x000018, "Wrong size on RocketeerFunny_C_addRampMomentum");
static_assert(offsetof(RocketeerFunny_C_addRampMomentum, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'RocketeerFunny_C_addRampMomentum::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_addRampMomentum, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'RocketeerFunny_C_addRampMomentum::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_addRampMomentum, K2Node_VariableSet_JumpZVelocity_NarrowingCast) == 0x000010, "Member 'RocketeerFunny_C_addRampMomentum::K2Node_VariableSet_JumpZVelocity_NarrowingCast' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_addRampMomentum, K2Node_VariableSet_JumpZVelocity_NarrowingCast_1) == 0x000014, "Member 'RocketeerFunny_C_addRampMomentum::K2Node_VariableSet_JumpZVelocity_NarrowingCast_1' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.accelerateGround
// 0x01B8 (0x01B8 - 0x0000)
struct RocketeerFunny_C_accelerateGround final
{
public:
	struct FVector                                forwardVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardAxis;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                sideVector;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        sideAxis;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                prevVelocity_0;                                    // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundAccelDir;                                    // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          applyingGroundAccel_0;                             // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CalcMaxWalk;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_accelerateGround) == 0x000008, "Wrong alignment on RocketeerFunny_C_accelerateGround");
static_assert(sizeof(RocketeerFunny_C_accelerateGround) == 0x0001B8, "Wrong size on RocketeerFunny_C_accelerateGround");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, forwardVector) == 0x000000, "Member 'RocketeerFunny_C_accelerateGround::forwardVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, ForwardAxis) == 0x000018, "Member 'RocketeerFunny_C_accelerateGround::ForwardAxis' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, sideVector) == 0x000020, "Member 'RocketeerFunny_C_accelerateGround::sideVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, sideAxis) == 0x000038, "Member 'RocketeerFunny_C_accelerateGround::sideAxis' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, prevVelocity_0) == 0x000040, "Member 'RocketeerFunny_C_accelerateGround::prevVelocity_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, GroundAccelDir) == 0x000058, "Member 'RocketeerFunny_C_accelerateGround::GroundAccelDir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, applyingGroundAccel_0) == 0x000070, "Member 'RocketeerFunny_C_accelerateGround::applyingGroundAccel_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CalcMaxWalk) == 0x000078, "Member 'RocketeerFunny_C_accelerateGround::CalcMaxWalk' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000098, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Normal_ReturnValue) == 0x0000C8, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_GetVelocity_ReturnValue) == 0x0000E0, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_BreakVector_X) == 0x000100, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_BreakVector_Y) == 0x000108, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_BreakVector_Z) == 0x000110, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000130, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_VSize_ReturnValue) == 0x000148, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000150, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_FClamp_ReturnValue) == 0x000168, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_VSize_ReturnValue_1) == 0x000170, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Dot_VectorVector_ReturnValue) == 0x000178, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_FClamp_ReturnValue_1) == 0x000190, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000198, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateGround, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'RocketeerFunny_C_accelerateGround::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function RocketeerFunny.RocketeerFunny_C.accelerateAir
// 0x0158 (0x0158 - 0x0000)
struct RocketeerFunny_C_accelerateAir final
{
public:
	struct FVector                                forwardVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardAxis;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                sideVector;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        sideAxis;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        calcMaxAir;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AirAccelDir;                                       // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          applyingAirAccel_0;                                // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketeerFunny_C_accelerateAir) == 0x000008, "Wrong alignment on RocketeerFunny_C_accelerateAir");
static_assert(sizeof(RocketeerFunny_C_accelerateAir) == 0x000158, "Wrong size on RocketeerFunny_C_accelerateAir");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, forwardVector) == 0x000000, "Member 'RocketeerFunny_C_accelerateAir::forwardVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, ForwardAxis) == 0x000018, "Member 'RocketeerFunny_C_accelerateAir::ForwardAxis' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, sideVector) == 0x000020, "Member 'RocketeerFunny_C_accelerateAir::sideVector' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, sideAxis) == 0x000038, "Member 'RocketeerFunny_C_accelerateAir::sideAxis' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, calcMaxAir) == 0x000040, "Member 'RocketeerFunny_C_accelerateAir::calcMaxAir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, AirAccelDir) == 0x000048, "Member 'RocketeerFunny_C_accelerateAir::AirAccelDir' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, applyingAirAccel_0) == 0x000060, "Member 'RocketeerFunny_C_accelerateAir::applyingAirAccel_0' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Normal_ReturnValue) == 0x0000B0, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_VSize_ReturnValue) == 0x0000C8, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_FClamp_ReturnValue) == 0x0000D8, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_VSize_ReturnValue_1) == 0x0000E0, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000F8, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_VSize_ReturnValue_2) == 0x000110, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Dot_VectorVector_ReturnValue) == 0x000118, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_FClamp_ReturnValue_2) == 0x000130, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000138, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RocketeerFunny_C_accelerateAir, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000150, "Member 'RocketeerFunny_C_accelerateAir::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

}

