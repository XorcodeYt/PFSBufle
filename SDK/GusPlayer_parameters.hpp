#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GusPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GusPlayer.GusPlayer_C.WeaponSway
// 0x0240 (0x0240 - 0x0000)
struct GusPlayer_C_WeaponSway final
{
public:
	double                                        Delta_Time;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_NarrowingCast;        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast_1;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast_1;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_1;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast;           // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_1;   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_1;         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast_1;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast_1;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_2;        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_2;         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_WeaponSway) == 0x000008, "Wrong alignment on GusPlayer_C_WeaponSway");
static_assert(sizeof(GusPlayer_C_WeaponSway) == 0x000240, "Wrong size on GusPlayer_C_WeaponSway");
static_assert(offsetof(GusPlayer_C_WeaponSway, Delta_Time) == 0x000000, "Member 'GusPlayer_C_WeaponSway::Delta_Time' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'GusPlayer_C_WeaponSway::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_GetInputAxisValue_ReturnValue) == 0x00001C, "Member 'GusPlayer_C_WeaponSway::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Roll_1) == 0x000020, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Pitch_1) == 0x000024, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Yaw_1) == 0x000028, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'GusPlayer_C_WeaponSway::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'GusPlayer_C_WeaponSway::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x000050, "Member 'GusPlayer_C_WeaponSway::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'GusPlayer_C_WeaponSway::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_RInterpTo_ReturnValue) == 0x000078, "Member 'GusPlayer_C_WeaponSway::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_ReturnValue_1) == 0x000090, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Roll_2) == 0x0000A8, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Pitch_2) == 0x0000AC, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_BreakRotator_Yaw_2) == 0x0000B0, "Member 'GusPlayer_C_WeaponSway::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'GusPlayer_C_WeaponSway::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_FClamp_ReturnValue_1) == 0x0000C0, "Member 'GusPlayer_C_WeaponSway::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_ReturnValue_2) == 0x0000C8, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000E0, "Member 'GusPlayer_C_WeaponSway::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_RInterpTo_DeltaTime_NarrowingCast) == 0x0001C8, "Member 'GusPlayer_C_WeaponSway::CallFunc_RInterpTo_DeltaTime_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_B_WideningCast) == 0x0001D0, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x0001D8, "Member 'GusPlayer_C_WeaponSway::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_B_WideningCast_1) == 0x0001E0, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0001E8, "Member 'GusPlayer_C_WeaponSway::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_A_WideningCast) == 0x0001F0, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Subtract_DoubleDouble_A_WideningCast) == 0x0001F8, "Member 'GusPlayer_C_WeaponSway::CallFunc_Subtract_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Add_DoubleDouble_A_WideningCast_1) == 0x000200, "Member 'GusPlayer_C_WeaponSway::CallFunc_Add_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Yaw_NarrowingCast) == 0x000208, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Yaw_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Pitch_NarrowingCast) == 0x00020C, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Pitch_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Pitch_NarrowingCast_1) == 0x000210, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Pitch_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Roll_NarrowingCast) == 0x000214, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Roll_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_Multiply_DoubleDouble_A_WideningCast_1) == 0x000218, "Member 'GusPlayer_C_WeaponSway::CallFunc_Multiply_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Roll_NarrowingCast_1) == 0x000220, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Roll_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Yaw_NarrowingCast_1) == 0x000224, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Yaw_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_FClamp_Value_WideningCast) == 0x000228, "Member 'GusPlayer_C_WeaponSway::CallFunc_FClamp_Value_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_FClamp_Value_WideningCast_1) == 0x000230, "Member 'GusPlayer_C_WeaponSway::CallFunc_FClamp_Value_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Pitch_NarrowingCast_2) == 0x000238, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Pitch_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_WeaponSway, CallFunc_MakeRotator_Roll_NarrowingCast_2) == 0x00023C, "Member 'GusPlayer_C_WeaponSway::CallFunc_MakeRotator_Roll_NarrowingCast_2' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Update Head rotation
// 0x0320 (0x0320 - 0x0000)
struct GusPlayer_C_Update_Head_rotation final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_2;        // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_2;         // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_5;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_5;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_5;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_2;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_3;        // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_4;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_6;                      // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_6;                     // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_6;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_3;         // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_7;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_7;                     // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_7;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGusAnimBpNew_C*                        K2Node_DynamicCast_AsGus_Anim_Bp_New;              // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast;            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast_1;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast_1;   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_WideningCast;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast_1;          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_WideningCast;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast_2;   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast_3;   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast_2;          // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast;           // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Update_Head_rotation) == 0x000008, "Wrong alignment on GusPlayer_C_Update_Head_rotation");
static_assert(sizeof(GusPlayer_C_Update_Head_rotation) == 0x000320, "Wrong size on GusPlayer_C_Update_Head_rotation");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetControlRotation_ReturnValue) == 0x000010, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_1) == 0x000040, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_1) == 0x000044, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_1) == 0x000048, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_2) == 0x00004C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_2) == 0x000050, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_2) == 0x000054, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000070, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetControlRotation_ReturnValue_1) == 0x000080, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_3) == 0x0000A0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_3) == 0x0000A4, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_3) == 0x0000A8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue_1) == 0x0000B0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue_2) == 0x0000C8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_RInterpTo_ReturnValue) == 0x0000E0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000F8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000110, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_4) == 0x000114, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_4) == 0x000118, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_4) == 0x00011C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000130, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue_3) == 0x000138, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_RInterpTo_ReturnValue_1) == 0x000150, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000168, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000170, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000188, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_SetActorRotation_ReturnValue_2) == 0x000189, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_SetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x00018C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x000190, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetControlRotation_ReturnValue_2) == 0x0001A8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetControlRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_5) == 0x0001C0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_5) == 0x0001C4, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_5) == 0x0001C8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetVelocity_ReturnValue) == 0x0001D0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue_4) == 0x0001E8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_VSize_ReturnValue) == 0x000200, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_RInterpTo_ReturnValue_2) == 0x000208, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_RInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000220, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_SetActorRotation_ReturnValue_3) == 0x000221, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_SetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_K2_GetActorRotation_ReturnValue_4) == 0x000228, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_K2_GetActorRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_6) == 0x000240, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_6) == 0x000244, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_6) == 0x000248, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetControlRotation_ReturnValue_3) == 0x000250, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetControlRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Roll_7) == 0x000268, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Roll_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Pitch_7) == 0x00026C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Pitch_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_BreakRotator_Yaw_7) == 0x000270, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_BreakRotator_Yaw_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_GetAnimInstance_ReturnValue) == 0x000278, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000280, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, K2Node_DynamicCast_AsGus_Anim_Bp_New) == 0x000288, "Member 'GusPlayer_C_Update_Head_rotation::K2Node_DynamicCast_AsGus_Anim_Bp_New' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'GusPlayer_C_Update_Head_rotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_ClampAngle_ReturnValue) == 0x000298, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0002A0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_ReturnValue_5) == 0x0002A8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Add_DoubleDouble_B_WideningCast) == 0x0002C0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Add_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_A_WideningCast) == 0x0002C8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_Yaw_NarrowingCast) == 0x0002D0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_Yaw_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Add_DoubleDouble_B_WideningCast_1) == 0x0002D8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Add_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_A_WideningCast_1) == 0x0002E0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Less_DoubleDouble_A_WideningCast) == 0x0002E8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Less_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_Yaw_NarrowingCast_1) == 0x0002F0, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_Yaw_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Greater_DoubleDouble_A_WideningCast) == 0x0002F8, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Greater_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x000300, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_A_WideningCast_2) == 0x000308, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_A_WideningCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_Subtract_DoubleDouble_A_WideningCast_3) == 0x000310, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_Subtract_DoubleDouble_A_WideningCast_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_Yaw_NarrowingCast_2) == 0x000318, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_Yaw_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Update_Head_rotation, CallFunc_MakeRotator_Roll_NarrowingCast) == 0x00031C, "Member 'GusPlayer_C_Update_Head_rotation::CallFunc_MakeRotator_Roll_NarrowingCast' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Stop sprint
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C_Stop_sprint final
{
public:
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Stop_sprint) == 0x000004, "Wrong alignment on GusPlayer_C_Stop_sprint");
static_assert(sizeof(GusPlayer_C_Stop_sprint) == 0x000004, "Wrong size on GusPlayer_C_Stop_sprint");
static_assert(offsetof(GusPlayer_C_Stop_sprint, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x000000, "Member 'GusPlayer_C_Stop_sprint::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Start sprint
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C_Start_sprint final
{
public:
	float                                         K2Node_VariableSet_MaxWalkSpeed_NarrowingCast;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Start_sprint) == 0x000004, "Wrong alignment on GusPlayer_C_Start_sprint");
static_assert(sizeof(GusPlayer_C_Start_sprint) == 0x000004, "Wrong size on GusPlayer_C_Start_sprint");
static_assert(offsetof(GusPlayer_C_Start_sprint, K2Node_VariableSet_MaxWalkSpeed_NarrowingCast) == 0x000000, "Member 'GusPlayer_C_Start_sprint::K2Node_VariableSet_MaxWalkSpeed_NarrowingCast' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on GusPlayer_C_ReceiveTick");
static_assert(sizeof(GusPlayer_C_ReceiveTick) == 0x000004, "Wrong size on GusPlayer_C_ReceiveTick");
static_assert(offsetof(GusPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GusPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct GusPlayer_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on GusPlayer_C_ReceiveAnyDamage");
static_assert(sizeof(GusPlayer_C_ReceiveAnyDamage) == 0x000020, "Wrong size on GusPlayer_C_ReceiveAnyDamage");
static_assert(offsetof(GusPlayer_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'GusPlayer_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'GusPlayer_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'GusPlayer_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'GusPlayer_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Perspective function
// 0x0002 (0x0002 - 0x0000)
struct GusPlayer_C_Perspective_function final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Perspective_function) == 0x000001, "Wrong alignment on GusPlayer_C_Perspective_function");
static_assert(sizeof(GusPlayer_C_Perspective_function) == 0x000002, "Wrong size on GusPlayer_C_Perspective_function");
static_assert(offsetof(GusPlayer_C_Perspective_function, Temp_bool_Variable) == 0x000000, "Member 'GusPlayer_C_Perspective_function::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Perspective_function, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GusPlayer_C_Perspective_function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.On_Pant
// 0x0010 (0x0010 - 0x0000)
struct GusPlayer_C_On_Pant final
{
public:
	class FString                                 Pant;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_On_Pant) == 0x000008, "Wrong alignment on GusPlayer_C_On_Pant");
static_assert(sizeof(GusPlayer_C_On_Pant) == 0x000010, "Wrong size on GusPlayer_C_On_Pant");
static_assert(offsetof(GusPlayer_C_On_Pant, Pant) == 0x000000, "Member 'GusPlayer_C_On_Pant::Pant' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.looking up and down server
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C_looking_up_and_down_server final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_looking_up_and_down_server) == 0x000004, "Wrong alignment on GusPlayer_C_looking_up_and_down_server");
static_assert(sizeof(GusPlayer_C_looking_up_and_down_server) == 0x000004, "Wrong size on GusPlayer_C_looking_up_and_down_server");
static_assert(offsetof(GusPlayer_C_looking_up_and_down_server, Val) == 0x000000, "Member 'GusPlayer_C_looking_up_and_down_server::Val' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpTchEvt_Released
// 0x0020 (0x0020 - 0x0000)
struct GusPlayer_C_InpTchEvt_Released final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpTchEvt_Released) == 0x000008, "Wrong alignment on GusPlayer_C_InpTchEvt_Released");
static_assert(sizeof(GusPlayer_C_InpTchEvt_Released) == 0x000020, "Wrong size on GusPlayer_C_InpTchEvt_Released");
static_assert(offsetof(GusPlayer_C_InpTchEvt_Released, FingerIndex) == 0x000000, "Member 'GusPlayer_C_InpTchEvt_Released::FingerIndex' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_InpTchEvt_Released, Location) == 0x000008, "Member 'GusPlayer_C_InpTchEvt_Released::Location' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpTchEvt_Pressed
// 0x0020 (0x0020 - 0x0000)
struct GusPlayer_C_InpTchEvt_Pressed final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpTchEvt_Pressed) == 0x000008, "Wrong alignment on GusPlayer_C_InpTchEvt_Pressed");
static_assert(sizeof(GusPlayer_C_InpTchEvt_Pressed) == 0x000020, "Wrong size on GusPlayer_C_InpTchEvt_Pressed");
static_assert(offsetof(GusPlayer_C_InpTchEvt_Pressed, FingerIndex) == 0x000000, "Member 'GusPlayer_C_InpTchEvt_Pressed::FingerIndex' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_InpTchEvt_Pressed, Location) == 0x000008, "Member 'GusPlayer_C_InpTchEvt_Pressed::Location' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Left Mouse_K2Node_InputAxisEvent_16
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16) == 0x000004, "Wrong alignment on GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16");
static_assert(sizeof(GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16) == 0x000004, "Wrong size on GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16");
static_assert(offsetof(GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16, AxisValue) == 0x000000, "Member 'GusPlayer_C__Left_Mouse_K2Node_InputAxisEvent_16::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Left Gamepad_K2Node_InputAxisEvent_15
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15) == 0x000004, "Wrong alignment on GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15");
static_assert(sizeof(GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15) == 0x000004, "Wrong size on GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15");
static_assert(offsetof(GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15, AxisValue) == 0x000000, "Member 'GusPlayer_C__Left_Gamepad_K2Node_InputAxisEvent_15::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Left_K2Node_InputAxisEvent_19
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Left_K2Node_InputAxisEvent_19 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Left_K2Node_InputAxisEvent_19) == 0x000004, "Wrong alignment on GusPlayer_C__Left_K2Node_InputAxisEvent_19");
static_assert(sizeof(GusPlayer_C__Left_K2Node_InputAxisEvent_19) == 0x000004, "Wrong size on GusPlayer_C__Left_K2Node_InputAxisEvent_19");
static_assert(offsetof(GusPlayer_C__Left_K2Node_InputAxisEvent_19, AxisValue) == 0x000000, "Member 'GusPlayer_C__Left_K2Node_InputAxisEvent_19::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Backward_K2Node_InputAxisEvent_14
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Backward_K2Node_InputAxisEvent_14 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Backward_K2Node_InputAxisEvent_14) == 0x000004, "Wrong alignment on GusPlayer_C__Backward_K2Node_InputAxisEvent_14");
static_assert(sizeof(GusPlayer_C__Backward_K2Node_InputAxisEvent_14) == 0x000004, "Wrong size on GusPlayer_C__Backward_K2Node_InputAxisEvent_14");
static_assert(offsetof(GusPlayer_C__Backward_K2Node_InputAxisEvent_14, AxisValue) == 0x000000, "Member 'GusPlayer_C__Backward_K2Node_InputAxisEvent_14::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Down Mouse_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3");
static_assert(sizeof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3");
static_assert(offsetof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Down Mouse_K2Node_InputAxisEvent_17
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17) == 0x000004, "Wrong alignment on GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17");
static_assert(sizeof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17) == 0x000004, "Wrong size on GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17");
static_assert(offsetof(GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17, AxisValue) == 0x000000, "Member 'GusPlayer_C__Down_Mouse_K2Node_InputAxisEvent_17::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C. Down Gamepad_K2Node_InputAxisEvent_18
// 0x0004 (0x0004 - 0x0000)
struct GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18) == 0x000004, "Wrong alignment on GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18");
static_assert(sizeof(GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18) == 0x000004, "Wrong size on GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18");
static_assert(offsetof(GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18, AxisValue) == 0x000000, "Member 'GusPlayer_C__Down_Gamepad_K2Node_InputAxisEvent_18::AxisValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_X_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8");
static_assert(sizeof(GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8");
static_assert(offsetof(GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_X_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Two_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9");
static_assert(sizeof(GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9");
static_assert(offsetof(GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Two_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Toggle Perspective_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16");
static_assert(sizeof(GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16");
static_assert(offsetof(GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Toggle_Perspective_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Three_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5");
static_assert(sizeof(GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5");
static_assert(offsetof(GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Three_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8");
static_assert(sizeof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8");
static_assert(offsetof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7");
static_assert(sizeof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7");
static_assert(offsetof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15");
static_assert(sizeof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15");
static_assert(offsetof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14");
static_assert(sizeof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14");
static_assert(offsetof(GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3");
static_assert(sizeof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3");
static_assert(offsetof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_P_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7");
static_assert(sizeof(GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7");
static_assert(offsetof(GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_P_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_One_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10");
static_assert(sizeof(GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10");
static_assert(offsetof(GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_One_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12");
static_assert(sizeof(GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12");
static_assert(offsetof(GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11");
static_assert(sizeof(GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11");
static_assert(offsetof(GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_K_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6");
static_assert(sizeof(GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6");
static_assert(offsetof(GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_K_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9");
static_assert(sizeof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9");
static_assert(offsetof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10");
static_assert(sizeof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10");
static_assert(offsetof(GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_G_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4");
static_assert(sizeof(GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4");
static_assert(offsetof(GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_G_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4");
static_assert(sizeof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4");
static_assert(offsetof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13");
static_assert(sizeof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13");
static_assert(offsetof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12");
static_assert(sizeof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12");
static_assert(offsetof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Fire weapon_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11");
static_assert(sizeof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11");
static_assert(offsetof(GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Fire_weapon_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.InpActEvt_Aim down sight_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0");
static_assert(sizeof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0");
static_assert(offsetof(GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'GusPlayer_C_InpActEvt_Aim_down_sight_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.HitscanEyeOfReach
// 0x01B0 (0x01B0 - 0x0000)
struct GusPlayer_C_HitscanEyeOfReach final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_HitscanEyeOfReach) == 0x000008, "Wrong alignment on GusPlayer_C_HitscanEyeOfReach");
static_assert(sizeof(GusPlayer_C_HitscanEyeOfReach) == 0x0001B0, "Wrong size on GusPlayer_C_HitscanEyeOfReach");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, Temp_object_Variable) == 0x000000, "Member 'GusPlayer_C_HitscanEyeOfReach::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_ApplyDamage_ReturnValue) == 0x000010, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000018, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000048, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000060, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_GetForwardVector_ReturnValue) == 0x000078, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_LineTraceSingle_OutHit) == 0x0000C0, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_HitscanEyeOfReach, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A8, "Member 'GusPlayer_C_HitscanEyeOfReach::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Health
// 0x0048 (0x0048 - 0x0000)
struct GusPlayer_C_Health final
{
public:
	class AActor*                                 self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Health) == 0x000008, "Wrong alignment on GusPlayer_C_Health");
static_assert(sizeof(GusPlayer_C_Health) == 0x000048, "Wrong size on GusPlayer_C_Health");
static_assert(offsetof(GusPlayer_C_Health, self2) == 0x000000, "Member 'GusPlayer_C_Health::self2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, B) == 0x000008, "Member 'GusPlayer_C_Health::B' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'GusPlayer_C_Health::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000018, "Member 'GusPlayer_C_Health::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'GusPlayer_C_Health::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_Array_Get_Item) == 0x000030, "Member 'GusPlayer_C_Health::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_ActorHasTag_ReturnValue) == 0x000038, "Member 'GusPlayer_C_Health::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Health, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'GusPlayer_C_Health::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Eye of Reach Sway
// 0x0238 (0x0238 - 0x0000)
struct GusPlayer_C_Eye_of_Reach_Sway final
{
public:
	double                                        Delta_Time;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_NarrowingCast;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast_1;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast_1;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_1;        // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_1;   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast_1;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_1;         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast_1;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_2;        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_2;         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Eye_of_Reach_Sway) == 0x000008, "Wrong alignment on GusPlayer_C_Eye_of_Reach_Sway");
static_assert(sizeof(GusPlayer_C_Eye_of_Reach_Sway) == 0x000238, "Wrong size on GusPlayer_C_Eye_of_Reach_Sway");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, Delta_Time) == 0x000000, "Member 'GusPlayer_C_Eye_of_Reach_Sway::Delta_Time' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Roll_1) == 0x00001C, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Pitch_1) == 0x000020, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Yaw_1) == 0x000024, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_GetInputAxisValue_ReturnValue) == 0x000028, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x000080, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Roll_2) == 0x000084, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Pitch_2) == 0x000088, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_BreakRotator_Yaw_2) == 0x00008C, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_ReturnValue_1) == 0x0000A0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_FClamp_ReturnValue_1) == 0x0000B8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_ReturnValue_2) == 0x0000C0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_RInterpTo_DeltaTime_NarrowingCast) == 0x0001C0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_RInterpTo_DeltaTime_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_B_WideningCast) == 0x0001C8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x0001D0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_B_WideningCast_1) == 0x0001D8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_A_WideningCast) == 0x0001E0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Subtract_DoubleDouble_A_WideningCast) == 0x0001E8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Subtract_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Add_DoubleDouble_A_WideningCast_1) == 0x0001F0, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Add_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0001F8, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Yaw_NarrowingCast) == 0x000200, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Yaw_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast) == 0x000204, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Roll_NarrowingCast) == 0x000208, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Roll_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast_1) == 0x00020C, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_Multiply_DoubleDouble_A_WideningCast_1) == 0x000210, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_Multiply_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_FClamp_Value_WideningCast) == 0x000218, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_FClamp_Value_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_FClamp_Value_WideningCast_1) == 0x000220, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_FClamp_Value_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Roll_NarrowingCast_1) == 0x000228, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Roll_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Yaw_NarrowingCast_1) == 0x00022C, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Yaw_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast_2) == 0x000230, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Eye_of_Reach_Sway, CallFunc_MakeRotator_Roll_NarrowingCast_2) == 0x000234, "Member 'GusPlayer_C_Eye_of_Reach_Sway::CallFunc_MakeRotator_Roll_NarrowingCast_2' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.ExecuteUbergraph_GusPlayer
// 0x1140 (0x1140 - 0x0000)
struct GusPlayer_C_ExecuteUbergraph_GusPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0098(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x00C0(0x0018)(HasGetValueTypeHash)
	class UOptionsMenuNew_C*                      CallFunc_Create_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x00E0(0x0018)(HasGetValueTypeHash)
	class UHUDgus_C*                              CallFunc_Create_ReturnValue_1;                     // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0100(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0118(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0148(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0160(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0178(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0190(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x01A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x01C0(0x0018)(HasGetValueTypeHash)
	class UReticle_C*                             CallFunc_Create_ReturnValue_2;                     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x0210(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0228(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0240(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0258(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0270(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0288(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x02A0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0xF];                                      // 0x02D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_7;                            // 0x02E0(0x0060)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0340(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x0350(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x0368(0x0018)(HasGetValueTypeHash)
	ETouchIndex                                   Temp_byte_Variable;                                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex;                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location;                   // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_6;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_8;                            // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex_1;              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location_1;                 // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0xC];                                      // 0x0494(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x04A0(0x0060)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABlunderbomb2_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderbomb2_C*                        CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B[0x5];                                      // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x0580(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x0598(0x0018)(HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BD[0x3];                                      // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0620(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Pant;                                 // 0x0628(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0640(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x06C8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0710(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x07F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0818(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0830(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_9;                            // 0x0850(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x0870(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88A[0x6];                                      // 0x088A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0890(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x08D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x09C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x09CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x09CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x09CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D2[0x2];                                      // 0x09D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A09[0x7];                                      // 0x0A09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0A10(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2A[0x6];                                      // 0x0B2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x0B30(0x0018)(HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Val;                            // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0B90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0BA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0BC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0C50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0C68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0C80(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0D89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8A[0x2];                                      // 0x0D8A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0D8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0DB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0DC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0DE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0E08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0E60(0x0060)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC4[0xC];                                      // 0x0EC4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0ED0(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0F38(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFlintlock_Projectile_Client_C*         CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x1028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFlintlock_Projectile_Client_C*         CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1041[0x7];                                     // 0x1041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x1060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1062[0x6];                                     // 0x1062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast;       // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast_1;     // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast_2;     // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast_3;     // 0x1080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast_4;     // 0x1088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_WideningCast_5;     // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast;     // 0x1098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast;          // 0x10A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_NarrowingCast;  // 0x10A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_NarrowingCast_1; // 0x10AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_WeaponSway_Delta_time_WideningCast;       // 0x10B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Eye_of_Reach_Sway_Delta_time_WideningCast; // 0x10B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Blunderbuss_Sway_Delta_time_WideningCast; // 0x10C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x10C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_1;   // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_NarrowingCast; // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10DC[0x4];                                     // 0x10DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_2;   // 0x10E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_NarrowingCast;  // 0x10E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_NarrowingCast_1; // 0x10EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_3;   // 0x10F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_NarrowingCast_1; // 0x10F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10FC[0x4];                                     // 0x10FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast; // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_1; // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast;             // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_2; // 0x1114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_3; // 0x1118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast_1;           // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_NarrowingCast_2;           // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_4; // 0x1124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_5; // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_6; // 0x112C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_7; // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_8; // 0x1134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_9; // 0x1138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast;          // 0x113C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_ExecuteUbergraph_GusPlayer) == 0x000010, "Wrong alignment on GusPlayer_C_ExecuteUbergraph_GusPlayer");
static_assert(sizeof(GusPlayer_C_ExecuteUbergraph_GusPlayer) == 0x001140, "Wrong size on GusPlayer_C_ExecuteUbergraph_GusPlayer");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, EntryPoint) == 0x000000, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_11) == 0x000008, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_10) == 0x000020, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_9) == 0x000038, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable) == 0x000050, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_8) == 0x000068, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_7) == 0x000080, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_1) == 0x000098, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000B0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_7) == 0x0000C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Create_ReturnValue) == 0x0000D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_6) == 0x0000E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Create_ReturnValue_1) == 0x0000F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_6) == 0x000100, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_5) == 0x000118, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_2) == 0x000130, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_4) == 0x000148, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_5) == 0x000160, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_4) == 0x000178, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_3) == 0x000190, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_2) == 0x0001A8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_3) == 0x0001C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Create_ReturnValue_2) == 0x0001D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_3) == 0x0001E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_2) == 0x0001F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_4) == 0x000210, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_1) == 0x000228, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key) == 0x000240, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_5) == 0x000258, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_1) == 0x000270, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key) == 0x000288, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_6) == 0x0002A0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0002B8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_bool_Variable) == 0x0002D0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_7) == 0x0002E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_object_Variable) == 0x000340, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_11) == 0x000350, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_12) == 0x000368, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_byte_Variable) == 0x000380, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputTouchEvent_FingerIndex) == 0x000381, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputTouchEvent_FingerIndex' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputTouchEvent_Location) == 0x000388, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputTouchEvent_Location' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003A0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FClamp_ReturnValue) == 0x0003A8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003B0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FClamp_ReturnValue_1) == 0x0003B8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0003C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x0003C8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_DeltaSeconds) == 0x0003D0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x0003D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_VSizeXY_ReturnValue) == 0x0003F0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_6) == 0x0003F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_5) == 0x0003FC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000400, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000408, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_4) == 0x000410, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000414, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_8) == 0x000418, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000430, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000438, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000440, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000448, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000450, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputTouchEvent_FingerIndex_1) == 0x000458, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputTouchEvent_FingerIndex_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputTouchEvent_Location_1) == 0x000460, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputTouchEvent_Location_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_3) == 0x000478, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_2) == 0x00047C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000480, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000488, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Array_Length_ReturnValue) == 0x000490, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0004A0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetControlRotation_ReturnValue) == 0x000500, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000518, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Roll) == 0x000520, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Pitch) == 0x000524, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Yaw) == 0x000528, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000530, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000538, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000550, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetRightVector_ReturnValue) == 0x000558, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000570, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000578, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000579, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00057A, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_12) == 0x000580, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_8) == 0x000598, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Array_Get_Item) == 0x0005B0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0005B8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0005B9, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_bool_Variable_1) == 0x0005BA, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x0005BB, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0005BC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetControlRotation_ReturnValue_1) == 0x0005C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Roll_1) == 0x0005D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Pitch_1) == 0x0005DC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Yaw_1) == 0x0005E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeRotator_ReturnValue_1) == 0x0005E8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_int_Array_Index_Variable) == 0x000600, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetForwardVector_ReturnValue) == 0x000608, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Array_Get_Item_1) == 0x000620, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_Pant) == 0x000628, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_Pant' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_Damage) == 0x000638, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_DamageType) == 0x000640, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_InstigatedBy) == 0x000648, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Event_DamageCauser) == 0x000650, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue_1) == 0x000658, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000660, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000668, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000670, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_HasAuthority_ReturnValue) == 0x000678, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000680, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000698, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0006A0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0006A8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0006B0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x0006B8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0006C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_13) == 0x0006C8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeVector_ReturnValue) == 0x0006E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_VLerp_ReturnValue) == 0x0006F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000710, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_9) == 0x0007F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000810, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_MakeArray_Array) == 0x000818, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_TeleportTo_ReturnValue) == 0x000828, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputKeyEvent_Key_10) == 0x000830, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_HasAuthority_ReturnValue_1) == 0x000848, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_struct_Variable_9) == 0x000850, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000868, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_14) == 0x000870, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000888, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000889, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_15) == 0x000890, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x0008A8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_VLerp_ReturnValue_1) == 0x0008C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0008D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetPlayerController_ReturnValue_1) == 0x0009C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0009C8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x0009C9, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x0009CA, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x0009CB, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_int_Loop_Counter_Variable) == 0x0009CC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_HasAuthority_ReturnValue_2) == 0x0009D0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0009D1, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x0009D4, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeVector_ReturnValue_2) == 0x0009D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_VLerp_ReturnValue_2) == 0x0009F0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_HasAuthority_ReturnValue_3) == 0x000A08, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000A10, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000AF8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000B00, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000B08, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000B10, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000B18, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000B20, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x000B28, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000B29, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputActionEvent_Key_16) == 0x000B30, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_CustomEvent_Rotation_1) == 0x000B48, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_InputAxisEvent_AxisValue) == 0x000B60, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_CustomEvent_Rotation) == 0x000B68, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Roll_2) == 0x000B80, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Pitch_2) == 0x000B84, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakRotator_Yaw_2) == 0x000B88, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_CustomEvent_Val) == 0x000B8C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_CustomEvent_Val' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeRotator_ReturnValue_2) == 0x000B90, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000BA8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000BC0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000BD8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000BF0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GetForwardVector_ReturnValue_1) == 0x000C08, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000C20, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000C38, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000C50, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000C68, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_LineTraceSingle_OutHit) == 0x000C80, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x000D68, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000D70, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x000D88, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x000D89, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_Time) == 0x000D8C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_Distance) == 0x000D90, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_Location) == 0x000D98, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x000DB0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_Normal) == 0x000DC8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x000DE0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000DF8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_HitActor) == 0x000E00, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_HitComponent) == 0x000E08, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000E10, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_BoneName) == 0x000E18, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_HitItem) == 0x000E20, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000E24, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000E28, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_TraceStart) == 0x000E30, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000E48, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000E60, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_ApplyDamage_ReturnValue) == 0x000EC0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_Select_Default) == 0x000ED0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000F30, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000F38, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x001020, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x001028, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_bool_Variable_2) == 0x001030, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x001038, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x001040, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeRotator_ReturnValue_3) == 0x001048, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, Temp_bool_Variable_3) == 0x001060, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x001061, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast) == 0x001068, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast_1) == 0x001070, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast_2) == 0x001078, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast_3) == 0x001080, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast_4) == 0x001088, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Divide_DoubleDouble_B_WideningCast_5) == 0x001090, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Divide_DoubleDouble_B_WideningCast_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Subtract_DoubleDouble_A_WideningCast) == 0x001098, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Subtract_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Add_DoubleDouble_A_WideningCast) == 0x0010A0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Add_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_VariableSet_TargetArmLength_NarrowingCast) == 0x0010A8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_VariableSet_TargetArmLength_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, K2Node_VariableSet_TargetArmLength_NarrowingCast_1) == 0x0010AC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::K2Node_VariableSet_TargetArmLength_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_WeaponSway_Delta_time_WideningCast) == 0x0010B0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_WeaponSway_Delta_time_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Eye_of_Reach_Sway_Delta_time_WideningCast) == 0x0010B8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Eye_of_Reach_Sway_Delta_time_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Blunderbuss_Sway_Delta_time_WideningCast) == 0x0010C0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Blunderbuss_Sway_Delta_time_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0010C8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_A_WideningCast_1) == 0x0010D0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_AddControllerPitchInput_Val_NarrowingCast) == 0x0010D8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_AddControllerPitchInput_Val_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_A_WideningCast_2) == 0x0010E0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_A_WideningCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_AddControllerYawInput_Val_NarrowingCast) == 0x0010E8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_AddControllerYawInput_Val_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_AddControllerPitchInput_Val_NarrowingCast_1) == 0x0010EC, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_AddControllerPitchInput_Val_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Multiply_DoubleDouble_A_WideningCast_3) == 0x0010F0, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Multiply_DoubleDouble_A_WideningCast_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_AddControllerYawInput_Val_NarrowingCast_1) == 0x0010F8, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_AddControllerYawInput_Val_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x001100, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast) == 0x001108, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_1) == 0x00110C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Delay_Duration_NarrowingCast) == 0x001110, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Delay_Duration_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_2) == 0x001114, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_3) == 0x001118, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Delay_Duration_NarrowingCast_1) == 0x00111C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Delay_Duration_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_Delay_Duration_NarrowingCast_2) == 0x001120, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_Delay_Duration_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_4) == 0x001124, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_5) == 0x001128, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_6) == 0x00112C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_7) == 0x001130, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_8) == 0x001134, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_9) == 0x001138, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_SetFieldOfView_InFieldOfView_NarrowingCast_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_ExecuteUbergraph_GusPlayer, CallFunc_MakeRotator_Pitch_NarrowingCast) == 0x00113C, "Member 'GusPlayer_C_ExecuteUbergraph_GusPlayer::CallFunc_MakeRotator_Pitch_NarrowingCast' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Equip weapon
// 0x0040 (0x0040 - 0x0000)
struct GusPlayer_C_Equip_weapon final
{
public:
	TArray<class UChildActorComponent*>           Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Equip_weapon) == 0x000008, "Wrong alignment on GusPlayer_C_Equip_weapon");
static_assert(sizeof(GusPlayer_C_Equip_weapon) == 0x000040, "Wrong size on GusPlayer_C_Equip_weapon");
static_assert(offsetof(GusPlayer_C_Equip_weapon, Array) == 0x000000, "Member 'GusPlayer_C_Equip_weapon::Array' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'GusPlayer_C_Equip_weapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GusPlayer_C_Equip_weapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'GusPlayer_C_Equip_weapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_Array_Get_Item) == 0x000020, "Member 'GusPlayer_C_Equip_weapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'GusPlayer_C_Equip_weapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'GusPlayer_C_Equip_weapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'GusPlayer_C_Equip_weapon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Equip_weapon, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000038, "Member 'GusPlayer_C_Equip_weapon::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Death
// 0x0020 (0x0020 - 0x0000)
struct GusPlayer_C_Death final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Death) == 0x000008, "Wrong alignment on GusPlayer_C_Death");
static_assert(sizeof(GusPlayer_C_Death) == 0x000020, "Wrong size on GusPlayer_C_Death");
static_assert(offsetof(GusPlayer_C_Death, PlayerController) == 0x000000, "Member 'GusPlayer_C_Death::PlayerController' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Death, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'GusPlayer_C_Death::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.CorrectPitch multicast
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_CorrectPitch_multicast final
{
public:
	struct FRotator                               Rotation_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GusPlayer_C_CorrectPitch_multicast) == 0x000008, "Wrong alignment on GusPlayer_C_CorrectPitch_multicast");
static_assert(sizeof(GusPlayer_C_CorrectPitch_multicast) == 0x000018, "Wrong size on GusPlayer_C_CorrectPitch_multicast");
static_assert(offsetof(GusPlayer_C_CorrectPitch_multicast, Rotation_0) == 0x000000, "Member 'GusPlayer_C_CorrectPitch_multicast::Rotation_0' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Correct pitch
// 0x0018 (0x0018 - 0x0000)
struct GusPlayer_C_Correct_pitch final
{
public:
	struct FRotator                               Rotation_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GusPlayer_C_Correct_pitch) == 0x000008, "Wrong alignment on GusPlayer_C_Correct_pitch");
static_assert(sizeof(GusPlayer_C_Correct_pitch) == 0x000018, "Wrong size on GusPlayer_C_Correct_pitch");
static_assert(offsetof(GusPlayer_C_Correct_pitch, Rotation_0) == 0x000000, "Member 'GusPlayer_C_Correct_pitch::Rotation_0' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Blunderbuss Sway
// 0x0238 (0x0238 - 0x0000)
struct GusPlayer_C_Blunderbuss_Sway final
{
public:
	double                                        Delta_Time;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_NarrowingCast;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_WideningCast;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_WideningCast_1;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_WideningCast;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_WideningCast_1;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_1;        // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_WideningCast_1;   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_WideningCast_1;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_1;         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_NarrowingCast_1;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_NarrowingCast_2;        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_NarrowingCast_2;         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Blunderbuss_Sway) == 0x000008, "Wrong alignment on GusPlayer_C_Blunderbuss_Sway");
static_assert(sizeof(GusPlayer_C_Blunderbuss_Sway) == 0x000238, "Wrong size on GusPlayer_C_Blunderbuss_Sway");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, Delta_Time) == 0x000000, "Member 'GusPlayer_C_Blunderbuss_Sway::Delta_Time' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Roll_1) == 0x00001C, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Pitch_1) == 0x000020, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Yaw_1) == 0x000024, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_GetInputAxisValue_ReturnValue) == 0x000028, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x000080, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Roll_2) == 0x000084, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Pitch_2) == 0x000088, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_BreakRotator_Yaw_2) == 0x00008C, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_ReturnValue_1) == 0x0000A0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_FClamp_ReturnValue_1) == 0x0000B8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_ReturnValue_2) == 0x0000C0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_RInterpTo_DeltaTime_NarrowingCast) == 0x0001C0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_RInterpTo_DeltaTime_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_B_WideningCast) == 0x0001C8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Subtract_DoubleDouble_B_WideningCast) == 0x0001D0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Subtract_DoubleDouble_B_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_B_WideningCast_1) == 0x0001D8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_B_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_A_WideningCast) == 0x0001E0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Subtract_DoubleDouble_A_WideningCast) == 0x0001E8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Subtract_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Add_DoubleDouble_A_WideningCast_1) == 0x0001F0, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Add_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Multiply_DoubleDouble_A_WideningCast) == 0x0001F8, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Multiply_DoubleDouble_A_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Yaw_NarrowingCast) == 0x000200, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Yaw_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast) == 0x000204, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Roll_NarrowingCast) == 0x000208, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Roll_NarrowingCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast_1) == 0x00020C, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_Multiply_DoubleDouble_A_WideningCast_1) == 0x000210, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_Multiply_DoubleDouble_A_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_FClamp_Value_WideningCast) == 0x000218, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_FClamp_Value_WideningCast' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_FClamp_Value_WideningCast_1) == 0x000220, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_FClamp_Value_WideningCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Roll_NarrowingCast_1) == 0x000228, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Roll_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Yaw_NarrowingCast_1) == 0x00022C, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Yaw_NarrowingCast_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Pitch_NarrowingCast_2) == 0x000230, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Pitch_NarrowingCast_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_Sway, CallFunc_MakeRotator_Roll_NarrowingCast_2) == 0x000234, "Member 'GusPlayer_C_Blunderbuss_Sway::CallFunc_MakeRotator_Roll_NarrowingCast_2' has a wrong offset!");

// Function GusPlayer.GusPlayer_C.Blunderbuss projectile spawn
// 0x0460 (0x0460 - 0x0000)
struct GusPlayer_C_Blunderbuss_projectile_spawn final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0060(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x00E0(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_3;     // 0x0140(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_4;     // 0x01C0(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_5;     // 0x0220(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_6;     // 0x02A0(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_7;     // 0x0300(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_8;     // 0x0380(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_9;     // 0x03E0(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlunderProjectile_Client_C*            CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GusPlayer_C_Blunderbuss_projectile_spawn) == 0x000010, "Wrong alignment on GusPlayer_C_Blunderbuss_projectile_spawn");
static_assert(sizeof(GusPlayer_C_Blunderbuss_projectile_spawn) == 0x000460, "Wrong size on GusPlayer_C_Blunderbuss_projectile_spawn");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000060, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000C8, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000D8, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x0000E0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_3) == 0x000140, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0001A0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0001A8, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0001B0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x0001B8, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_4) == 0x0001C0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_5) == 0x000220, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000280, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000288, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000290, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000298, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_6) == 0x0002A0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_7) == 0x000300, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000360, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x000368, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x000370, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x000378, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_8) == 0x000380, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_K2_GetComponentToWorld_ReturnValue_9) == 0x0003E0, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_K2_GetComponentToWorld_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x000440, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x000448, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x000450, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GusPlayer_C_Blunderbuss_projectile_spawn, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x000458, "Member 'GusPlayer_C_Blunderbuss_projectile_spawn::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");

}

