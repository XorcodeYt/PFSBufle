#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Rocketeer

#include "Basic.hpp"

#include "Rocketeer_classes.hpp"
#include "Rocketeer_parameters.hpp"


namespace SDK
{

// Function Rocketeer.Rocketeer_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Stop sprint
// (Public, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Stop_sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Stop sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Start sprint
// (Public, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Start_sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Start sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Speed buff
// (BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Speed_buff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Speed buff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.ServerJump
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::ServerJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "ServerJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "ReceiveTick");

	Params::Rocketeer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARocketeer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "ReceiveAnyDamage");

	Params::Rocketeer_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ARocketeer_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "OnLanded");

	Params::Rocketeer_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.letgoaltfireserver
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::letgoaltfireserver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "letgoaltfireserver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.InpTchEvt_K2Node_InputTouchEvent_0
// (BlueprintEvent)
// Parameters:
// ETouchIndex                             FingerIndex_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::InpTchEvt_K2Node_InputTouchEvent_0(ETouchIndex FingerIndex_0, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpTchEvt_K2Node_InputTouchEvent_0");

	Params::Rocketeer_C_InpTchEvt_K2Node_InputTouchEvent_0 Parms{};

	Parms.FingerIndex_0 = FingerIndex_0;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C. Left Mouse_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::_Left_Mouse_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", " Left Mouse_K2Node_InputAxisEvent_2");

	Params::Rocketeer_C__Left_Mouse_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C. Left_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::_Left_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", " Left_K2Node_InputAxisEvent_1");

	Params::Rocketeer_C__Left_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C. Backward_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::_Backward_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", " Backward_K2Node_InputAxisEvent_0");

	Params::Rocketeer_C__Backward_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C. Down Mouse_K2Node_InputAxisEvent_3
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::_Down_Mouse_K2Node_InputAxisEvent_3(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", " Down Mouse_K2Node_InputAxisEvent_3");

	Params::Rocketeer_C__Down_Mouse_K2Node_InputAxisEvent_3 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_Sprint_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_Sprint_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_1");

	Params::Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_Sprint_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_Sprint_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_0");

	Params::Rocketeer_C_InpActEvt_Sprint_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_P_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_P_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_P_K2Node_InputKeyEvent_0");

	Params::Rocketeer_C_InpActEvt_P_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");

	Params::Rocketeer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_Jump_K2Node_InputActionEvent_2");

	Params::Rocketeer_C_InpActEvt_Jump_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.InpActEvt_F7_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ARocketeer_C::InpActEvt_F7_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "InpActEvt_F7_K2Node_InputKeyEvent_2");

	Params::Rocketeer_C_InpActEvt_F7_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.Fire server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Fire_server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Fire server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Fire multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Fire_multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Fire multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Explosion_client
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Explosion_client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Explosion_client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.ExecuteUbergraph_Rocketeer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARocketeer_C::ExecuteUbergraph_Rocketeer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "ExecuteUbergraph_Rocketeer");

	Params::Rocketeer_C_ExecuteUbergraph_Rocketeer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.Correct pitch multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARocketeer_C::Correct_pitch_multicast(const struct FRotator& Rotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Correct pitch multicast");

	Params::Rocketeer_C_Correct_pitch_multicast Parms{};

	Parms.Rotation_0 = std::move(Rotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.Correct pitch
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARocketeer_C::Correct_pitch(const struct FRotator& Rotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Correct pitch");

	Params::Rocketeer_C_Correct_pitch Parms{};

	Parms.Rotation_0 = std::move(Rotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Rocketeer.Rocketeer_C.altfire server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::altfire_server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "altfire server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Rocketeer.Rocketeer_C.Altfire multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ARocketeer_C::Altfire_multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Rocketeer_C", "Altfire multicast");

	UObject::ProcessEvent(Func, nullptr);
}

}

